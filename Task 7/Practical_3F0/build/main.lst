ARM GAS  C:\Users\Sowanga\AppData\Local\Temp\ccipEvRa.s 			page 1


   1              		.cpu cortex-m0
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/Src/main.c"
  18              		.section	.text.MX_GPIO_Init,"ax",%progbits
  19              		.align	1
  20              		.syntax unified
  21              		.code	16
  22              		.thumb_func
  24              	MX_GPIO_Init:
  25              	.LFB42:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2025 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** 
  25:Core/Src/main.c **** /* USER CODE END Includes */
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  28:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  29:Core/Src/main.c **** 
  30:Core/Src/main.c **** /* USER CODE END PTD */
  31:Core/Src/main.c **** 
  32:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  33:Core/Src/main.c **** /* USER CODE BEGIN PD */
ARM GAS  C:\Users\Sowanga\AppData\Local\Temp\ccipEvRa.s 			page 2


  34:Core/Src/main.c **** #define MAX_ITER 100
  35:Core/Src/main.c **** #define Width 192
  36:Core/Src/main.c **** #define Height 192
  37:Core/Src/main.c **** /* USER CODE END PD */
  38:Core/Src/main.c **** 
  39:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  40:Core/Src/main.c **** /* USER CODE BEGIN PM */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* USER CODE END PM */
  43:Core/Src/main.c **** 
  44:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** /* USER CODE BEGIN PV */
  47:Core/Src/main.c **** //TODO: Define variables you think you might need
  48:Core/Src/main.c **** static uint64_t CheckSum;
  49:Core/Src/main.c **** static uint32_t StartTime;
  50:Core/Src/main.c **** static uint32_t EndTime;
  51:Core/Src/main.c **** static uint32_t ExecutionTime;
  52:Core/Src/main.c **** // - Performance timing variables (e.g execution time, throughput, pixels per second, clock cycles)
  53:Core/Src/main.c **** 
  54:Core/Src/main.c **** /* USER CODE END PV */
  55:Core/Src/main.c **** 
  56:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  57:Core/Src/main.c **** void SystemClock_Config(void);
  58:Core/Src/main.c **** static void MX_GPIO_Init(void);
  59:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  60:Core/Src/main.c **** //TODO: Define any function prototypes you might need such as the calculate Mandelbrot function amo
  61:Core/Src/main.c **** uint64_t calculate_mandelbrot_fixed_point_arithmetic(int width, int height, int max_iterations, int
  62:Core/Src/main.c **** /* USER CODE END PFP */
  63:Core/Src/main.c **** 
  64:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  65:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  66:Core/Src/main.c **** 
  67:Core/Src/main.c **** /* USER CODE END 0 */
  68:Core/Src/main.c **** 
  69:Core/Src/main.c **** /**
  70:Core/Src/main.c ****   * @brief  The application entry point.
  71:Core/Src/main.c ****   * @retval int
  72:Core/Src/main.c ****   */
  73:Core/Src/main.c **** int main(void)
  74:Core/Src/main.c **** {
  75:Core/Src/main.c **** 
  76:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  77:Core/Src/main.c **** 
  78:Core/Src/main.c ****   /* USER CODE END 1 */
  79:Core/Src/main.c **** 
  80:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  81:Core/Src/main.c **** 
  82:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  83:Core/Src/main.c ****   HAL_Init();
  84:Core/Src/main.c **** 
  85:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  86:Core/Src/main.c **** 
  87:Core/Src/main.c ****   /* USER CODE END Init */
  88:Core/Src/main.c **** 
  89:Core/Src/main.c ****   /* Configure the system clock */
  90:Core/Src/main.c ****   SystemClock_Config();
ARM GAS  C:\Users\Sowanga\AppData\Local\Temp\ccipEvRa.s 			page 3


  91:Core/Src/main.c **** 
  92:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  93:Core/Src/main.c **** 
  94:Core/Src/main.c ****   /* USER CODE END SysInit */
  95:Core/Src/main.c **** 
  96:Core/Src/main.c ****   /* Initialize all configured peripherals */
  97:Core/Src/main.c ****   MX_GPIO_Init();
  98:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
  99:Core/Src/main.c **** 
 100:Core/Src/main.c ****   /* USER CODE END 2 */
 101:Core/Src/main.c **** 
 102:Core/Src/main.c ****   /* Infinite loop */
 103:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 104:Core/Src/main.c ****   while (1)
 105:Core/Src/main.c ****   {
 106:Core/Src/main.c **** 	    /* USER CODE END WHILE */
 107:Core/Src/main.c **** 
 108:Core/Src/main.c **** 	    /* USER CODE BEGIN 3 */
 109:Core/Src/main.c **** 		  //TODO: Visual indicator: Turn on LED0 to signal processing start
 110:Core/Src/main.c **** 		  HAL_GPIO_WritePin(GPIOB,GPIO_PIN_0, GPIO_PIN_SET);
 111:Core/Src/main.c **** 
 112:Core/Src/main.c **** 		  //TODO: Benchmark and Profile Performance
 113:Core/Src/main.c **** 		  StartTime = HAL_GetTick();
 114:Core/Src/main.c **** 		  CheckSum = calculate_mandelbrot_fixed_point_arithmetic(Width,Height,MAX_ITER,1000);
 115:Core/Src/main.c **** 		  EndTime = HAL_GetTick();
 116:Core/Src/main.c **** 		  ExecutionTime = EndTime - StartTime;
 117:Core/Src/main.c **** 		  //TODO: Visual indicator: Turn on LED1 to signal processing start
 118:Core/Src/main.c **** 		  HAL_GPIO_WritePin(GPIOB,GPIO_PIN_1, GPIO_PIN_SET);
 119:Core/Src/main.c **** 
 120:Core/Src/main.c **** 		  //TODO: Keep the LEDs ON for 2s
 121:Core/Src/main.c **** 		  HAL_Delay(2000);
 122:Core/Src/main.c **** 
 123:Core/Src/main.c **** 		  //TODO: Turn OFF LEDs
 124:Core/Src/main.c **** 		  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0, GPIO_PIN_RESET);
 125:Core/Src/main.c **** 		  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_1, GPIO_PIN_RESET);
 126:Core/Src/main.c ****   }
 127:Core/Src/main.c ****   /* USER CODE END 3 */
 128:Core/Src/main.c **** }
 129:Core/Src/main.c **** 
 130:Core/Src/main.c **** /**
 131:Core/Src/main.c ****   * @brief System Clock Configuration
 132:Core/Src/main.c ****   * @retval None
 133:Core/Src/main.c ****   */
 134:Core/Src/main.c **** void SystemClock_Config(void)
 135:Core/Src/main.c **** {
 136:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 137:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 138:Core/Src/main.c **** 
 139:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 140:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 141:Core/Src/main.c ****   */
 142:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 143:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 144:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 145:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 146:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 147:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL12;
ARM GAS  C:\Users\Sowanga\AppData\Local\Temp\ccipEvRa.s 			page 4


 148:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PREDIV = RCC_PREDIV_DIV1;
 149:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 150:Core/Src/main.c ****   {
 151:Core/Src/main.c ****     Error_Handler();
 152:Core/Src/main.c ****   }
 153:Core/Src/main.c **** 
 154:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 155:Core/Src/main.c ****   */
 156:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 157:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 158:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 159:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 160:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 161:Core/Src/main.c **** 
 162:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_1) != HAL_OK)
 163:Core/Src/main.c ****   {
 164:Core/Src/main.c ****     Error_Handler();
 165:Core/Src/main.c ****   }
 166:Core/Src/main.c **** }
 167:Core/Src/main.c **** 
 168:Core/Src/main.c **** /**
 169:Core/Src/main.c ****   * @brief GPIO Initialization Function
 170:Core/Src/main.c ****   * @param None
 171:Core/Src/main.c ****   * @retval None
 172:Core/Src/main.c ****   */
 173:Core/Src/main.c **** static void MX_GPIO_Init(void)
 174:Core/Src/main.c **** {
  26              		.loc 1 174 1 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 32
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 10B5     		push	{r4, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 8
  33              		.cfi_offset 4, -8
  34              		.cfi_offset 14, -4
  35 0002 88B0     		sub	sp, sp, #32
  36              	.LCFI1:
  37              		.cfi_def_cfa_offset 40
 175:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  38              		.loc 1 175 3 view .LVU1
  39              		.loc 1 175 20 is_stmt 0 view .LVU2
  40 0004 1422     		movs	r2, #20
  41 0006 0021     		movs	r1, #0
  42 0008 03A8     		add	r0, sp, #12
  43 000a FFF7FEFF 		bl	memset
  44              	.LVL0:
 176:Core/Src/main.c ****   /* USER CODE BEGIN MX_GPIO_Init_1 */
 177:Core/Src/main.c **** 
 178:Core/Src/main.c ****   /* USER CODE END MX_GPIO_Init_1 */
 179:Core/Src/main.c **** 
 180:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 181:Core/Src/main.c ****   __HAL_RCC_GPIOF_CLK_ENABLE();
  45              		.loc 1 181 3 is_stmt 1 view .LVU3
  46              	.LBB4:
  47              		.loc 1 181 3 view .LVU4
  48              		.loc 1 181 3 view .LVU5
ARM GAS  C:\Users\Sowanga\AppData\Local\Temp\ccipEvRa.s 			page 5


  49 000e 174B     		ldr	r3, .L2
  50 0010 5A69     		ldr	r2, [r3, #20]
  51 0012 8021     		movs	r1, #128
  52 0014 C903     		lsls	r1, r1, #15
  53 0016 0A43     		orrs	r2, r1
  54 0018 5A61     		str	r2, [r3, #20]
  55              		.loc 1 181 3 view .LVU6
  56 001a 5A69     		ldr	r2, [r3, #20]
  57 001c 0A40     		ands	r2, r1
  58 001e 0092     		str	r2, [sp]
  59              		.loc 1 181 3 view .LVU7
  60 0020 009A     		ldr	r2, [sp]
  61              	.LBE4:
  62              		.loc 1 181 3 view .LVU8
 182:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  63              		.loc 1 182 3 view .LVU9
  64              	.LBB5:
  65              		.loc 1 182 3 view .LVU10
  66              		.loc 1 182 3 view .LVU11
  67 0022 5A69     		ldr	r2, [r3, #20]
  68 0024 8021     		movs	r1, #128
  69 0026 C902     		lsls	r1, r1, #11
  70 0028 0A43     		orrs	r2, r1
  71 002a 5A61     		str	r2, [r3, #20]
  72              		.loc 1 182 3 view .LVU12
  73 002c 5A69     		ldr	r2, [r3, #20]
  74 002e 0A40     		ands	r2, r1
  75 0030 0192     		str	r2, [sp, #4]
  76              		.loc 1 182 3 view .LVU13
  77 0032 019A     		ldr	r2, [sp, #4]
  78              	.LBE5:
  79              		.loc 1 182 3 view .LVU14
 183:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  80              		.loc 1 183 3 view .LVU15
  81              	.LBB6:
  82              		.loc 1 183 3 view .LVU16
  83              		.loc 1 183 3 view .LVU17
  84 0034 5A69     		ldr	r2, [r3, #20]
  85 0036 8021     		movs	r1, #128
  86 0038 8902     		lsls	r1, r1, #10
  87 003a 0A43     		orrs	r2, r1
  88 003c 5A61     		str	r2, [r3, #20]
  89              		.loc 1 183 3 view .LVU18
  90 003e 5B69     		ldr	r3, [r3, #20]
  91 0040 0B40     		ands	r3, r1
  92 0042 0293     		str	r3, [sp, #8]
  93              		.loc 1 183 3 view .LVU19
  94 0044 029B     		ldr	r3, [sp, #8]
  95              	.LBE6:
  96              		.loc 1 183 3 view .LVU20
 184:Core/Src/main.c **** 
 185:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 186:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
  97              		.loc 1 186 3 view .LVU21
  98 0046 0A4C     		ldr	r4, .L2+4
  99 0048 0022     		movs	r2, #0
 100 004a FF21     		movs	r1, #255
ARM GAS  C:\Users\Sowanga\AppData\Local\Temp\ccipEvRa.s 			page 6


 101 004c 2000     		movs	r0, r4
 102 004e FFF7FEFF 		bl	HAL_GPIO_WritePin
 103              	.LVL1:
 187:Core/Src/main.c ****                           |GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7, GPIO_PIN_RESET);
 188:Core/Src/main.c **** 
 189:Core/Src/main.c ****   /*Configure GPIO pins : PB0 PB1 PB2 PB3
 190:Core/Src/main.c ****                            PB4 PB5 PB6 PB7 */
 191:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 104              		.loc 1 191 3 view .LVU22
 105              		.loc 1 191 23 is_stmt 0 view .LVU23
 106 0052 FF23     		movs	r3, #255
 107 0054 0393     		str	r3, [sp, #12]
 192:Core/Src/main.c ****                           |GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7;
 193:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 108              		.loc 1 193 3 is_stmt 1 view .LVU24
 109              		.loc 1 193 24 is_stmt 0 view .LVU25
 110 0056 FE3B     		subs	r3, r3, #254
 111 0058 0493     		str	r3, [sp, #16]
 194:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 112              		.loc 1 194 3 is_stmt 1 view .LVU26
 113              		.loc 1 194 24 is_stmt 0 view .LVU27
 114 005a 0023     		movs	r3, #0
 115 005c 0593     		str	r3, [sp, #20]
 195:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 116              		.loc 1 195 3 is_stmt 1 view .LVU28
 117              		.loc 1 195 25 is_stmt 0 view .LVU29
 118 005e 0693     		str	r3, [sp, #24]
 196:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 119              		.loc 1 196 3 is_stmt 1 view .LVU30
 120 0060 03A9     		add	r1, sp, #12
 121 0062 2000     		movs	r0, r4
 122 0064 FFF7FEFF 		bl	HAL_GPIO_Init
 123              	.LVL2:
 197:Core/Src/main.c **** 
 198:Core/Src/main.c ****   /* USER CODE BEGIN MX_GPIO_Init_2 */
 199:Core/Src/main.c **** 
 200:Core/Src/main.c ****   /* USER CODE END MX_GPIO_Init_2 */
 201:Core/Src/main.c **** }
 124              		.loc 1 201 1 is_stmt 0 view .LVU31
 125 0068 08B0     		add	sp, sp, #32
 126              		@ sp needed
 127 006a 10BD     		pop	{r4, pc}
 128              	.L3:
 129              		.align	2
 130              	.L2:
 131 006c 00100240 		.word	1073876992
 132 0070 00040048 		.word	1207960576
 133              		.cfi_endproc
 134              	.LFE42:
 136              		.global	__aeabi_lmul
 137              		.global	__aeabi_ldivmod
 138              		.global	__aeabi_idiv
 139              		.section	.text.calculate_mandelbrot_fixed_point_arithmetic,"ax",%progbits
 140              		.align	1
 141              		.global	calculate_mandelbrot_fixed_point_arithmetic
 142              		.syntax unified
 143              		.code	16
ARM GAS  C:\Users\Sowanga\AppData\Local\Temp\ccipEvRa.s 			page 7


 144              		.thumb_func
 146              	calculate_mandelbrot_fixed_point_arithmetic:
 147              	.LVL3:
 148              	.LFB43:
 202:Core/Src/main.c **** 
 203:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 204:Core/Src/main.c **** //TODO: Function signatures you defined previously , implement them here
 205:Core/Src/main.c **** uint64_t calculate_mandelbrot_fixed_point_arithmetic(int width, int height, int max_iterations, int
 149              		.loc 1 205 108 is_stmt 1 view -0
 150              		.cfi_startproc
 151              		@ args = 0, pretend = 0, frame = 96
 152              		@ frame_needed = 0, uses_anonymous_args = 0
 153              		.loc 1 205 108 is_stmt 0 view .LVU33
 154 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 155              	.LCFI2:
 156              		.cfi_def_cfa_offset 20
 157              		.cfi_offset 4, -20
 158              		.cfi_offset 5, -16
 159              		.cfi_offset 6, -12
 160              		.cfi_offset 7, -8
 161              		.cfi_offset 14, -4
 162 0002 DE46     		mov	lr, fp
 163 0004 5746     		mov	r7, r10
 164 0006 4E46     		mov	r6, r9
 165 0008 4546     		mov	r5, r8
 166 000a E0B5     		push	{r5, r6, r7, lr}
 167              	.LCFI3:
 168              		.cfi_def_cfa_offset 36
 169              		.cfi_offset 8, -36
 170              		.cfi_offset 9, -32
 171              		.cfi_offset 10, -28
 172              		.cfi_offset 11, -24
 173 000c 99B0     		sub	sp, sp, #100
 174              	.LCFI4:
 175              		.cfi_def_cfa_offset 136
 176 000e 0C00     		movs	r4, r1
 177 0010 9146     		mov	r9, r2
 178 0012 9A46     		mov	r10, r3
 206:Core/Src/main.c ****     uint64_t mandelbrot_sum = 0;
 179              		.loc 1 206 5 is_stmt 1 view .LVU34
 180              	.LVL4:
 207:Core/Src/main.c **** 
 208:Core/Src/main.c ****     for (int y = 0; y < height; y++) {
 181              		.loc 1 208 5 view .LVU35
 182              	.LBB7:
 183              		.loc 1 208 10 view .LVU36
 184              		.loc 1 208 14 is_stmt 0 view .LVU37
 185 0014 0025     		movs	r5, #0
 186              	.LBE7:
 206:Core/Src/main.c ****     uint64_t mandelbrot_sum = 0;
 187              		.loc 1 206 14 view .LVU38
 188 0016 0022     		movs	r2, #0
 189              	.LVL5:
 206:Core/Src/main.c ****     uint64_t mandelbrot_sum = 0;
 190              		.loc 1 206 14 view .LVU39
 191 0018 0023     		movs	r3, #0
 192              	.LVL6:
ARM GAS  C:\Users\Sowanga\AppData\Local\Temp\ccipEvRa.s 			page 8


 206:Core/Src/main.c ****     uint64_t mandelbrot_sum = 0;
 193              		.loc 1 206 14 view .LVU40
 194 001a 1492     		str	r2, [sp, #80]
 195 001c 1593     		str	r3, [sp, #84]
 196 001e 1390     		str	r0, [sp, #76]
 197 0020 5346     		mov	r3, r10
 198 0022 1693     		str	r3, [sp, #88]
 199              	.LBB15:
 200              		.loc 1 208 5 view .LVU41
 201 0024 A1E0     		b	.L5
 202              	.LVL7:
 203              	.L9:
 204              	.LBB8:
 205              	.LBB9:
 206              	.LBB10:
 207              	.LBB11:
 209:Core/Src/main.c ****         int64_t y0 = ((int64_t)y * (2 * scale)) / height - scale;
 210:Core/Src/main.c **** 
 211:Core/Src/main.c ****         for (int x = 0; x < width; x++) {
 212:Core/Src/main.c ****             int64_t x0 = ((int64_t)x * (35 * scale) / (10 * width)) - (25 * scale / 10);
 213:Core/Src/main.c ****             int64_t xi = 0, yi = 0;
 214:Core/Src/main.c ****             int iteration = 0;
 215:Core/Src/main.c **** 
 216:Core/Src/main.c ****             while (iteration < max_iterations &&
 217:Core/Src/main.c ****                    ((xi * xi + yi * yi) <= (4LL * scale * scale))) {
 218:Core/Src/main.c ****                 int64_t x_sq = (xi * xi) / scale;
 208              		.loc 1 218 17 is_stmt 1 view .LVU42
 209              		.loc 1 218 25 is_stmt 0 view .LVU43
 210 0026 3200     		movs	r2, r6
 211 0028 3B00     		movs	r3, r7
 212 002a 0098     		ldr	r0, [sp]
 213 002c 0199     		ldr	r1, [sp, #4]
 214 002e FFF7FEFF 		bl	__aeabi_ldivmod
 215              	.LVL8:
 216 0032 0400     		movs	r4, r0
 217 0034 0D00     		movs	r5, r1
 218              	.LVL9:
 219:Core/Src/main.c ****                 int64_t y_sq = (yi * yi) / scale;
 219              		.loc 1 219 17 is_stmt 1 view .LVU44
 220              		.loc 1 219 25 is_stmt 0 view .LVU45
 221 0036 3200     		movs	r2, r6
 222 0038 3B00     		movs	r3, r7
 223 003a 0298     		ldr	r0, [sp, #8]
 224 003c 0399     		ldr	r1, [sp, #12]
 225 003e FFF7FEFF 		bl	__aeabi_ldivmod
 226              	.LVL10:
 227 0042 0090     		str	r0, [sp]
 228 0044 0191     		str	r1, [sp, #4]
 229              	.LVL11:
 220:Core/Src/main.c ****                 int64_t xy   = (xi * yi) / scale;
 230              		.loc 1 220 17 is_stmt 1 view .LVU46
 231              		.loc 1 220 36 is_stmt 0 view .LVU47
 232 0046 049A     		ldr	r2, [sp, #16]
 233 0048 059B     		ldr	r3, [sp, #20]
 234 004a 0698     		ldr	r0, [sp, #24]
 235 004c 0799     		ldr	r1, [sp, #28]
 236 004e FFF7FEFF 		bl	__aeabi_lmul
ARM GAS  C:\Users\Sowanga\AppData\Local\Temp\ccipEvRa.s 			page 9


 237              	.LVL12:
 238              		.loc 1 220 25 view .LVU48
 239 0052 3200     		movs	r2, r6
 240 0054 3B00     		movs	r3, r7
 241 0056 FFF7FEFF 		bl	__aeabi_ldivmod
 242              	.LVL13:
 243 005a 0200     		movs	r2, r0
 244 005c 0B00     		movs	r3, r1
 245              	.LVL14:
 221:Core/Src/main.c ****                 int64_t temp_xi = x_sq - y_sq + x0;
 246              		.loc 1 221 17 is_stmt 1 view .LVU49
 247              		.loc 1 221 40 is_stmt 0 view .LVU50
 248 005e 0098     		ldr	r0, [sp]
 249 0060 0199     		ldr	r1, [sp, #4]
 250 0062 241A     		subs	r4, r4, r0
 251 0064 8D41     		sbcs	r5, r5, r1
 252              	.LVL15:
 253              		.loc 1 221 25 view .LVU51
 254 0066 0898     		ldr	r0, [sp, #32]
 255 0068 0999     		ldr	r1, [sp, #36]
 256 006a 2418     		adds	r4, r4, r0
 257 006c 4D41     		adcs	r5, r5, r1
 258 006e 0694     		str	r4, [sp, #24]
 259 0070 0795     		str	r5, [sp, #28]
 260              	.LVL16:
 222:Core/Src/main.c ****                 yi = (2 * xy) + y0;
 261              		.loc 1 222 17 is_stmt 1 view .LVU52
 262              		.loc 1 222 25 is_stmt 0 view .LVU53
 263 0072 9218     		adds	r2, r2, r2
 264 0074 5B41     		adcs	r3, r3, r3
 265              	.LVL17:
 266              		.loc 1 222 20 view .LVU54
 267 0076 0C98     		ldr	r0, [sp, #48]
 268 0078 0D99     		ldr	r1, [sp, #52]
 269 007a 8018     		adds	r0, r0, r2
 270 007c 5941     		adcs	r1, r1, r3
 271 007e 0490     		str	r0, [sp, #16]
 272 0080 0591     		str	r1, [sp, #20]
 273              	.LVL18:
 223:Core/Src/main.c ****                 xi = temp_xi;
 274              		.loc 1 223 17 is_stmt 1 view .LVU55
 224:Core/Src/main.c **** 
 225:Core/Src/main.c ****                 iteration++;
 275              		.loc 1 225 17 view .LVU56
 276              		.loc 1 225 26 is_stmt 0 view .LVU57
 277 0082 0123     		movs	r3, #1
 278 0084 9C46     		mov	ip, r3
 279 0086 E044     		add	r8, r8, ip
 280              	.LVL19:
 281              	.L7:
 282              		.loc 1 225 26 view .LVU58
 283              	.LBE11:
 216:Core/Src/main.c ****                    ((xi * xi + yi * yi) <= (4LL * scale * scale))) {
 284              		.loc 1 216 47 is_stmt 1 view .LVU59
 285 0088 C845     		cmp	r8, r9
 286 008a 29DA     		bge	.L8
 217:Core/Src/main.c ****                 int64_t x_sq = (xi * xi) / scale;
ARM GAS  C:\Users\Sowanga\AppData\Local\Temp\ccipEvRa.s 			page 10


 287              		.loc 1 217 25 is_stmt 0 view .LVU60
 288 008c 0698     		ldr	r0, [sp, #24]
 289 008e 0799     		ldr	r1, [sp, #28]
 290 0090 0200     		movs	r2, r0
 291 0092 0B00     		movs	r3, r1
 292 0094 FFF7FEFF 		bl	__aeabi_lmul
 293              	.LVL20:
 294 0098 0090     		str	r0, [sp]
 295 009a 0191     		str	r1, [sp, #4]
 217:Core/Src/main.c ****                 int64_t x_sq = (xi * xi) / scale;
 296              		.loc 1 217 35 view .LVU61
 297 009c 0498     		ldr	r0, [sp, #16]
 298 009e 0599     		ldr	r1, [sp, #20]
 299 00a0 0200     		movs	r2, r0
 300 00a2 0B00     		movs	r3, r1
 301 00a4 FFF7FEFF 		bl	__aeabi_lmul
 302              	.LVL21:
 303 00a8 0290     		str	r0, [sp, #8]
 304 00aa 0391     		str	r1, [sp, #12]
 217:Core/Src/main.c ****                 int64_t x_sq = (xi * xi) / scale;
 305              		.loc 1 217 30 view .LVU62
 306 00ac 009A     		ldr	r2, [sp]
 307 00ae 019B     		ldr	r3, [sp, #4]
 308 00b0 0298     		ldr	r0, [sp, #8]
 309 00b2 0399     		ldr	r1, [sp, #12]
 310 00b4 1218     		adds	r2, r2, r0
 311 00b6 4B41     		adcs	r3, r3, r1
 312 00b8 1400     		movs	r4, r2
 313 00ba 1D00     		movs	r5, r3
 314 00bc 0A94     		str	r4, [sp, #40]
 315 00be 0B95     		str	r5, [sp, #44]
 217:Core/Src/main.c ****                 int64_t x_sq = (xi * xi) / scale;
 316              		.loc 1 217 57 view .LVU63
 317 00c0 3200     		movs	r2, r6
 318 00c2 3B00     		movs	r3, r7
 319 00c4 3000     		movs	r0, r6
 320 00c6 3900     		movs	r1, r7
 321 00c8 FFF7FEFF 		bl	__aeabi_lmul
 322              	.LVL22:
 323 00cc 830F     		lsrs	r3, r0, #30
 324 00ce 8900     		lsls	r1, r1, #2
 325 00d0 1943     		orrs	r1, r3
 326 00d2 8000     		lsls	r0, r0, #2
 216:Core/Src/main.c ****                    ((xi * xi + yi * yi) <= (4LL * scale * scale))) {
 327              		.loc 1 216 47 discriminator 1 view .LVU64
 328 00d4 8D42     		cmp	r5, r1
 329 00d6 03DC     		bgt	.L8
 330 00d8 A5D1     		bne	.L9
 331 00da 0A9B     		ldr	r3, [sp, #40]
 332 00dc 8342     		cmp	r3, r0
 333 00de A2D9     		bls	.L9
 334              	.L8:
 226:Core/Src/main.c ****             }
 227:Core/Src/main.c ****             mandelbrot_sum += iteration;
 335              		.loc 1 227 13 is_stmt 1 view .LVU65
 336              		.loc 1 227 28 is_stmt 0 view .LVU66
 337 00e0 4346     		mov	r3, r8
ARM GAS  C:\Users\Sowanga\AppData\Local\Temp\ccipEvRa.s 			page 11


 338 00e2 1093     		str	r3, [sp, #64]
 339 00e4 DB17     		asrs	r3, r3, #31
 340 00e6 1193     		str	r3, [sp, #68]
 341 00e8 149B     		ldr	r3, [sp, #80]
 342 00ea 159C     		ldr	r4, [sp, #84]
 343 00ec 1099     		ldr	r1, [sp, #64]
 344 00ee 119A     		ldr	r2, [sp, #68]
 345 00f0 5B18     		adds	r3, r3, r1
 346 00f2 5441     		adcs	r4, r4, r2
 347 00f4 1493     		str	r3, [sp, #80]
 348 00f6 1594     		str	r4, [sp, #84]
 349              	.LVL23:
 350              		.loc 1 227 28 view .LVU67
 351              	.LBE10:
 211:Core/Src/main.c ****             int64_t x0 = ((int64_t)x * (35 * scale) / (10 * width)) - (25 * scale / 10);
 352              		.loc 1 211 37 is_stmt 1 discriminator 2 view .LVU68
 353 00f8 129B     		ldr	r3, [sp, #72]
 354              	.LVL24:
 211:Core/Src/main.c ****             int64_t x0 = ((int64_t)x * (35 * scale) / (10 * width)) - (25 * scale / 10);
 355              		.loc 1 211 37 is_stmt 0 discriminator 2 view .LVU69
 356 00fa 0133     		adds	r3, r3, #1
 357 00fc 1293     		str	r3, [sp, #72]
 358              	.LVL25:
 359              	.L6:
 211:Core/Src/main.c ****             int64_t x0 = ((int64_t)x * (35 * scale) / (10 * width)) - (25 * scale / 10);
 360              		.loc 1 211 27 is_stmt 1 discriminator 1 view .LVU70
 361 00fe 129B     		ldr	r3, [sp, #72]
 362 0100 139A     		ldr	r2, [sp, #76]
 363 0102 9342     		cmp	r3, r2
 364 0104 2EDA     		bge	.L13
 365              	.LBB12:
 212:Core/Src/main.c ****             int64_t xi = 0, yi = 0;
 366              		.loc 1 212 13 view .LVU71
 212:Core/Src/main.c ****             int64_t xi = 0, yi = 0;
 367              		.loc 1 212 27 is_stmt 0 view .LVU72
 368 0106 1298     		ldr	r0, [sp, #72]
 369 0108 C117     		asrs	r1, r0, #31
 212:Core/Src/main.c ****             int64_t xi = 0, yi = 0;
 370              		.loc 1 212 44 view .LVU73
 371 010a 5346     		mov	r3, r10
 372 010c 9C00     		lsls	r4, r3, #2
 373 010e 5444     		add	r4, r4, r10
 374 0110 E200     		lsls	r2, r4, #3
 375 0112 121B     		subs	r2, r2, r4
 376 0114 D317     		asrs	r3, r2, #31
 212:Core/Src/main.c ****             int64_t xi = 0, yi = 0;
 377              		.loc 1 212 38 view .LVU74
 378 0116 FFF7FEFF 		bl	__aeabi_lmul
 379              	.LVL26:
 212:Core/Src/main.c ****             int64_t xi = 0, yi = 0;
 380              		.loc 1 212 59 view .LVU75
 381 011a 139B     		ldr	r3, [sp, #76]
 382 011c 9A00     		lsls	r2, r3, #2
 383 011e 9C46     		mov	ip, r3
 384 0120 6244     		add	r2, r2, ip
 385 0122 5200     		lsls	r2, r2, #1
 386 0124 D317     		asrs	r3, r2, #31
ARM GAS  C:\Users\Sowanga\AppData\Local\Temp\ccipEvRa.s 			page 12


 212:Core/Src/main.c ****             int64_t xi = 0, yi = 0;
 387              		.loc 1 212 53 view .LVU76
 388 0126 FFF7FEFF 		bl	__aeabi_ldivmod
 389              	.LVL27:
 390 012a 0090     		str	r0, [sp]
 391 012c 0191     		str	r1, [sp, #4]
 212:Core/Src/main.c ****             int64_t xi = 0, yi = 0;
 392              		.loc 1 212 75 view .LVU77
 393 012e A000     		lsls	r0, r4, #2
 394 0130 2018     		adds	r0, r4, r0
 212:Core/Src/main.c ****             int64_t xi = 0, yi = 0;
 395              		.loc 1 212 83 view .LVU78
 396 0132 0A21     		movs	r1, #10
 397 0134 FFF7FEFF 		bl	__aeabi_idiv
 398              	.LVL28:
 399 0138 0E90     		str	r0, [sp, #56]
 400 013a C317     		asrs	r3, r0, #31
 401 013c 0F93     		str	r3, [sp, #60]
 212:Core/Src/main.c ****             int64_t xi = 0, yi = 0;
 402              		.loc 1 212 21 view .LVU79
 403 013e 009B     		ldr	r3, [sp]
 404 0140 019C     		ldr	r4, [sp, #4]
 405 0142 0E99     		ldr	r1, [sp, #56]
 406 0144 0F9A     		ldr	r2, [sp, #60]
 407 0146 5B1A     		subs	r3, r3, r1
 408 0148 9441     		sbcs	r4, r4, r2
 409 014a 0893     		str	r3, [sp, #32]
 410 014c 0994     		str	r4, [sp, #36]
 411              	.LVL29:
 213:Core/Src/main.c ****             int iteration = 0;
 412              		.loc 1 213 13 is_stmt 1 view .LVU80
 214:Core/Src/main.c **** 
 413              		.loc 1 214 13 view .LVU81
 216:Core/Src/main.c ****                    ((xi * xi + yi * yi) <= (4LL * scale * scale))) {
 414              		.loc 1 216 13 view .LVU82
 214:Core/Src/main.c **** 
 415              		.loc 1 214 17 is_stmt 0 view .LVU83
 416 014e 0023     		movs	r3, #0
 417              	.LVL30:
 214:Core/Src/main.c **** 
 418              		.loc 1 214 17 view .LVU84
 419 0150 9846     		mov	r8, r3
 213:Core/Src/main.c ****             int iteration = 0;
 420              		.loc 1 213 29 view .LVU85
 421 0152 0023     		movs	r3, #0
 422 0154 0024     		movs	r4, #0
 423 0156 0493     		str	r3, [sp, #16]
 424 0158 0594     		str	r4, [sp, #20]
 213:Core/Src/main.c ****             int iteration = 0;
 425              		.loc 1 213 21 view .LVU86
 426 015a 0024     		movs	r4, #0
 427 015c 0025     		movs	r5, #0
 428 015e 0694     		str	r4, [sp, #24]
 429 0160 0795     		str	r5, [sp, #28]
 216:Core/Src/main.c ****                    ((xi * xi + yi * yi) <= (4LL * scale * scale))) {
 430              		.loc 1 216 19 view .LVU87
 431 0162 91E7     		b	.L7
ARM GAS  C:\Users\Sowanga\AppData\Local\Temp\ccipEvRa.s 			page 13


 432              	.LVL31:
 433              	.L13:
 216:Core/Src/main.c ****                    ((xi * xi + yi * yi) <= (4LL * scale * scale))) {
 434              		.loc 1 216 19 view .LVU88
 435              	.LBE12:
 436              	.LBE9:
 437              	.LBE8:
 208:Core/Src/main.c ****         int64_t y0 = ((int64_t)y * (2 * scale)) / height - scale;
 438              		.loc 1 208 34 discriminator 2 view .LVU89
 439 0164 179D     		ldr	r5, [sp, #92]
 440 0166 5C46     		mov	r4, fp
 208:Core/Src/main.c ****         int64_t y0 = ((int64_t)y * (2 * scale)) / height - scale;
 441              		.loc 1 208 34 is_stmt 1 discriminator 2 view .LVU90
 442 0168 0135     		adds	r5, r5, #1
 443              	.LVL32:
 444              	.L5:
 208:Core/Src/main.c ****         int64_t y0 = ((int64_t)y * (2 * scale)) / height - scale;
 445              		.loc 1 208 23 discriminator 1 view .LVU91
 446 016a A542     		cmp	r5, r4
 447 016c 17DA     		bge	.L14
 448              	.LBB14:
 209:Core/Src/main.c **** 
 449              		.loc 1 209 9 view .LVU92
 209:Core/Src/main.c **** 
 450              		.loc 1 209 23 is_stmt 0 view .LVU93
 451 016e E917     		asrs	r1, r5, #31
 209:Core/Src/main.c **** 
 452              		.loc 1 209 39 view .LVU94
 453 0170 169B     		ldr	r3, [sp, #88]
 454 0172 5A00     		lsls	r2, r3, #1
 455 0174 D317     		asrs	r3, r2, #31
 209:Core/Src/main.c **** 
 456              		.loc 1 209 34 view .LVU95
 457 0176 2800     		movs	r0, r5
 458 0178 FFF7FEFF 		bl	__aeabi_lmul
 459              	.LVL33:
 209:Core/Src/main.c **** 
 460              		.loc 1 209 49 view .LVU96
 461 017c E317     		asrs	r3, r4, #31
 462 017e 2200     		movs	r2, r4
 463 0180 FFF7FEFF 		bl	__aeabi_ldivmod
 464              	.LVL34:
 209:Core/Src/main.c **** 
 465              		.loc 1 209 58 view .LVU97
 466 0184 169B     		ldr	r3, [sp, #88]
 467 0186 1E00     		movs	r6, r3
 468 0188 DF17     		asrs	r7, r3, #31
 209:Core/Src/main.c **** 
 469              		.loc 1 209 17 view .LVU98
 470 018a 801B     		subs	r0, r0, r6
 471 018c B941     		sbcs	r1, r1, r7
 472 018e 0C90     		str	r0, [sp, #48]
 473 0190 0D91     		str	r1, [sp, #52]
 474              	.LVL35:
 211:Core/Src/main.c ****             int64_t x0 = ((int64_t)x * (35 * scale) / (10 * width)) - (25 * scale / 10);
 475              		.loc 1 211 9 is_stmt 1 view .LVU99
 476              	.LBB13:
ARM GAS  C:\Users\Sowanga\AppData\Local\Temp\ccipEvRa.s 			page 14


 211:Core/Src/main.c ****             int64_t x0 = ((int64_t)x * (35 * scale) / (10 * width)) - (25 * scale / 10);
 477              		.loc 1 211 14 view .LVU100
 211:Core/Src/main.c ****             int64_t x0 = ((int64_t)x * (35 * scale) / (10 * width)) - (25 * scale / 10);
 478              		.loc 1 211 18 is_stmt 0 view .LVU101
 479 0192 0022     		movs	r2, #0
 480 0194 1795     		str	r5, [sp, #92]
 481 0196 1292     		str	r2, [sp, #72]
 482 0198 A346     		mov	fp, r4
 483 019a 9A46     		mov	r10, r3
 211:Core/Src/main.c ****             int64_t x0 = ((int64_t)x * (35 * scale) / (10 * width)) - (25 * scale / 10);
 484              		.loc 1 211 9 view .LVU102
 485 019c AFE7     		b	.L6
 486              	.LVL36:
 487              	.L14:
 211:Core/Src/main.c ****             int64_t x0 = ((int64_t)x * (35 * scale) / (10 * width)) - (25 * scale / 10);
 488              		.loc 1 211 9 view .LVU103
 489              	.LBE13:
 490              	.LBE14:
 491              	.LBE15:
 228:Core/Src/main.c ****         }
 229:Core/Src/main.c ****     }
 230:Core/Src/main.c ****     return mandelbrot_sum;
 492              		.loc 1 230 5 is_stmt 1 view .LVU104
 231:Core/Src/main.c **** }
 493              		.loc 1 231 1 is_stmt 0 view .LVU105
 494 019e 1498     		ldr	r0, [sp, #80]
 495 01a0 1599     		ldr	r1, [sp, #84]
 496 01a2 19B0     		add	sp, sp, #100
 497              		@ sp needed
 498              	.LVL37:
 499              	.LVL38:
 500              	.LVL39:
 501              		.loc 1 231 1 view .LVU106
 502 01a4 F0BC     		pop	{r4, r5, r6, r7}
 503 01a6 BB46     		mov	fp, r7
 504 01a8 B246     		mov	r10, r6
 505 01aa A946     		mov	r9, r5
 506 01ac A046     		mov	r8, r4
 507 01ae F0BD     		pop	{r4, r5, r6, r7, pc}
 508              		.cfi_endproc
 509              	.LFE43:
 511              		.section	.text.Error_Handler,"ax",%progbits
 512              		.align	1
 513              		.global	Error_Handler
 514              		.syntax unified
 515              		.code	16
 516              		.thumb_func
 518              	Error_Handler:
 519              	.LFB44:
 232:Core/Src/main.c **** /* USER CODE END 4 */
 233:Core/Src/main.c **** 
 234:Core/Src/main.c **** /**
 235:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 236:Core/Src/main.c ****   * @retval None
 237:Core/Src/main.c ****   */
 238:Core/Src/main.c **** void Error_Handler(void)
 239:Core/Src/main.c **** {
ARM GAS  C:\Users\Sowanga\AppData\Local\Temp\ccipEvRa.s 			page 15


 520              		.loc 1 239 1 is_stmt 1 view -0
 521              		.cfi_startproc
 522              		@ Volatile: function does not return.
 523              		@ args = 0, pretend = 0, frame = 0
 524              		@ frame_needed = 0, uses_anonymous_args = 0
 525              		@ link register save eliminated.
 240:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 241:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 242:Core/Src/main.c ****   __disable_irq();
 526              		.loc 1 242 3 view .LVU108
 527              	.LBB16:
 528              	.LBI16:
 529              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
ARM GAS  C:\Users\Sowanga\AppData\Local\Temp\ccipEvRa.s 			page 16


  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  C:\Users\Sowanga\AppData\Local\Temp\ccipEvRa.s 			page 17


 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 530              		.loc 2 140 27 view .LVU109
 531              	.LBB17:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 532              		.loc 2 142 3 view .LVU110
 533              		.syntax divided
 534              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 535 0000 72B6     		cpsid i
 536              	@ 0 "" 2
 537              		.thumb
 538              		.syntax unified
 539              	.L16:
 540              	.LBE17:
 541              	.LBE16:
 243:Core/Src/main.c ****   while (1)
 542              		.loc 1 243 3 view .LVU111
 244:Core/Src/main.c ****   {
 245:Core/Src/main.c ****   }
ARM GAS  C:\Users\Sowanga\AppData\Local\Temp\ccipEvRa.s 			page 18


 543              		.loc 1 245 3 view .LVU112
 243:Core/Src/main.c ****   while (1)
 544              		.loc 1 243 9 view .LVU113
 545 0002 FEE7     		b	.L16
 546              		.cfi_endproc
 547              	.LFE44:
 549              		.section	.text.SystemClock_Config,"ax",%progbits
 550              		.align	1
 551              		.global	SystemClock_Config
 552              		.syntax unified
 553              		.code	16
 554              		.thumb_func
 556              	SystemClock_Config:
 557              	.LFB41:
 135:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 558              		.loc 1 135 1 view -0
 559              		.cfi_startproc
 560              		@ args = 0, pretend = 0, frame = 64
 561              		@ frame_needed = 0, uses_anonymous_args = 0
 562 0000 00B5     		push	{lr}
 563              	.LCFI5:
 564              		.cfi_def_cfa_offset 4
 565              		.cfi_offset 14, -4
 566 0002 91B0     		sub	sp, sp, #68
 567              	.LCFI6:
 568              		.cfi_def_cfa_offset 72
 136:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 569              		.loc 1 136 3 view .LVU115
 136:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 570              		.loc 1 136 22 is_stmt 0 view .LVU116
 571 0004 3022     		movs	r2, #48
 572 0006 0021     		movs	r1, #0
 573 0008 04A8     		add	r0, sp, #16
 574 000a FFF7FEFF 		bl	memset
 575              	.LVL40:
 137:Core/Src/main.c **** 
 576              		.loc 1 137 3 is_stmt 1 view .LVU117
 137:Core/Src/main.c **** 
 577              		.loc 1 137 22 is_stmt 0 view .LVU118
 578 000e 1022     		movs	r2, #16
 579 0010 0021     		movs	r1, #0
 580 0012 6846     		mov	r0, sp
 581 0014 FFF7FEFF 		bl	memset
 582              	.LVL41:
 142:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 583              		.loc 1 142 3 is_stmt 1 view .LVU119
 142:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 584              		.loc 1 142 36 is_stmt 0 view .LVU120
 585 0018 0223     		movs	r3, #2
 586 001a 0493     		str	r3, [sp, #16]
 143:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 587              		.loc 1 143 3 is_stmt 1 view .LVU121
 143:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 588              		.loc 1 143 30 is_stmt 0 view .LVU122
 589 001c 0122     		movs	r2, #1
 590 001e 0792     		str	r2, [sp, #28]
 144:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
ARM GAS  C:\Users\Sowanga\AppData\Local\Temp\ccipEvRa.s 			page 19


 591              		.loc 1 144 3 is_stmt 1 view .LVU123
 144:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 592              		.loc 1 144 41 is_stmt 0 view .LVU124
 593 0020 0F32     		adds	r2, r2, #15
 594 0022 0892     		str	r2, [sp, #32]
 145:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 595              		.loc 1 145 3 is_stmt 1 view .LVU125
 145:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 596              		.loc 1 145 34 is_stmt 0 view .LVU126
 597 0024 0C93     		str	r3, [sp, #48]
 146:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL12;
 598              		.loc 1 146 3 is_stmt 1 view .LVU127
 147:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PREDIV = RCC_PREDIV_DIV1;
 599              		.loc 1 147 3 view .LVU128
 147:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PREDIV = RCC_PREDIV_DIV1;
 600              		.loc 1 147 32 is_stmt 0 view .LVU129
 601 0026 A023     		movs	r3, #160
 602 0028 9B03     		lsls	r3, r3, #14
 603 002a 0E93     		str	r3, [sp, #56]
 148:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 604              		.loc 1 148 3 is_stmt 1 view .LVU130
 149:Core/Src/main.c ****   {
 605              		.loc 1 149 3 view .LVU131
 149:Core/Src/main.c ****   {
 606              		.loc 1 149 7 is_stmt 0 view .LVU132
 607 002c 04A8     		add	r0, sp, #16
 608 002e FFF7FEFF 		bl	HAL_RCC_OscConfig
 609              	.LVL42:
 149:Core/Src/main.c ****   {
 610              		.loc 1 149 6 discriminator 1 view .LVU133
 611 0032 0028     		cmp	r0, #0
 612 0034 0ED1     		bne	.L20
 156:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 613              		.loc 1 156 3 is_stmt 1 view .LVU134
 156:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 614              		.loc 1 156 31 is_stmt 0 view .LVU135
 615 0036 0723     		movs	r3, #7
 616 0038 0093     		str	r3, [sp]
 158:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 617              		.loc 1 158 3 is_stmt 1 view .LVU136
 158:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 618              		.loc 1 158 34 is_stmt 0 view .LVU137
 619 003a 053B     		subs	r3, r3, #5
 620 003c 0193     		str	r3, [sp, #4]
 159:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 621              		.loc 1 159 3 is_stmt 1 view .LVU138
 159:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 622              		.loc 1 159 35 is_stmt 0 view .LVU139
 623 003e 0023     		movs	r3, #0
 624 0040 0293     		str	r3, [sp, #8]
 160:Core/Src/main.c **** 
 625              		.loc 1 160 3 is_stmt 1 view .LVU140
 160:Core/Src/main.c **** 
 626              		.loc 1 160 36 is_stmt 0 view .LVU141
 627 0042 0393     		str	r3, [sp, #12]
 162:Core/Src/main.c ****   {
 628              		.loc 1 162 3 is_stmt 1 view .LVU142
ARM GAS  C:\Users\Sowanga\AppData\Local\Temp\ccipEvRa.s 			page 20


 162:Core/Src/main.c ****   {
 629              		.loc 1 162 7 is_stmt 0 view .LVU143
 630 0044 0121     		movs	r1, #1
 631 0046 6846     		mov	r0, sp
 632 0048 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 633              	.LVL43:
 162:Core/Src/main.c ****   {
 634              		.loc 1 162 6 discriminator 1 view .LVU144
 635 004c 0028     		cmp	r0, #0
 636 004e 03D1     		bne	.L21
 166:Core/Src/main.c **** 
 637              		.loc 1 166 1 view .LVU145
 638 0050 11B0     		add	sp, sp, #68
 639              		@ sp needed
 640 0052 00BD     		pop	{pc}
 641              	.L20:
 151:Core/Src/main.c ****   }
 642              		.loc 1 151 5 is_stmt 1 view .LVU146
 643 0054 FFF7FEFF 		bl	Error_Handler
 644              	.LVL44:
 645              	.L21:
 164:Core/Src/main.c ****   }
 646              		.loc 1 164 5 view .LVU147
 647 0058 FFF7FEFF 		bl	Error_Handler
 648              	.LVL45:
 649              		.cfi_endproc
 650              	.LFE41:
 652              		.section	.text.main,"ax",%progbits
 653              		.align	1
 654              		.global	main
 655              		.syntax unified
 656              		.code	16
 657              		.thumb_func
 659              	main:
 660              	.LFB40:
  74:Core/Src/main.c **** 
 661              		.loc 1 74 1 view -0
 662              		.cfi_startproc
 663              		@ Volatile: function does not return.
 664              		@ args = 0, pretend = 0, frame = 0
 665              		@ frame_needed = 0, uses_anonymous_args = 0
 666 0000 70B5     		push	{r4, r5, r6, lr}
 667              	.LCFI7:
 668              		.cfi_def_cfa_offset 16
 669              		.cfi_offset 4, -16
 670              		.cfi_offset 5, -12
 671              		.cfi_offset 6, -8
 672              		.cfi_offset 14, -4
  83:Core/Src/main.c **** 
 673              		.loc 1 83 3 view .LVU149
 674 0002 FFF7FEFF 		bl	HAL_Init
 675              	.LVL46:
  90:Core/Src/main.c **** 
 676              		.loc 1 90 3 view .LVU150
 677 0006 FFF7FEFF 		bl	SystemClock_Config
 678              	.LVL47:
  97:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
ARM GAS  C:\Users\Sowanga\AppData\Local\Temp\ccipEvRa.s 			page 21


 679              		.loc 1 97 3 view .LVU151
 680 000a FFF7FEFF 		bl	MX_GPIO_Init
 681              	.LVL48:
 682              	.L23:
 104:Core/Src/main.c ****   {
 683              		.loc 1 104 3 view .LVU152
 110:Core/Src/main.c **** 
 684              		.loc 1 110 5 view .LVU153
 685 000e 184C     		ldr	r4, .L24
 686 0010 0122     		movs	r2, #1
 687 0012 0121     		movs	r1, #1
 688 0014 2000     		movs	r0, r4
 689 0016 FFF7FEFF 		bl	HAL_GPIO_WritePin
 690              	.LVL49:
 113:Core/Src/main.c **** 		  CheckSum = calculate_mandelbrot_fixed_point_arithmetic(Width,Height,MAX_ITER,1000);
 691              		.loc 1 113 5 view .LVU154
 113:Core/Src/main.c **** 		  CheckSum = calculate_mandelbrot_fixed_point_arithmetic(Width,Height,MAX_ITER,1000);
 692              		.loc 1 113 17 is_stmt 0 view .LVU155
 693 001a FFF7FEFF 		bl	HAL_GetTick
 694              	.LVL50:
 113:Core/Src/main.c **** 		  CheckSum = calculate_mandelbrot_fixed_point_arithmetic(Width,Height,MAX_ITER,1000);
 695              		.loc 1 113 15 discriminator 1 view .LVU156
 696 001e 154D     		ldr	r5, .L24+4
 697 0020 2860     		str	r0, [r5]
 114:Core/Src/main.c **** 		  EndTime = HAL_GetTick();
 698              		.loc 1 114 5 is_stmt 1 view .LVU157
 114:Core/Src/main.c **** 		  EndTime = HAL_GetTick();
 699              		.loc 1 114 16 is_stmt 0 view .LVU158
 700 0022 FA23     		movs	r3, #250
 701 0024 9B00     		lsls	r3, r3, #2
 702 0026 6422     		movs	r2, #100
 703 0028 C021     		movs	r1, #192
 704 002a C020     		movs	r0, #192
 705 002c FFF7FEFF 		bl	calculate_mandelbrot_fixed_point_arithmetic
 706              	.LVL51:
 114:Core/Src/main.c **** 		  EndTime = HAL_GetTick();
 707              		.loc 1 114 14 discriminator 1 view .LVU159
 708 0030 114B     		ldr	r3, .L24+8
 709 0032 1860     		str	r0, [r3]
 710 0034 5960     		str	r1, [r3, #4]
 115:Core/Src/main.c **** 		  ExecutionTime = EndTime - StartTime;
 711              		.loc 1 115 5 is_stmt 1 view .LVU160
 115:Core/Src/main.c **** 		  ExecutionTime = EndTime - StartTime;
 712              		.loc 1 115 15 is_stmt 0 view .LVU161
 713 0036 FFF7FEFF 		bl	HAL_GetTick
 714              	.LVL52:
 115:Core/Src/main.c **** 		  ExecutionTime = EndTime - StartTime;
 715              		.loc 1 115 13 discriminator 1 view .LVU162
 716 003a 104B     		ldr	r3, .L24+12
 717 003c 1860     		str	r0, [r3]
 116:Core/Src/main.c **** 		  //TODO: Visual indicator: Turn on LED1 to signal processing start
 718              		.loc 1 116 5 is_stmt 1 view .LVU163
 116:Core/Src/main.c **** 		  //TODO: Visual indicator: Turn on LED1 to signal processing start
 719              		.loc 1 116 29 is_stmt 0 view .LVU164
 720 003e 2B68     		ldr	r3, [r5]
 721 0040 C01A     		subs	r0, r0, r3
 116:Core/Src/main.c **** 		  //TODO: Visual indicator: Turn on LED1 to signal processing start
ARM GAS  C:\Users\Sowanga\AppData\Local\Temp\ccipEvRa.s 			page 22


 722              		.loc 1 116 19 view .LVU165
 723 0042 0F4B     		ldr	r3, .L24+16
 724 0044 1860     		str	r0, [r3]
 118:Core/Src/main.c **** 
 725              		.loc 1 118 5 is_stmt 1 view .LVU166
 726 0046 0122     		movs	r2, #1
 727 0048 0221     		movs	r1, #2
 728 004a 2000     		movs	r0, r4
 729 004c FFF7FEFF 		bl	HAL_GPIO_WritePin
 730              	.LVL53:
 121:Core/Src/main.c **** 
 731              		.loc 1 121 5 view .LVU167
 732 0050 FA20     		movs	r0, #250
 733 0052 C000     		lsls	r0, r0, #3
 734 0054 FFF7FEFF 		bl	HAL_Delay
 735              	.LVL54:
 124:Core/Src/main.c **** 		  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_1, GPIO_PIN_RESET);
 736              		.loc 1 124 5 view .LVU168
 737 0058 0022     		movs	r2, #0
 738 005a 0121     		movs	r1, #1
 739 005c 2000     		movs	r0, r4
 740 005e FFF7FEFF 		bl	HAL_GPIO_WritePin
 741              	.LVL55:
 125:Core/Src/main.c ****   }
 742              		.loc 1 125 5 discriminator 1 view .LVU169
 743 0062 0022     		movs	r2, #0
 744 0064 0221     		movs	r1, #2
 745 0066 2000     		movs	r0, r4
 746 0068 FFF7FEFF 		bl	HAL_GPIO_WritePin
 747              	.LVL56:
 104:Core/Src/main.c ****   {
 748              		.loc 1 104 9 view .LVU170
 749 006c CFE7     		b	.L23
 750              	.L25:
 751 006e C046     		.align	2
 752              	.L24:
 753 0070 00040048 		.word	1207960576
 754 0074 00000000 		.word	StartTime
 755 0078 00000000 		.word	CheckSum
 756 007c 00000000 		.word	EndTime
 757 0080 00000000 		.word	ExecutionTime
 758              		.cfi_endproc
 759              	.LFE40:
 761              		.section	.bss.ExecutionTime,"aw",%nobits
 762              		.align	2
 765              	ExecutionTime:
 766 0000 00000000 		.space	4
 767              		.section	.bss.EndTime,"aw",%nobits
 768              		.align	2
 771              	EndTime:
 772 0000 00000000 		.space	4
 773              		.section	.bss.StartTime,"aw",%nobits
 774              		.align	2
 777              	StartTime:
 778 0000 00000000 		.space	4
 779              		.section	.bss.CheckSum,"aw",%nobits
 780              		.align	3
ARM GAS  C:\Users\Sowanga\AppData\Local\Temp\ccipEvRa.s 			page 23


 783              	CheckSum:
 784 0000 00000000 		.space	8
 784      00000000 
 785              		.text
 786              	.Letext0:
 787              		.file 3 "C:\\ST\\STM32CubeIDE_1.19.0\\STM32CubeIDE\\plugins\\com.st.stm32cube.ide.mcu.externaltool
 788              		.file 4 "C:\\ST\\STM32CubeIDE_1.19.0\\STM32CubeIDE\\plugins\\com.st.stm32cube.ide.mcu.externaltool
 789              		.file 5 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f051x8.h"
 790              		.file 6 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 791              		.file 7 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_rcc.h"
 792              		.file 8 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_gpio.h"
 793              		.file 9 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal.h"
 794              		.file 10 "<built-in>"
ARM GAS  C:\Users\Sowanga\AppData\Local\Temp\ccipEvRa.s 			page 24


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\Sowanga\AppData\Local\Temp\ccipEvRa.s:19     .text.MX_GPIO_Init:00000000 $t
C:\Users\Sowanga\AppData\Local\Temp\ccipEvRa.s:24     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\Sowanga\AppData\Local\Temp\ccipEvRa.s:131    .text.MX_GPIO_Init:0000006c $d
C:\Users\Sowanga\AppData\Local\Temp\ccipEvRa.s:140    .text.calculate_mandelbrot_fixed_point_arithmetic:00000000 $t
C:\Users\Sowanga\AppData\Local\Temp\ccipEvRa.s:146    .text.calculate_mandelbrot_fixed_point_arithmetic:00000000 calculate_mandelbrot_fixed_point_arithmetic
C:\Users\Sowanga\AppData\Local\Temp\ccipEvRa.s:512    .text.Error_Handler:00000000 $t
C:\Users\Sowanga\AppData\Local\Temp\ccipEvRa.s:518    .text.Error_Handler:00000000 Error_Handler
C:\Users\Sowanga\AppData\Local\Temp\ccipEvRa.s:550    .text.SystemClock_Config:00000000 $t
C:\Users\Sowanga\AppData\Local\Temp\ccipEvRa.s:556    .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\Sowanga\AppData\Local\Temp\ccipEvRa.s:653    .text.main:00000000 $t
C:\Users\Sowanga\AppData\Local\Temp\ccipEvRa.s:659    .text.main:00000000 main
C:\Users\Sowanga\AppData\Local\Temp\ccipEvRa.s:753    .text.main:00000070 $d
C:\Users\Sowanga\AppData\Local\Temp\ccipEvRa.s:777    .bss.StartTime:00000000 StartTime
C:\Users\Sowanga\AppData\Local\Temp\ccipEvRa.s:783    .bss.CheckSum:00000000 CheckSum
C:\Users\Sowanga\AppData\Local\Temp\ccipEvRa.s:771    .bss.EndTime:00000000 EndTime
C:\Users\Sowanga\AppData\Local\Temp\ccipEvRa.s:765    .bss.ExecutionTime:00000000 ExecutionTime
C:\Users\Sowanga\AppData\Local\Temp\ccipEvRa.s:762    .bss.ExecutionTime:00000000 $d
C:\Users\Sowanga\AppData\Local\Temp\ccipEvRa.s:768    .bss.EndTime:00000000 $d
C:\Users\Sowanga\AppData\Local\Temp\ccipEvRa.s:774    .bss.StartTime:00000000 $d
C:\Users\Sowanga\AppData\Local\Temp\ccipEvRa.s:780    .bss.CheckSum:00000000 $d

UNDEFINED SYMBOLS
memset
HAL_GPIO_WritePin
HAL_GPIO_Init
__aeabi_lmul
__aeabi_ldivmod
__aeabi_idiv
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
HAL_GetTick
HAL_Delay
