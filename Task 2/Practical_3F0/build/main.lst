ARM GAS  C:\Users\mulwe\AppData\Local\Temp\ccPK4Hju.s 			page 1


   1              		.cpu cortex-m0
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/Src/main.c"
  18              		.section	.text.MX_GPIO_Init,"ax",%progbits
  19              		.align	1
  20              		.syntax unified
  21              		.code	16
  22              		.thumb_func
  24              	MX_GPIO_Init:
  25              	.LFB45:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2025 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** #include "stdio.h"
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** 
  25:Core/Src/main.c **** /* USER CODE END Includes */
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  28:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  29:Core/Src/main.c **** #define Max_iter  100
  30:Core/Src/main.c **** #define Width  100
  31:Core/Src/main.c **** #define Height  100
  32:Core/Src/main.c **** #define CPU_freq 48000000
  33:Core/Src/main.c **** /* USER CODE END PTD */
ARM GAS  C:\Users\mulwe\AppData\Local\Temp\ccPK4Hju.s 			page 2


  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  36:Core/Src/main.c **** /* USER CODE BEGIN PD */
  37:Core/Src/main.c **** 
  38:Core/Src/main.c **** /* USER CODE END PD */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  41:Core/Src/main.c **** /* USER CODE BEGIN PM */
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** /* USER CODE END PM */
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** /* USER CODE BEGIN PV */
  48:Core/Src/main.c **** //TODO: Define variables you think you might need
  49:Core/Src/main.c **** // - Performance timing variables (e.g execution time, throughput, pixels per second, clock cycles)
  50:Core/Src/main.c **** uint32_t max_iter_array[] = {100,250,500,750,1000};
  51:Core/Src/main.c **** uint32_t image_size_array[] = {128,160,192,224,256};
  52:Core/Src/main.c **** static uint64_t CheckSum;
  53:Core/Src/main.c **** static uint32_t StartTime;
  54:Core/Src/main.c **** static uint32_t EndTime;
  55:Core/Src/main.c **** static uint32_t total_cycles;
  56:Core/Src/main.c **** static uint32_t ExecutionTime;
  57:Core/Src/main.c **** static float Throughput;
  58:Core/Src/main.c **** /* USER CODE END PV */
  59:Core/Src/main.c **** 
  60:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  61:Core/Src/main.c **** void SystemClock_Config(void);
  62:Core/Src/main.c **** static void MX_GPIO_Init(void);
  63:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  64:Core/Src/main.c **** //TODO: Define any function prototypes you might need such as the calculate Mandelbrot function amo
  65:Core/Src/main.c **** uint64_t calculate_mandelbrot_fixed_point_arithmetic(int width, int height, int max_iterations);
  66:Core/Src/main.c **** uint64_t calculate_mandelbrot_double(int width, int height, int max_iterations);
  67:Core/Src/main.c **** /* USER CODE END PFP */
  68:Core/Src/main.c **** 
  69:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  70:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  71:Core/Src/main.c **** 
  72:Core/Src/main.c **** /* USER CODE END 0 */
  73:Core/Src/main.c **** 
  74:Core/Src/main.c **** /**
  75:Core/Src/main.c ****   * @brief  The application entry point.
  76:Core/Src/main.c ****   * @retval int
  77:Core/Src/main.c ****   */
  78:Core/Src/main.c **** int main(void)
  79:Core/Src/main.c **** {
  80:Core/Src/main.c **** 
  81:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  82:Core/Src/main.c **** 
  83:Core/Src/main.c ****   /* USER CODE END 1 */
  84:Core/Src/main.c **** 
  85:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  86:Core/Src/main.c **** 
  87:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  88:Core/Src/main.c ****   HAL_Init();
  89:Core/Src/main.c **** 
  90:Core/Src/main.c ****   /* USER CODE BEGIN Init */
ARM GAS  C:\Users\mulwe\AppData\Local\Temp\ccPK4Hju.s 			page 3


  91:Core/Src/main.c **** 
  92:Core/Src/main.c ****   /* USER CODE END Init */
  93:Core/Src/main.c **** 
  94:Core/Src/main.c ****   /* Configure the system clock */
  95:Core/Src/main.c ****   SystemClock_Config();
  96:Core/Src/main.c **** 
  97:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  98:Core/Src/main.c **** 
  99:Core/Src/main.c ****   /* USER CODE END SysInit */
 100:Core/Src/main.c **** 
 101:Core/Src/main.c ****   /* Initialize all configured peripherals */
 102:Core/Src/main.c ****   MX_GPIO_Init();
 103:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 104:Core/Src/main.c ****   /* USER CODE END 2 */
 105:Core/Src/main.c **** 
 106:Core/Src/main.c ****   /* Infinite loop */
 107:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 108:Core/Src/main.c ****   while (1)
 109:Core/Src/main.c ****   {
 110:Core/Src/main.c ****     /* USER CODE END WHILE */
 111:Core/Src/main.c **** 
 112:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 113:Core/Src/main.c **** 	  //TODO: Visual indicator: Turn on LED0 to signal processing start
 114:Core/Src/main.c **** 	  HAL_GPIO_WritePin(GPIOB,1, GPIO_PIN_SET);
 115:Core/Src/main.c **** 
 116:Core/Src/main.c **** 	  uint16_t x = sizeof(max_iter_array)/sizeof(max_iter_array[0]);
 117:Core/Src/main.c **** 	  uint16_t y = sizeof(image_size_array)/sizeof(image_size_array[0]);
 118:Core/Src/main.c **** 
 119:Core/Src/main.c **** 	  for (uint32_t i = 0; i< x ;i++){
 120:Core/Src/main.c **** 		  for (uint32_t z = 0; z< y ; z++){
 121:Core/Src/main.c **** 			  volatile uint16_t size = image_size_array[z];
 122:Core/Src/main.c **** 			  volatile uint16_t iter = max_iter_array[i];
 123:Core/Src/main.c **** 			  StartTime = HAL_GetTick();
 124:Core/Src/main.c **** 			  CheckSum = calculate_mandelbrot_fixed_point_arithmetic(size, size , iter);
 125:Core/Src/main.c **** 			  EndTime = HAL_GetTick();
 126:Core/Src/main.c **** 			  ExecutionTime = EndTime - StartTime;
 127:Core/Src/main.c **** 			  total_cycles  = (uint64_t)ExecutionTime * (CPU_freq / 1000);
 128:Core/Src/main.c **** 			  uint32_t pixels = image_size_array[z] * image_size_array[z];
 129:Core/Src/main.c **** 			  Throughput = (float)pixels /((float)ExecutionTime/1000.0f);
 130:Core/Src/main.c **** 		  }
 131:Core/Src/main.c **** 	  }
 132:Core/Src/main.c **** 
 133:Core/Src/main.c **** 	  //TODO: Keep the LEDs ON for 2s
 134:Core/Src/main.c **** 	  HAL_Delay(2000);
 135:Core/Src/main.c **** 
 136:Core/Src/main.c **** 	  // TODO: Turn OFF LEDs
 137:Core/Src/main.c **** 	  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0 | GPIO_PIN_1, GPIO_PIN_RESET);
 138:Core/Src/main.c **** 
 139:Core/Src/main.c ****   }
 140:Core/Src/main.c ****   /* USER CODE END 3 */
 141:Core/Src/main.c **** }
 142:Core/Src/main.c **** 
 143:Core/Src/main.c **** /**
 144:Core/Src/main.c ****   * @brief System Clock Configuration
 145:Core/Src/main.c ****   * @retval None
 146:Core/Src/main.c ****   */
 147:Core/Src/main.c **** 
ARM GAS  C:\Users\mulwe\AppData\Local\Temp\ccPK4Hju.s 			page 4


 148:Core/Src/main.c **** void SystemClock_Config(void)
 149:Core/Src/main.c **** {
 150:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 151:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 152:Core/Src/main.c **** 
 153:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 154:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 155:Core/Src/main.c ****   */
 156:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 157:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 158:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 159:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 160:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 161:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL12;
 162:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PREDIV = RCC_PREDIV_DIV1;
 163:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 164:Core/Src/main.c ****   {
 165:Core/Src/main.c ****     Error_Handler();
 166:Core/Src/main.c ****   }
 167:Core/Src/main.c **** 
 168:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 169:Core/Src/main.c ****   */
 170:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 171:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 172:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 173:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 174:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 175:Core/Src/main.c **** 
 176:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_1) != HAL_OK)
 177:Core/Src/main.c ****   {
 178:Core/Src/main.c ****     Error_Handler();
 179:Core/Src/main.c ****   }
 180:Core/Src/main.c **** }
 181:Core/Src/main.c **** 
 182:Core/Src/main.c **** /**
 183:Core/Src/main.c ****   * @brief GPIO Initialization Function
 184:Core/Src/main.c ****   * @param None
 185:Core/Src/main.c ****   * @retval None
 186:Core/Src/main.c ****   */
 187:Core/Src/main.c **** static void MX_GPIO_Init(void)
 188:Core/Src/main.c **** {
  26              		.loc 1 188 1 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 32
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 10B5     		push	{r4, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 8
  33              		.cfi_offset 4, -8
  34              		.cfi_offset 14, -4
  35 0002 88B0     		sub	sp, sp, #32
  36              	.LCFI1:
  37              		.cfi_def_cfa_offset 40
 189:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  38              		.loc 1 189 3 view .LVU1
  39              		.loc 1 189 20 is_stmt 0 view .LVU2
  40 0004 1422     		movs	r2, #20
ARM GAS  C:\Users\mulwe\AppData\Local\Temp\ccPK4Hju.s 			page 5


  41 0006 0021     		movs	r1, #0
  42 0008 03A8     		add	r0, sp, #12
  43 000a FFF7FEFF 		bl	memset
  44              	.LVL0:
 190:Core/Src/main.c ****   /* USER CODE BEGIN MX_GPIO_Init_1 */
 191:Core/Src/main.c **** 
 192:Core/Src/main.c ****   /* USER CODE END MX_GPIO_Init_1 */
 193:Core/Src/main.c **** 
 194:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 195:Core/Src/main.c ****   __HAL_RCC_GPIOF_CLK_ENABLE();
  45              		.loc 1 195 3 is_stmt 1 view .LVU3
  46              	.LBB4:
  47              		.loc 1 195 3 view .LVU4
  48              		.loc 1 195 3 view .LVU5
  49 000e 174B     		ldr	r3, .L2
  50 0010 5A69     		ldr	r2, [r3, #20]
  51 0012 8021     		movs	r1, #128
  52 0014 C903     		lsls	r1, r1, #15
  53 0016 0A43     		orrs	r2, r1
  54 0018 5A61     		str	r2, [r3, #20]
  55              		.loc 1 195 3 view .LVU6
  56 001a 5A69     		ldr	r2, [r3, #20]
  57 001c 0A40     		ands	r2, r1
  58 001e 0092     		str	r2, [sp]
  59              		.loc 1 195 3 view .LVU7
  60 0020 009A     		ldr	r2, [sp]
  61              	.LBE4:
  62              		.loc 1 195 3 view .LVU8
 196:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  63              		.loc 1 196 3 view .LVU9
  64              	.LBB5:
  65              		.loc 1 196 3 view .LVU10
  66              		.loc 1 196 3 view .LVU11
  67 0022 5A69     		ldr	r2, [r3, #20]
  68 0024 8021     		movs	r1, #128
  69 0026 C902     		lsls	r1, r1, #11
  70 0028 0A43     		orrs	r2, r1
  71 002a 5A61     		str	r2, [r3, #20]
  72              		.loc 1 196 3 view .LVU12
  73 002c 5A69     		ldr	r2, [r3, #20]
  74 002e 0A40     		ands	r2, r1
  75 0030 0192     		str	r2, [sp, #4]
  76              		.loc 1 196 3 view .LVU13
  77 0032 019A     		ldr	r2, [sp, #4]
  78              	.LBE5:
  79              		.loc 1 196 3 view .LVU14
 197:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  80              		.loc 1 197 3 view .LVU15
  81              	.LBB6:
  82              		.loc 1 197 3 view .LVU16
  83              		.loc 1 197 3 view .LVU17
  84 0034 5A69     		ldr	r2, [r3, #20]
  85 0036 8021     		movs	r1, #128
  86 0038 8902     		lsls	r1, r1, #10
  87 003a 0A43     		orrs	r2, r1
  88 003c 5A61     		str	r2, [r3, #20]
  89              		.loc 1 197 3 view .LVU18
ARM GAS  C:\Users\mulwe\AppData\Local\Temp\ccPK4Hju.s 			page 6


  90 003e 5B69     		ldr	r3, [r3, #20]
  91 0040 0B40     		ands	r3, r1
  92 0042 0293     		str	r3, [sp, #8]
  93              		.loc 1 197 3 view .LVU19
  94 0044 029B     		ldr	r3, [sp, #8]
  95              	.LBE6:
  96              		.loc 1 197 3 view .LVU20
 198:Core/Src/main.c **** 
 199:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 200:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
  97              		.loc 1 200 3 view .LVU21
  98 0046 0A4C     		ldr	r4, .L2+4
  99 0048 0022     		movs	r2, #0
 100 004a FF21     		movs	r1, #255
 101 004c 2000     		movs	r0, r4
 102 004e FFF7FEFF 		bl	HAL_GPIO_WritePin
 103              	.LVL1:
 201:Core/Src/main.c ****                           |GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7, GPIO_PIN_RESET);
 202:Core/Src/main.c **** 
 203:Core/Src/main.c ****   /*Configure GPIO pins : PB0 PB1 PB2 PB3
 204:Core/Src/main.c ****                            PB4 PB5 PB6 PB7 */
 205:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 104              		.loc 1 205 3 view .LVU22
 105              		.loc 1 205 23 is_stmt 0 view .LVU23
 106 0052 FF23     		movs	r3, #255
 107 0054 0393     		str	r3, [sp, #12]
 206:Core/Src/main.c ****                           |GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7;
 207:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 108              		.loc 1 207 3 is_stmt 1 view .LVU24
 109              		.loc 1 207 24 is_stmt 0 view .LVU25
 110 0056 FE3B     		subs	r3, r3, #254
 111 0058 0493     		str	r3, [sp, #16]
 208:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 112              		.loc 1 208 3 is_stmt 1 view .LVU26
 113              		.loc 1 208 24 is_stmt 0 view .LVU27
 114 005a 0023     		movs	r3, #0
 115 005c 0593     		str	r3, [sp, #20]
 209:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 116              		.loc 1 209 3 is_stmt 1 view .LVU28
 117              		.loc 1 209 25 is_stmt 0 view .LVU29
 118 005e 0693     		str	r3, [sp, #24]
 210:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 119              		.loc 1 210 3 is_stmt 1 view .LVU30
 120 0060 03A9     		add	r1, sp, #12
 121 0062 2000     		movs	r0, r4
 122 0064 FFF7FEFF 		bl	HAL_GPIO_Init
 123              	.LVL2:
 211:Core/Src/main.c **** 
 212:Core/Src/main.c ****   /* USER CODE BEGIN MX_GPIO_Init_2 */
 213:Core/Src/main.c **** 
 214:Core/Src/main.c ****   /* USER CODE END MX_GPIO_Init_2 */
 215:Core/Src/main.c **** }
 124              		.loc 1 215 1 is_stmt 0 view .LVU31
 125 0068 08B0     		add	sp, sp, #32
 126              		@ sp needed
 127 006a 10BD     		pop	{r4, pc}
 128              	.L3:
ARM GAS  C:\Users\mulwe\AppData\Local\Temp\ccPK4Hju.s 			page 7


 129              		.align	2
 130              	.L2:
 131 006c 00100240 		.word	1073876992
 132 0070 00040048 		.word	1207960576
 133              		.cfi_endproc
 134              	.LFE45:
 136              		.global	__aeabi_ldivmod
 137              		.global	__aeabi_lmul
 138              		.section	.text.calculate_mandelbrot_fixed_point_arithmetic,"ax",%progbits
 139              		.align	1
 140              		.global	calculate_mandelbrot_fixed_point_arithmetic
 141              		.syntax unified
 142              		.code	16
 143              		.thumb_func
 145              	calculate_mandelbrot_fixed_point_arithmetic:
 146              	.LVL3:
 147              	.LFB46:
 216:Core/Src/main.c **** 
 217:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 218:Core/Src/main.c **** //TODO: Function signatures you defined previously , implement them here
 219:Core/Src/main.c **** // Mandelbroat using variable type integers and fixed point arithmetic
 220:Core/Src/main.c **** uint64_t calculate_mandelbrot_fixed_point_arithmetic(int width, int height, int max_iterations){
 148              		.loc 1 220 96 is_stmt 1 view -0
 149              		.cfi_startproc
 150              		@ args = 0, pretend = 0, frame = 144
 151              		@ frame_needed = 0, uses_anonymous_args = 0
 152              		.loc 1 220 96 is_stmt 0 view .LVU33
 153 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 154              	.LCFI2:
 155              		.cfi_def_cfa_offset 20
 156              		.cfi_offset 4, -20
 157              		.cfi_offset 5, -16
 158              		.cfi_offset 6, -12
 159              		.cfi_offset 7, -8
 160              		.cfi_offset 14, -4
 161 0002 DE46     		mov	lr, fp
 162 0004 5746     		mov	r7, r10
 163 0006 4E46     		mov	r6, r9
 164 0008 4546     		mov	r5, r8
 165 000a E0B5     		push	{r5, r6, r7, lr}
 166              	.LCFI3:
 167              		.cfi_def_cfa_offset 36
 168              		.cfi_offset 8, -36
 169              		.cfi_offset 9, -32
 170              		.cfi_offset 10, -28
 171              		.cfi_offset 11, -24
 172 000c A5B0     		sub	sp, sp, #148
 173              	.LCFI4:
 174              		.cfi_def_cfa_offset 184
 175 000e 8246     		mov	r10, r0
 176 0010 2291     		str	r1, [sp, #136]
 177 0012 9046     		mov	r8, r2
 221:Core/Src/main.c ****   uint64_t mandelbrot_sum = 0;
 178              		.loc 1 221 3 is_stmt 1 view .LVU34
 179              	.LVL4:
 222:Core/Src/main.c **** 	#define S (1<<28)
 223:Core/Src/main.c ****     //TODO: Complete the function implementation
ARM GAS  C:\Users\mulwe\AppData\Local\Temp\ccPK4Hju.s 			page 8


 224:Core/Src/main.c ****   	  for (int y = 0; y < height; y++) {
 180              		.loc 1 224 6 view .LVU35
 181              	.LBB7:
 182              		.loc 1 224 11 view .LVU36
 183              		.loc 1 224 15 is_stmt 0 view .LVU37
 184 0014 0023     		movs	r3, #0
 185 0016 2393     		str	r3, [sp, #140]
 186              	.LBE7:
 221:Core/Src/main.c ****   uint64_t mandelbrot_sum = 0;
 187              		.loc 1 221 12 view .LVU38
 188 0018 0023     		movs	r3, #0
 189 001a 0024     		movs	r4, #0
 190 001c 2093     		str	r3, [sp, #128]
 191 001e 2194     		str	r4, [sp, #132]
 192              	.LBB13:
 193              		.loc 1 224 6 view .LVU39
 194 0020 02E1     		b	.L5
 195              	.LVL5:
 196              	.L8:
 197              	.LBB8:
 198              	.LBB9:
 199              	.LBB10:
 225:Core/Src/main.c ****           for (int x = 0; x < width; x++) {
 226:Core/Src/main.c **** 
 227:Core/Src/main.c ****         	  int64_t x_scaled = ((int64_t)x * S + width / 2) / width;
 228:Core/Src/main.c ****         	              int64_t y_scaled = ((int64_t)y * S + height / 2) / height;
 229:Core/Src/main.c **** 
 230:Core/Src/main.c ****         	              int64_t x0 = ((x_scaled * (int64_t)(3.5 * S) + (S >> 1)) >> 28) - (int64_t)(
 231:Core/Src/main.c ****         	              int64_t y0 = ((y_scaled * (int64_t)(2.0 * S) + (S >> 1)) >> 28) - (1 * S);
 232:Core/Src/main.c **** 
 233:Core/Src/main.c ****         	              int64_t xi = 0;
 234:Core/Src/main.c ****         	              int64_t yi = 0;
 235:Core/Src/main.c ****         	              int iteration = 0;
 236:Core/Src/main.c **** 
 237:Core/Src/main.c ****         	              while (iteration < max_iterations &&
 238:Core/Src/main.c ****         	                     ((xi * xi + yi * yi) <= (4LL * S * S))) {
 239:Core/Src/main.c **** 
 240:Core/Src/main.c **** 
 241:Core/Src/main.c ****         	                  int64_t x_sq = (xi * xi + (S >> 1)) >> 28;
 200              		.loc 1 241 28 is_stmt 1 view .LVU40
 201              		.loc 1 241 52 is_stmt 0 view .LVU41
 202 0022 009A     		ldr	r2, [sp]
 203 0024 019B     		ldr	r3, [sp, #4]
 204 0026 8024     		movs	r4, #128
 205 0028 2405     		lsls	r4, r4, #20
 206 002a 0025     		movs	r5, #0
 207 002c 1219     		adds	r2, r2, r4
 208 002e 6B41     		adcs	r3, r3, r5
 209              		.loc 1 241 36 view .LVU42
 210 0030 1C01     		lsls	r4, r3, #4
 211 0032 A446     		mov	ip, r4
 212 0034 140F     		lsrs	r4, r2, #28
 213 0036 0294     		str	r4, [sp, #8]
 214 0038 6546     		mov	r5, ip
 215 003a 2C43     		orrs	r4, r5
 216 003c 0294     		str	r4, [sp, #8]
 217 003e 1B17     		asrs	r3, r3, #28
ARM GAS  C:\Users\mulwe\AppData\Local\Temp\ccPK4Hju.s 			page 9


 218 0040 0393     		str	r3, [sp, #12]
 219              	.LVL6:
 242:Core/Src/main.c ****         	                  int64_t y_sq = (yi * yi + (S >> 1)) >> 28;
 220              		.loc 1 242 28 is_stmt 1 view .LVU43
 221              		.loc 1 242 52 is_stmt 0 view .LVU44
 222 0042 0200     		movs	r2, r0
 223 0044 0B00     		movs	r3, r1
 224 0046 8024     		movs	r4, #128
 225 0048 2405     		lsls	r4, r4, #20
 226 004a 0025     		movs	r5, #0
 227 004c 1219     		adds	r2, r2, r4
 228 004e 6B41     		adcs	r3, r3, r5
 229              		.loc 1 242 36 view .LVU45
 230 0050 1901     		lsls	r1, r3, #4
 231 0052 100F     		lsrs	r0, r2, #28
 232 0054 0490     		str	r0, [sp, #16]
 233 0056 0843     		orrs	r0, r1
 234 0058 0490     		str	r0, [sp, #16]
 235 005a 1B17     		asrs	r3, r3, #28
 236 005c 0593     		str	r3, [sp, #20]
 237              	.LVL7:
 243:Core/Src/main.c ****         	                  int64_t xy   = (xi * yi + (S >> 1)) >> 28;
 238              		.loc 1 243 28 is_stmt 1 view .LVU46
 239              		.loc 1 243 47 is_stmt 0 view .LVU47
 240 005e 089A     		ldr	r2, [sp, #32]
 241 0060 099B     		ldr	r3, [sp, #36]
 242 0062 0698     		ldr	r0, [sp, #24]
 243 0064 0799     		ldr	r1, [sp, #28]
 244 0066 FFF7FEFF 		bl	__aeabi_lmul
 245              	.LVL8:
 246              		.loc 1 243 52 view .LVU48
 247 006a 0019     		adds	r0, r0, r4
 248 006c 6941     		adcs	r1, r1, r5
 249              		.loc 1 243 36 view .LVU49
 250 006e 0B01     		lsls	r3, r1, #4
 251 0070 060F     		lsrs	r6, r0, #28
 252 0072 1E43     		orrs	r6, r3
 253 0074 0F17     		asrs	r7, r1, #28
 254              	.LVL9:
 244:Core/Src/main.c **** 
 245:Core/Src/main.c ****         	                  int64_t temp_xi = x_sq - y_sq + x0;
 255              		.loc 1 245 28 is_stmt 1 view .LVU50
 256              		.loc 1 245 51 is_stmt 0 view .LVU51
 257 0076 029A     		ldr	r2, [sp, #8]
 258 0078 039B     		ldr	r3, [sp, #12]
 259 007a 0498     		ldr	r0, [sp, #16]
 260 007c 0599     		ldr	r1, [sp, #20]
 261 007e 121A     		subs	r2, r2, r0
 262 0080 8B41     		sbcs	r3, r3, r1
 263              		.loc 1 245 36 view .LVU52
 264 0082 0A98     		ldr	r0, [sp, #40]
 265 0084 0B99     		ldr	r1, [sp, #44]
 266 0086 8018     		adds	r0, r0, r2
 267 0088 5941     		adcs	r1, r1, r3
 268 008a 0690     		str	r0, [sp, #24]
 269 008c 0791     		str	r1, [sp, #28]
 270              	.LVL10:
ARM GAS  C:\Users\mulwe\AppData\Local\Temp\ccPK4Hju.s 			page 10


 246:Core/Src/main.c ****         	                  yi = (xy << 1) + y0;
 271              		.loc 1 246 28 is_stmt 1 view .LVU53
 272              		.loc 1 246 37 is_stmt 0 view .LVU54
 273 008e 3200     		movs	r2, r6
 274 0090 3B00     		movs	r3, r7
 275 0092 9219     		adds	r2, r2, r6
 276 0094 7B41     		adcs	r3, r3, r7
 277              		.loc 1 246 31 view .LVU55
 278 0096 0C98     		ldr	r0, [sp, #48]
 279 0098 0D99     		ldr	r1, [sp, #52]
 280              	.LVL11:
 281              		.loc 1 246 31 view .LVU56
 282 009a 8018     		adds	r0, r0, r2
 283 009c 5941     		adcs	r1, r1, r3
 284 009e 0890     		str	r0, [sp, #32]
 285 00a0 0991     		str	r1, [sp, #36]
 286              	.LVL12:
 247:Core/Src/main.c ****         	                  xi = temp_xi;
 287              		.loc 1 247 28 is_stmt 1 view .LVU57
 248:Core/Src/main.c **** 
 249:Core/Src/main.c ****         	                  iteration++;
 288              		.loc 1 249 28 view .LVU58
 289              		.loc 1 249 37 is_stmt 0 view .LVU59
 290 00a2 0123     		movs	r3, #1
 291 00a4 9C46     		mov	ip, r3
 292 00a6 E344     		add	fp, fp, ip
 293              	.LVL13:
 294              	.L6:
 295              		.loc 1 249 37 view .LVU60
 296              	.LBE10:
 237:Core/Src/main.c ****         	                     ((xi * xi + yi * yi) <= (4LL * S * S))) {
 297              		.loc 1 237 58 is_stmt 1 view .LVU61
 298 00a8 C345     		cmp	fp, r8
 299 00aa 1CDA     		bge	.L7
 238:Core/Src/main.c **** 
 300              		.loc 1 238 36 is_stmt 0 view .LVU62
 301 00ac 0698     		ldr	r0, [sp, #24]
 302 00ae 0799     		ldr	r1, [sp, #28]
 303 00b0 0200     		movs	r2, r0
 304 00b2 0B00     		movs	r3, r1
 305 00b4 FFF7FEFF 		bl	__aeabi_lmul
 306              	.LVL14:
 307 00b8 0090     		str	r0, [sp]
 308 00ba 0191     		str	r1, [sp, #4]
 238:Core/Src/main.c **** 
 309              		.loc 1 238 46 view .LVU63
 310 00bc 0898     		ldr	r0, [sp, #32]
 311 00be 0999     		ldr	r1, [sp, #36]
 312 00c0 0200     		movs	r2, r0
 313 00c2 0B00     		movs	r3, r1
 314 00c4 FFF7FEFF 		bl	__aeabi_lmul
 315              	.LVL15:
 316 00c8 0200     		movs	r2, r0
 317 00ca 0B00     		movs	r3, r1
 318 00cc 1000     		movs	r0, r2
 319 00ce 1900     		movs	r1, r3
 238:Core/Src/main.c **** 
ARM GAS  C:\Users\mulwe\AppData\Local\Temp\ccPK4Hju.s 			page 11


 320              		.loc 1 238 41 view .LVU64
 321 00d0 009A     		ldr	r2, [sp]
 322 00d2 019B     		ldr	r3, [sp, #4]
 323 00d4 1218     		adds	r2, r2, r0
 324 00d6 4B41     		adcs	r3, r3, r1
 237:Core/Src/main.c ****         	                     ((xi * xi + yi * yi) <= (4LL * S * S))) {
 325              		.loc 1 237 58 discriminator 1 view .LVU65
 326 00d8 8024     		movs	r4, #128
 327 00da E404     		lsls	r4, r4, #19
 328 00dc A342     		cmp	r3, r4
 329 00de 02DC     		bgt	.L7
 330 00e0 9FD1     		bne	.L8
 331 00e2 002A     		cmp	r2, #0
 332 00e4 9DD0     		beq	.L8
 333              	.L7:
 250:Core/Src/main.c ****         	              }
 251:Core/Src/main.c **** 
 252:Core/Src/main.c ****         	              mandelbrot_sum += iteration;
 334              		.loc 1 252 24 is_stmt 1 view .LVU66
 335              		.loc 1 252 39 is_stmt 0 view .LVU67
 336 00e6 5B46     		mov	r3, fp
 337 00e8 1E93     		str	r3, [sp, #120]
 338 00ea DB17     		asrs	r3, r3, #31
 339 00ec 1F93     		str	r3, [sp, #124]
 340 00ee 209B     		ldr	r3, [sp, #128]
 341 00f0 219C     		ldr	r4, [sp, #132]
 342 00f2 1E99     		ldr	r1, [sp, #120]
 343 00f4 1F9A     		ldr	r2, [sp, #124]
 344 00f6 5B18     		adds	r3, r3, r1
 345 00f8 5441     		adcs	r4, r4, r2
 346 00fa 2093     		str	r3, [sp, #128]
 347 00fc 2194     		str	r4, [sp, #132]
 348              	.LVL16:
 349              		.loc 1 252 39 view .LVU68
 350              	.LBE9:
 225:Core/Src/main.c **** 
 351              		.loc 1 225 39 is_stmt 1 discriminator 2 view .LVU69
 352 00fe 0123     		movs	r3, #1
 353              	.LVL17:
 225:Core/Src/main.c **** 
 354              		.loc 1 225 39 is_stmt 0 discriminator 2 view .LVU70
 355 0100 9C46     		mov	ip, r3
 356 0102 E144     		add	r9, r9, ip
 357              	.LVL18:
 358              	.L11:
 225:Core/Src/main.c **** 
 359              		.loc 1 225 29 is_stmt 1 discriminator 1 view .LVU71
 360 0104 D145     		cmp	r9, r10
 361 0106 00DB     		blt	.LCB323
 362 0108 8BE0     		b	.L13	@long jump
 363              	.LCB323:
 364              	.LBB11:
 227:Core/Src/main.c ****         	              int64_t y_scaled = ((int64_t)y * S + height / 2) / height;
 365              		.loc 1 227 12 view .LVU72
 227:Core/Src/main.c ****         	              int64_t y_scaled = ((int64_t)y * S + height / 2) / height;
 366              		.loc 1 227 32 is_stmt 0 view .LVU73
 367 010a 4B46     		mov	r3, r9
ARM GAS  C:\Users\mulwe\AppData\Local\Temp\ccPK4Hju.s 			page 12


 368 010c DA17     		asrs	r2, r3, #31
 227:Core/Src/main.c ****         	              int64_t y_scaled = ((int64_t)y * S + height / 2) / height;
 369              		.loc 1 227 43 view .LVU74
 370 010e 1B09     		lsrs	r3, r3, #4
 371 0110 1207     		lsls	r2, r2, #28
 372 0112 0F92     		str	r2, [sp, #60]
 373 0114 1A43     		orrs	r2, r3
 374 0116 0F92     		str	r2, [sp, #60]
 375 0118 4B46     		mov	r3, r9
 376 011a 1B07     		lsls	r3, r3, #28
 377 011c 0E93     		str	r3, [sp, #56]
 227:Core/Src/main.c ****         	              int64_t y_scaled = ((int64_t)y * S + height / 2) / height;
 378              		.loc 1 227 55 view .LVU75
 379 011e 5346     		mov	r3, r10
 380 0120 DB0F     		lsrs	r3, r3, #31
 381 0122 5344     		add	r3, r3, r10
 382 0124 5A10     		asrs	r2, r3, #1
 383 0126 1A92     		str	r2, [sp, #104]
 384 0128 DB17     		asrs	r3, r3, #31
 385 012a 1B93     		str	r3, [sp, #108]
 227:Core/Src/main.c ****         	              int64_t y_scaled = ((int64_t)y * S + height / 2) / height;
 386              		.loc 1 227 47 view .LVU76
 387 012c 0E98     		ldr	r0, [sp, #56]
 388 012e 0F99     		ldr	r1, [sp, #60]
 389 0130 1A9B     		ldr	r3, [sp, #104]
 390 0132 1B9C     		ldr	r4, [sp, #108]
 391 0134 C018     		adds	r0, r0, r3
 392 0136 6141     		adcs	r1, r1, r4
 227:Core/Src/main.c ****         	              int64_t y_scaled = ((int64_t)y * S + height / 2) / height;
 393              		.loc 1 227 60 view .LVU77
 394 0138 5346     		mov	r3, r10
 395 013a DB17     		asrs	r3, r3, #31
 227:Core/Src/main.c ****         	              int64_t y_scaled = ((int64_t)y * S + height / 2) / height;
 396              		.loc 1 227 20 view .LVU78
 397 013c 5246     		mov	r2, r10
 398 013e FFF7FEFF 		bl	__aeabi_ldivmod
 399              	.LVL19:
 400 0142 0400     		movs	r4, r0
 401 0144 0D00     		movs	r5, r1
 402              	.LVL20:
 228:Core/Src/main.c **** 
 403              		.loc 1 228 24 is_stmt 1 view .LVU79
 228:Core/Src/main.c **** 
 404              		.loc 1 228 44 is_stmt 0 view .LVU80
 405 0146 2399     		ldr	r1, [sp, #140]
 406 0148 CA17     		asrs	r2, r1, #31
 228:Core/Src/main.c **** 
 407              		.loc 1 228 55 view .LVU81
 408 014a 0B09     		lsrs	r3, r1, #4
 409 014c 1207     		lsls	r2, r2, #28
 410 014e 1192     		str	r2, [sp, #68]
 411 0150 1A43     		orrs	r2, r3
 412 0152 1192     		str	r2, [sp, #68]
 413 0154 0B07     		lsls	r3, r1, #28
 414 0156 1093     		str	r3, [sp, #64]
 228:Core/Src/main.c **** 
 415              		.loc 1 228 68 view .LVU82
ARM GAS  C:\Users\mulwe\AppData\Local\Temp\ccPK4Hju.s 			page 13


 416 0158 229A     		ldr	r2, [sp, #136]
 417 015a D30F     		lsrs	r3, r2, #31
 418 015c 9446     		mov	ip, r2
 419 015e 6344     		add	r3, r3, ip
 420 0160 5810     		asrs	r0, r3, #1
 421 0162 1C90     		str	r0, [sp, #112]
 422 0164 DB17     		asrs	r3, r3, #31
 423 0166 1D93     		str	r3, [sp, #116]
 228:Core/Src/main.c **** 
 424              		.loc 1 228 59 view .LVU83
 425 0168 1098     		ldr	r0, [sp, #64]
 426 016a 1199     		ldr	r1, [sp, #68]
 427 016c 1C9A     		ldr	r2, [sp, #112]
 428 016e 1D9B     		ldr	r3, [sp, #116]
 429 0170 8018     		adds	r0, r0, r2
 430 0172 5941     		adcs	r1, r1, r3
 228:Core/Src/main.c **** 
 431              		.loc 1 228 73 view .LVU84
 432 0174 6246     		mov	r2, ip
 433 0176 D317     		asrs	r3, r2, #31
 228:Core/Src/main.c **** 
 434              		.loc 1 228 32 view .LVU85
 435 0178 FFF7FEFF 		bl	__aeabi_ldivmod
 436              	.LVL21:
 230:Core/Src/main.c ****         	              int64_t y0 = ((y_scaled * (int64_t)(2.0 * S) + (S >> 1)) >> 28) - (1 * S);
 437              		.loc 1 230 24 is_stmt 1 view .LVU86
 230:Core/Src/main.c ****         	              int64_t y0 = ((y_scaled * (int64_t)(2.0 * S) + (S >> 1)) >> 28) - (1 * S);
 438              		.loc 1 230 48 is_stmt 0 view .LVU87
 439 017c 630F     		lsrs	r3, r4, #29
 440 017e EA00     		lsls	r2, r5, #3
 441 0180 1992     		str	r2, [sp, #100]
 442 0182 1A43     		orrs	r2, r3
 443 0184 1992     		str	r2, [sp, #100]
 444 0186 E300     		lsls	r3, r4, #3
 445 0188 1893     		str	r3, [sp, #96]
 446 018a 189A     		ldr	r2, [sp, #96]
 447 018c 199B     		ldr	r3, [sp, #100]
 448 018e 121B     		subs	r2, r2, r4
 449 0190 AB41     		sbcs	r3, r3, r5
 450 0192 5509     		lsrs	r5, r2, #5
 451 0194 DC06     		lsls	r4, r3, #27
 452              	.LVL22:
 230:Core/Src/main.c ****         	              int64_t y0 = ((y_scaled * (int64_t)(2.0 * S) + (S >> 1)) >> 28) - (1 * S);
 453              		.loc 1 230 48 view .LVU88
 454 0196 D306     		lsls	r3, r2, #27
 455 0198 9C46     		mov	ip, r3
 456 019a 6246     		mov	r2, ip
 457 019c 2543     		orrs	r5, r4
 458 019e 2B00     		movs	r3, r5
 230:Core/Src/main.c ****         	              int64_t y0 = ((y_scaled * (int64_t)(2.0 * S) + (S >> 1)) >> 28) - (1 * S);
 459              		.loc 1 230 69 view .LVU89
 460 01a0 8024     		movs	r4, #128
 461 01a2 2405     		lsls	r4, r4, #20
 462 01a4 0025     		movs	r5, #0
 463 01a6 1219     		adds	r2, r2, r4
 464 01a8 6B41     		adcs	r3, r3, r5
 230:Core/Src/main.c ****         	              int64_t y0 = ((y_scaled * (int64_t)(2.0 * S) + (S >> 1)) >> 28) - (1 * S);
ARM GAS  C:\Users\mulwe\AppData\Local\Temp\ccPK4Hju.s 			page 14


 465              		.loc 1 230 81 view .LVU90
 466 01aa 1C01     		lsls	r4, r3, #4
 467 01ac A446     		mov	ip, r4
 468 01ae 140F     		lsrs	r4, r2, #28
 469 01b0 1294     		str	r4, [sp, #72]
 470 01b2 6546     		mov	r5, ip
 471 01b4 2C43     		orrs	r4, r5
 472 01b6 1294     		str	r4, [sp, #72]
 473 01b8 1B17     		asrs	r3, r3, #28
 474 01ba 1393     		str	r3, [sp, #76]
 230:Core/Src/main.c ****         	              int64_t y0 = ((y_scaled * (int64_t)(2.0 * S) + (S >> 1)) >> 28) - (1 * S);
 475              		.loc 1 230 32 view .LVU91
 476 01bc D822     		movs	r2, #216
 477 01be 1206     		lsls	r2, r2, #24
 478 01c0 0123     		movs	r3, #1
 479 01c2 5B42     		rsbs	r3, r3, #0
 480 01c4 129C     		ldr	r4, [sp, #72]
 481 01c6 139D     		ldr	r5, [sp, #76]
 482 01c8 A418     		adds	r4, r4, r2
 483 01ca 5D41     		adcs	r5, r5, r3
 484 01cc 0A94     		str	r4, [sp, #40]
 485 01ce 0B95     		str	r5, [sp, #44]
 486              	.LVL23:
 231:Core/Src/main.c **** 
 487              		.loc 1 231 24 is_stmt 1 view .LVU92
 231:Core/Src/main.c **** 
 488              		.loc 1 231 48 is_stmt 0 view .LVU93
 489 01d0 C308     		lsrs	r3, r0, #3
 490 01d2 4A07     		lsls	r2, r1, #29
 491 01d4 1592     		str	r2, [sp, #84]
 492 01d6 1A43     		orrs	r2, r3
 493 01d8 1592     		str	r2, [sp, #84]
 494 01da 4307     		lsls	r3, r0, #29
 495 01dc 1493     		str	r3, [sp, #80]
 231:Core/Src/main.c **** 
 496              		.loc 1 231 69 view .LVU94
 497 01de 149B     		ldr	r3, [sp, #80]
 498 01e0 159C     		ldr	r4, [sp, #84]
 499 01e2 8021     		movs	r1, #128
 500              	.LVL24:
 231:Core/Src/main.c **** 
 501              		.loc 1 231 69 view .LVU95
 502 01e4 0905     		lsls	r1, r1, #20
 503 01e6 0022     		movs	r2, #0
 504 01e8 C918     		adds	r1, r1, r3
 505 01ea 6241     		adcs	r2, r2, r4
 506 01ec 1500     		movs	r5, r2
 231:Core/Src/main.c **** 
 507              		.loc 1 231 81 view .LVU96
 508 01ee 1301     		lsls	r3, r2, #4
 509 01f0 0A0F     		lsrs	r2, r1, #28
 510 01f2 1692     		str	r2, [sp, #88]
 511 01f4 1A43     		orrs	r2, r3
 512 01f6 1692     		str	r2, [sp, #88]
 513 01f8 2B17     		asrs	r3, r5, #28
 514 01fa 1793     		str	r3, [sp, #92]
 231:Core/Src/main.c **** 
ARM GAS  C:\Users\mulwe\AppData\Local\Temp\ccPK4Hju.s 			page 15


 515              		.loc 1 231 32 view .LVU97
 516 01fc F022     		movs	r2, #240
 517 01fe 1206     		lsls	r2, r2, #24
 518 0200 0123     		movs	r3, #1
 519 0202 5B42     		rsbs	r3, r3, #0
 520 0204 1698     		ldr	r0, [sp, #88]
 521 0206 1799     		ldr	r1, [sp, #92]
 231:Core/Src/main.c **** 
 522              		.loc 1 231 32 view .LVU98
 523 0208 8018     		adds	r0, r0, r2
 524 020a 5941     		adcs	r1, r1, r3
 525 020c 0C90     		str	r0, [sp, #48]
 526 020e 0D91     		str	r1, [sp, #52]
 527              	.LVL25:
 233:Core/Src/main.c ****         	              int64_t yi = 0;
 528              		.loc 1 233 24 is_stmt 1 view .LVU99
 234:Core/Src/main.c ****         	              int iteration = 0;
 529              		.loc 1 234 24 view .LVU100
 235:Core/Src/main.c **** 
 530              		.loc 1 235 24 view .LVU101
 237:Core/Src/main.c ****         	                     ((xi * xi + yi * yi) <= (4LL * S * S))) {
 531              		.loc 1 237 24 view .LVU102
 235:Core/Src/main.c **** 
 532              		.loc 1 235 28 is_stmt 0 view .LVU103
 533 0210 0023     		movs	r3, #0
 534 0212 9B46     		mov	fp, r3
 234:Core/Src/main.c ****         	              int iteration = 0;
 535              		.loc 1 234 32 view .LVU104
 536 0214 0023     		movs	r3, #0
 537 0216 0024     		movs	r4, #0
 538              	.LVL26:
 234:Core/Src/main.c ****         	              int iteration = 0;
 539              		.loc 1 234 32 view .LVU105
 540 0218 0893     		str	r3, [sp, #32]
 541 021a 0994     		str	r4, [sp, #36]
 233:Core/Src/main.c ****         	              int64_t yi = 0;
 542              		.loc 1 233 32 view .LVU106
 543 021c 0693     		str	r3, [sp, #24]
 544 021e 0794     		str	r4, [sp, #28]
 237:Core/Src/main.c ****         	                     ((xi * xi + yi * yi) <= (4LL * S * S))) {
 545              		.loc 1 237 30 view .LVU107
 546 0220 42E7     		b	.L6
 547              	.LVL27:
 548              	.L13:
 237:Core/Src/main.c ****         	                     ((xi * xi + yi * yi) <= (4LL * S * S))) {
 549              		.loc 1 237 30 view .LVU108
 550              	.LBE11:
 551              	.LBE8:
 224:Core/Src/main.c ****           for (int x = 0; x < width; x++) {
 552              		.loc 1 224 35 is_stmt 1 discriminator 2 view .LVU109
 553 0222 239B     		ldr	r3, [sp, #140]
 554 0224 0133     		adds	r3, r3, #1
 555 0226 2393     		str	r3, [sp, #140]
 556              	.LVL28:
 557              	.L5:
 224:Core/Src/main.c ****           for (int x = 0; x < width; x++) {
 558              		.loc 1 224 24 discriminator 1 view .LVU110
ARM GAS  C:\Users\mulwe\AppData\Local\Temp\ccPK4Hju.s 			page 16


 559 0228 239B     		ldr	r3, [sp, #140]
 560 022a 229A     		ldr	r2, [sp, #136]
 561 022c 9342     		cmp	r3, r2
 562 022e 02DA     		bge	.L14
 563              	.LBB12:
 225:Core/Src/main.c **** 
 564              		.loc 1 225 20 is_stmt 0 view .LVU111
 565 0230 0023     		movs	r3, #0
 566 0232 9946     		mov	r9, r3
 567 0234 66E7     		b	.L11
 568              	.LVL29:
 569              	.L14:
 225:Core/Src/main.c **** 
 570              		.loc 1 225 20 view .LVU112
 571              	.LBE12:
 572              	.LBE13:
 253:Core/Src/main.c ****         	          }
 254:Core/Src/main.c ****         	      }
 255:Core/Src/main.c **** 
 256:Core/Src/main.c ****         	      return mandelbrot_sum;
 573              		.loc 1 256 16 is_stmt 1 view .LVU113
 257:Core/Src/main.c **** 
 258:Core/Src/main.c **** }
 574              		.loc 1 258 1 is_stmt 0 view .LVU114
 575 0236 2098     		ldr	r0, [sp, #128]
 576 0238 2199     		ldr	r1, [sp, #132]
 577 023a 25B0     		add	sp, sp, #148
 578              		@ sp needed
 579              	.LVL30:
 580              	.LVL31:
 581              		.loc 1 258 1 view .LVU115
 582 023c F0BC     		pop	{r4, r5, r6, r7}
 583 023e BB46     		mov	fp, r7
 584 0240 B246     		mov	r10, r6
 585 0242 A946     		mov	r9, r5
 586 0244 A046     		mov	r8, r4
 587 0246 F0BD     		pop	{r4, r5, r6, r7, pc}
 588              		.cfi_endproc
 589              	.LFE46:
 591              		.global	__aeabi_i2d
 592              		.global	__aeabi_ddiv
 593              		.global	__aeabi_dmul
 594              		.global	__aeabi_dsub
 595              		.global	__aeabi_dadd
 596              		.global	__aeabi_dcmple
 597              		.section	.text.calculate_mandelbrot_double,"ax",%progbits
 598              		.align	1
 599              		.global	calculate_mandelbrot_double
 600              		.syntax unified
 601              		.code	16
 602              		.thumb_func
 604              	calculate_mandelbrot_double:
 605              	.LVL32:
 606              	.LFB47:
 259:Core/Src/main.c **** 
 260:Core/Src/main.c **** //Mandelbroat using variable type double
 261:Core/Src/main.c **** uint64_t calculate_mandelbrot_double(int width, int height, int max_iterations) {
ARM GAS  C:\Users\mulwe\AppData\Local\Temp\ccPK4Hju.s 			page 17


 607              		.loc 1 261 81 is_stmt 1 view -0
 608              		.cfi_startproc
 609              		@ args = 0, pretend = 0, frame = 72
 610              		@ frame_needed = 0, uses_anonymous_args = 0
 611              		.loc 1 261 81 is_stmt 0 view .LVU117
 612 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 613              	.LCFI5:
 614              		.cfi_def_cfa_offset 20
 615              		.cfi_offset 4, -20
 616              		.cfi_offset 5, -16
 617              		.cfi_offset 6, -12
 618              		.cfi_offset 7, -8
 619              		.cfi_offset 14, -4
 620 0002 DE46     		mov	lr, fp
 621 0004 5746     		mov	r7, r10
 622 0006 4E46     		mov	r6, r9
 623 0008 4546     		mov	r5, r8
 624 000a E0B5     		push	{r5, r6, r7, lr}
 625              	.LCFI6:
 626              		.cfi_def_cfa_offset 36
 627              		.cfi_offset 8, -36
 628              		.cfi_offset 9, -32
 629              		.cfi_offset 10, -28
 630              		.cfi_offset 11, -24
 631 000c 93B0     		sub	sp, sp, #76
 632              	.LCFI7:
 633              		.cfi_def_cfa_offset 112
 634 000e 8346     		mov	fp, r0
 635 0010 0D00     		movs	r5, r1
 636 0012 9146     		mov	r9, r2
 262:Core/Src/main.c ****     uint64_t mandelbrot_sum = 0;
 637              		.loc 1 262 5 is_stmt 1 view .LVU118
 638              	.LVL33:
 263:Core/Src/main.c **** 
 264:Core/Src/main.c ****     double inv_width  = 3.5 / width;
 639              		.loc 1 264 5 view .LVU119
 640              		.loc 1 264 29 is_stmt 0 view .LVU120
 641 0014 FFF7FEFF 		bl	__aeabi_i2d
 642              	.LVL34:
 643              		.loc 1 264 29 view .LVU121
 644 0018 0200     		movs	r2, r0
 645 001a 0B00     		movs	r3, r1
 646              		.loc 1 264 12 view .LVU122
 647 001c 0020     		movs	r0, #0
 648 001e 4F49     		ldr	r1, .L25
 649 0020 FFF7FEFF 		bl	__aeabi_ddiv
 650              	.LVL35:
 651 0024 0E90     		str	r0, [sp, #56]
 652 0026 0F91     		str	r1, [sp, #60]
 653              	.LVL36:
 265:Core/Src/main.c ****     double inv_height = 2.0 / height;
 654              		.loc 1 265 5 is_stmt 1 view .LVU123
 655              		.loc 1 265 29 is_stmt 0 view .LVU124
 656 0028 2800     		movs	r0, r5
 657              	.LVL37:
 658              		.loc 1 265 29 view .LVU125
 659 002a FFF7FEFF 		bl	__aeabi_i2d
ARM GAS  C:\Users\mulwe\AppData\Local\Temp\ccPK4Hju.s 			page 18


 660              	.LVL38:
 661 002e 0200     		movs	r2, r0
 662 0030 0B00     		movs	r3, r1
 663              		.loc 1 265 12 view .LVU126
 664 0032 0020     		movs	r0, #0
 665 0034 8021     		movs	r1, #128
 666 0036 C905     		lsls	r1, r1, #23
 667 0038 FFF7FEFF 		bl	__aeabi_ddiv
 668              	.LVL39:
 669 003c 1090     		str	r0, [sp, #64]
 670 003e 1191     		str	r1, [sp, #68]
 671              	.LVL40:
 266:Core/Src/main.c **** 
 267:Core/Src/main.c ****     for (int y = 0; y < height; y++) {
 672              		.loc 1 267 5 is_stmt 1 view .LVU127
 673              	.LBB14:
 674              		.loc 1 267 10 view .LVU128
 675              		.loc 1 267 14 is_stmt 0 view .LVU129
 676 0040 0024     		movs	r4, #0
 677              	.LBE14:
 262:Core/Src/main.c **** 
 678              		.loc 1 262 14 view .LVU130
 679 0042 0022     		movs	r2, #0
 680 0044 0023     		movs	r3, #0
 681 0046 0A92     		str	r2, [sp, #40]
 682 0048 0B93     		str	r3, [sp, #44]
 683 004a 5B46     		mov	r3, fp
 684 004c 0D93     		str	r3, [sp, #52]
 685              	.LBB22:
 686              		.loc 1 267 5 view .LVU131
 687 004e 68E0     		b	.L16
 688              	.LVL41:
 689              	.L20:
 690              	.LBB15:
 691              	.LBB16:
 692              	.LBB17:
 693              	.LBB18:
 268:Core/Src/main.c ****         double y0 = y * inv_height - 1.0;
 269:Core/Src/main.c **** 
 270:Core/Src/main.c ****         for (int x = 0; x < width; x++) {
 271:Core/Src/main.c ****             double x0 = x * inv_width - 2.5;
 272:Core/Src/main.c **** 
 273:Core/Src/main.c ****             double xi = 0.0, yi = 0.0;
 274:Core/Src/main.c ****             int iteration = 0;
 275:Core/Src/main.c **** 
 276:Core/Src/main.c ****             while (iteration < max_iterations && (xi*xi + yi*yi) <= 4.0) {
 277:Core/Src/main.c ****                 double temp = xi*xi - yi*yi + x0;
 694              		.loc 1 277 17 is_stmt 1 view .LVU132
 695              		.loc 1 277 37 is_stmt 0 view .LVU133
 696 0050 029A     		ldr	r2, [sp, #8]
 697 0052 039B     		ldr	r3, [sp, #12]
 698 0054 0098     		ldr	r0, [sp]
 699 0056 0199     		ldr	r1, [sp, #4]
 700 0058 FFF7FEFF 		bl	__aeabi_dsub
 701              	.LVL42:
 702              		.loc 1 277 24 view .LVU134
 703 005c 049A     		ldr	r2, [sp, #16]
ARM GAS  C:\Users\mulwe\AppData\Local\Temp\ccPK4Hju.s 			page 19


 704 005e 059B     		ldr	r3, [sp, #20]
 705 0060 FFF7FEFF 		bl	__aeabi_dadd
 706              	.LVL43:
 707 0064 0090     		str	r0, [sp]
 708 0066 0191     		str	r1, [sp, #4]
 709              	.LVL44:
 278:Core/Src/main.c ****                 yi = 2.0 * xi * yi + y0;
 710              		.loc 1 278 17 is_stmt 1 view .LVU135
 711              		.loc 1 278 26 is_stmt 0 view .LVU136
 712 0068 2200     		movs	r2, r4
 713 006a 2B00     		movs	r3, r5
 714 006c 2000     		movs	r0, r4
 715              	.LVL45:
 716              		.loc 1 278 26 view .LVU137
 717 006e 2900     		movs	r1, r5
 718 0070 FFF7FEFF 		bl	__aeabi_dadd
 719              	.LVL46:
 720              		.loc 1 278 31 view .LVU138
 721 0074 3200     		movs	r2, r6
 722 0076 3B00     		movs	r3, r7
 723 0078 FFF7FEFF 		bl	__aeabi_dmul
 724              	.LVL47:
 725              		.loc 1 278 20 view .LVU139
 726 007c 069A     		ldr	r2, [sp, #24]
 727 007e 079B     		ldr	r3, [sp, #28]
 728 0080 FFF7FEFF 		bl	__aeabi_dadd
 729              	.LVL48:
 730 0084 0600     		movs	r6, r0
 731              	.LVL49:
 732              		.loc 1 278 20 view .LVU140
 733 0086 0F00     		movs	r7, r1
 734              	.LVL50:
 279:Core/Src/main.c ****                 xi = temp;
 735              		.loc 1 279 17 is_stmt 1 view .LVU141
 280:Core/Src/main.c ****                 iteration++;
 736              		.loc 1 280 17 view .LVU142
 737              		.loc 1 280 26 is_stmt 0 view .LVU143
 738 0088 0123     		movs	r3, #1
 739 008a 9C46     		mov	ip, r3
 740 008c E044     		add	r8, r8, ip
 741              	.LVL51:
 279:Core/Src/main.c ****                 xi = temp;
 742              		.loc 1 279 20 view .LVU144
 743 008e 009C     		ldr	r4, [sp]
 744 0090 019D     		ldr	r5, [sp, #4]
 745              	.LVL52:
 746              	.L18:
 279:Core/Src/main.c ****                 xi = temp;
 747              		.loc 1 279 20 view .LVU145
 748              	.LBE18:
 276:Core/Src/main.c ****                 double temp = xi*xi - yi*yi + x0;
 749              		.loc 1 276 47 is_stmt 1 view .LVU146
 750 0092 C845     		cmp	r8, r9
 751 0094 1BDA     		bge	.L19
 276:Core/Src/main.c ****                 double temp = xi*xi - yi*yi + x0;
 752              		.loc 1 276 53 is_stmt 0 discriminator 1 view .LVU147
 753 0096 2200     		movs	r2, r4
ARM GAS  C:\Users\mulwe\AppData\Local\Temp\ccPK4Hju.s 			page 20


 754 0098 2B00     		movs	r3, r5
 755 009a 2000     		movs	r0, r4
 756 009c 2900     		movs	r1, r5
 757 009e FFF7FEFF 		bl	__aeabi_dmul
 758              	.LVL53:
 759 00a2 0090     		str	r0, [sp]
 760 00a4 0191     		str	r1, [sp, #4]
 276:Core/Src/main.c ****                 double temp = xi*xi - yi*yi + x0;
 761              		.loc 1 276 61 discriminator 1 view .LVU148
 762 00a6 3200     		movs	r2, r6
 763 00a8 3B00     		movs	r3, r7
 764 00aa 3000     		movs	r0, r6
 765 00ac 3900     		movs	r1, r7
 766 00ae FFF7FEFF 		bl	__aeabi_dmul
 767              	.LVL54:
 768 00b2 0200     		movs	r2, r0
 769 00b4 0B00     		movs	r3, r1
 770 00b6 0292     		str	r2, [sp, #8]
 771 00b8 0393     		str	r3, [sp, #12]
 276:Core/Src/main.c ****                 double temp = xi*xi - yi*yi + x0;
 772              		.loc 1 276 57 discriminator 1 view .LVU149
 773 00ba 0098     		ldr	r0, [sp]
 774 00bc 0199     		ldr	r1, [sp, #4]
 775 00be FFF7FEFF 		bl	__aeabi_dadd
 776              	.LVL55:
 276:Core/Src/main.c ****                 double temp = xi*xi - yi*yi + x0;
 777              		.loc 1 276 47 discriminator 1 view .LVU150
 778 00c2 0022     		movs	r2, #0
 779 00c4 264B     		ldr	r3, .L25+4
 780 00c6 FFF7FEFF 		bl	__aeabi_dcmple
 781              	.LVL56:
 782 00ca 0028     		cmp	r0, #0
 783 00cc C0D1     		bne	.L20
 784              	.L19:
 281:Core/Src/main.c ****             }
 282:Core/Src/main.c **** 
 283:Core/Src/main.c ****             mandelbrot_sum += iteration;
 785              		.loc 1 283 13 is_stmt 1 view .LVU151
 786              		.loc 1 283 28 is_stmt 0 view .LVU152
 787 00ce 4346     		mov	r3, r8
 788 00d0 0893     		str	r3, [sp, #32]
 789 00d2 DB17     		asrs	r3, r3, #31
 790 00d4 0993     		str	r3, [sp, #36]
 791 00d6 0A9B     		ldr	r3, [sp, #40]
 792 00d8 0B9C     		ldr	r4, [sp, #44]
 793 00da 0899     		ldr	r1, [sp, #32]
 794 00dc 099A     		ldr	r2, [sp, #36]
 795 00de 5B18     		adds	r3, r3, r1
 796 00e0 5441     		adcs	r4, r4, r2
 797 00e2 0A93     		str	r3, [sp, #40]
 798 00e4 0B94     		str	r4, [sp, #44]
 799              	.LVL57:
 800              		.loc 1 283 28 view .LVU153
 801              	.LBE17:
 270:Core/Src/main.c ****             double x0 = x * inv_width - 2.5;
 802              		.loc 1 270 37 is_stmt 1 discriminator 2 view .LVU154
 803 00e6 0C9B     		ldr	r3, [sp, #48]
ARM GAS  C:\Users\mulwe\AppData\Local\Temp\ccPK4Hju.s 			page 21


 804              	.LVL58:
 270:Core/Src/main.c ****             double x0 = x * inv_width - 2.5;
 805              		.loc 1 270 37 is_stmt 0 discriminator 2 view .LVU155
 806 00e8 0133     		adds	r3, r3, #1
 807 00ea 0C93     		str	r3, [sp, #48]
 808              	.LVL59:
 809              	.L17:
 270:Core/Src/main.c ****             double x0 = x * inv_width - 2.5;
 810              		.loc 1 270 27 is_stmt 1 discriminator 1 view .LVU156
 811 00ec 0C9B     		ldr	r3, [sp, #48]
 812 00ee 0D9A     		ldr	r2, [sp, #52]
 813 00f0 9342     		cmp	r3, r2
 814 00f2 13DA     		bge	.L23
 815              	.LBB19:
 271:Core/Src/main.c **** 
 816              		.loc 1 271 13 view .LVU157
 271:Core/Src/main.c **** 
 817              		.loc 1 271 27 is_stmt 0 view .LVU158
 818 00f4 0C98     		ldr	r0, [sp, #48]
 819 00f6 FFF7FEFF 		bl	__aeabi_i2d
 820              	.LVL60:
 821 00fa 0E9A     		ldr	r2, [sp, #56]
 822 00fc 0F9B     		ldr	r3, [sp, #60]
 823 00fe FFF7FEFF 		bl	__aeabi_dmul
 824              	.LVL61:
 271:Core/Src/main.c **** 
 825              		.loc 1 271 20 view .LVU159
 826 0102 0022     		movs	r2, #0
 827 0104 174B     		ldr	r3, .L25+8
 828 0106 FFF7FEFF 		bl	__aeabi_dsub
 829              	.LVL62:
 830 010a 0490     		str	r0, [sp, #16]
 831 010c 0591     		str	r1, [sp, #20]
 832              	.LVL63:
 273:Core/Src/main.c ****             int iteration = 0;
 833              		.loc 1 273 13 is_stmt 1 view .LVU160
 274:Core/Src/main.c **** 
 834              		.loc 1 274 13 view .LVU161
 276:Core/Src/main.c ****                 double temp = xi*xi - yi*yi + x0;
 835              		.loc 1 276 13 view .LVU162
 274:Core/Src/main.c **** 
 836              		.loc 1 274 17 is_stmt 0 view .LVU163
 837 010e 0023     		movs	r3, #0
 838 0110 9846     		mov	r8, r3
 273:Core/Src/main.c ****             int iteration = 0;
 839              		.loc 1 273 30 view .LVU164
 840 0112 0026     		movs	r6, #0
 841 0114 0027     		movs	r7, #0
 273:Core/Src/main.c ****             int iteration = 0;
 842              		.loc 1 273 20 view .LVU165
 843 0116 3400     		movs	r4, r6
 844 0118 3D00     		movs	r5, r7
 276:Core/Src/main.c ****                 double temp = xi*xi - yi*yi + x0;
 845              		.loc 1 276 19 view .LVU166
 846 011a BAE7     		b	.L18
 847              	.LVL64:
 848              	.L23:
ARM GAS  C:\Users\mulwe\AppData\Local\Temp\ccPK4Hju.s 			page 22


 276:Core/Src/main.c ****                 double temp = xi*xi - yi*yi + x0;
 849              		.loc 1 276 19 view .LVU167
 850              	.LBE19:
 851              	.LBE16:
 852              	.LBE15:
 267:Core/Src/main.c ****         double y0 = y * inv_height - 1.0;
 853              		.loc 1 267 34 discriminator 2 view .LVU168
 854 011c 5C46     		mov	r4, fp
 855 011e 5546     		mov	r5, r10
 267:Core/Src/main.c ****         double y0 = y * inv_height - 1.0;
 856              		.loc 1 267 34 is_stmt 1 discriminator 2 view .LVU169
 857 0120 0134     		adds	r4, r4, #1
 858              	.LVL65:
 859              	.L16:
 267:Core/Src/main.c ****         double y0 = y * inv_height - 1.0;
 860              		.loc 1 267 23 discriminator 1 view .LVU170
 861 0122 AC42     		cmp	r4, r5
 862 0124 11DA     		bge	.L24
 863              	.LBB21:
 268:Core/Src/main.c **** 
 864              		.loc 1 268 9 view .LVU171
 268:Core/Src/main.c **** 
 865              		.loc 1 268 23 is_stmt 0 view .LVU172
 866 0126 2000     		movs	r0, r4
 867 0128 FFF7FEFF 		bl	__aeabi_i2d
 868              	.LVL66:
 869 012c 109A     		ldr	r2, [sp, #64]
 870 012e 119B     		ldr	r3, [sp, #68]
 871 0130 FFF7FEFF 		bl	__aeabi_dmul
 872              	.LVL67:
 268:Core/Src/main.c **** 
 873              		.loc 1 268 16 view .LVU173
 874 0134 0022     		movs	r2, #0
 875 0136 0C4B     		ldr	r3, .L25+12
 876 0138 FFF7FEFF 		bl	__aeabi_dsub
 877              	.LVL68:
 878 013c 0690     		str	r0, [sp, #24]
 879 013e 0791     		str	r1, [sp, #28]
 880              	.LVL69:
 270:Core/Src/main.c ****             double x0 = x * inv_width - 2.5;
 881              		.loc 1 270 9 is_stmt 1 view .LVU174
 882              	.LBB20:
 270:Core/Src/main.c ****             double x0 = x * inv_width - 2.5;
 883              		.loc 1 270 14 view .LVU175
 270:Core/Src/main.c ****             double x0 = x * inv_width - 2.5;
 884              		.loc 1 270 18 is_stmt 0 view .LVU176
 885 0140 0023     		movs	r3, #0
 886 0142 A346     		mov	fp, r4
 887 0144 0C93     		str	r3, [sp, #48]
 888 0146 AA46     		mov	r10, r5
 270:Core/Src/main.c ****             double x0 = x * inv_width - 2.5;
 889              		.loc 1 270 9 view .LVU177
 890 0148 D0E7     		b	.L17
 891              	.LVL70:
 892              	.L24:
 270:Core/Src/main.c ****             double x0 = x * inv_width - 2.5;
 893              		.loc 1 270 9 view .LVU178
ARM GAS  C:\Users\mulwe\AppData\Local\Temp\ccPK4Hju.s 			page 23


 894              	.LBE20:
 895              	.LBE21:
 896              	.LBE22:
 284:Core/Src/main.c ****         }
 285:Core/Src/main.c ****     }
 286:Core/Src/main.c ****     return mandelbrot_sum;
 897              		.loc 1 286 5 is_stmt 1 view .LVU179
 287:Core/Src/main.c **** }
 898              		.loc 1 287 1 is_stmt 0 view .LVU180
 899 014a 0A98     		ldr	r0, [sp, #40]
 900 014c 0B99     		ldr	r1, [sp, #44]
 901 014e 13B0     		add	sp, sp, #76
 902              		@ sp needed
 903              	.LVL71:
 904              	.LVL72:
 905              	.LVL73:
 906              		.loc 1 287 1 view .LVU181
 907 0150 F0BC     		pop	{r4, r5, r6, r7}
 908 0152 BB46     		mov	fp, r7
 909 0154 B246     		mov	r10, r6
 910 0156 A946     		mov	r9, r5
 911 0158 A046     		mov	r8, r4
 912 015a F0BD     		pop	{r4, r5, r6, r7, pc}
 913              	.L26:
 914              		.align	2
 915              	.L25:
 916 015c 00000C40 		.word	1074528256
 917 0160 00001040 		.word	1074790400
 918 0164 00000440 		.word	1074003968
 919 0168 0000F03F 		.word	1072693248
 920              		.cfi_endproc
 921              	.LFE47:
 923              		.section	.text.Error_Handler,"ax",%progbits
 924              		.align	1
 925              		.global	Error_Handler
 926              		.syntax unified
 927              		.code	16
 928              		.thumb_func
 930              	Error_Handler:
 931              	.LFB48:
 288:Core/Src/main.c **** /* USER CODE END 4 */
 289:Core/Src/main.c **** 
 290:Core/Src/main.c **** /**
 291:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 292:Core/Src/main.c ****   * @retval None
 293:Core/Src/main.c ****   */
 294:Core/Src/main.c **** void Error_Handler(void)
 295:Core/Src/main.c **** {
 932              		.loc 1 295 1 is_stmt 1 view -0
 933              		.cfi_startproc
 934              		@ Volatile: function does not return.
 935              		@ args = 0, pretend = 0, frame = 0
 936              		@ frame_needed = 0, uses_anonymous_args = 0
 937              		@ link register save eliminated.
 296:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 297:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 298:Core/Src/main.c ****   __disable_irq();
ARM GAS  C:\Users\mulwe\AppData\Local\Temp\ccPK4Hju.s 			page 24


 938              		.loc 1 298 3 view .LVU183
 939              	.LBB23:
 940              	.LBI23:
 941              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
ARM GAS  C:\Users\mulwe\AppData\Local\Temp\ccPK4Hju.s 			page 25


  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
ARM GAS  C:\Users\mulwe\AppData\Local\Temp\ccPK4Hju.s 			page 26


 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 942              		.loc 2 140 27 view .LVU184
 943              	.LBB24:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 944              		.loc 2 142 3 view .LVU185
 945              		.syntax divided
 946              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 947 0000 72B6     		cpsid i
 948              	@ 0 "" 2
 949              		.thumb
 950              		.syntax unified
 951              	.L28:
 952              	.LBE24:
 953              	.LBE23:
 299:Core/Src/main.c ****   while (1)
 954              		.loc 1 299 3 view .LVU186
 300:Core/Src/main.c ****   {
 301:Core/Src/main.c ****   }
 955              		.loc 1 301 3 view .LVU187
 299:Core/Src/main.c ****   while (1)
 956              		.loc 1 299 9 view .LVU188
 957 0002 FEE7     		b	.L28
 958              		.cfi_endproc
 959              	.LFE48:
 961              		.section	.text.SystemClock_Config,"ax",%progbits
 962              		.align	1
 963              		.global	SystemClock_Config
ARM GAS  C:\Users\mulwe\AppData\Local\Temp\ccPK4Hju.s 			page 27


 964              		.syntax unified
 965              		.code	16
 966              		.thumb_func
 968              	SystemClock_Config:
 969              	.LFB44:
 149:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 970              		.loc 1 149 1 view -0
 971              		.cfi_startproc
 972              		@ args = 0, pretend = 0, frame = 64
 973              		@ frame_needed = 0, uses_anonymous_args = 0
 974 0000 00B5     		push	{lr}
 975              	.LCFI8:
 976              		.cfi_def_cfa_offset 4
 977              		.cfi_offset 14, -4
 978 0002 91B0     		sub	sp, sp, #68
 979              	.LCFI9:
 980              		.cfi_def_cfa_offset 72
 150:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 981              		.loc 1 150 3 view .LVU190
 150:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 982              		.loc 1 150 22 is_stmt 0 view .LVU191
 983 0004 3022     		movs	r2, #48
 984 0006 0021     		movs	r1, #0
 985 0008 04A8     		add	r0, sp, #16
 986 000a FFF7FEFF 		bl	memset
 987              	.LVL74:
 151:Core/Src/main.c **** 
 988              		.loc 1 151 3 is_stmt 1 view .LVU192
 151:Core/Src/main.c **** 
 989              		.loc 1 151 22 is_stmt 0 view .LVU193
 990 000e 1022     		movs	r2, #16
 991 0010 0021     		movs	r1, #0
 992 0012 6846     		mov	r0, sp
 993 0014 FFF7FEFF 		bl	memset
 994              	.LVL75:
 156:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 995              		.loc 1 156 3 is_stmt 1 view .LVU194
 156:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 996              		.loc 1 156 36 is_stmt 0 view .LVU195
 997 0018 0223     		movs	r3, #2
 998 001a 0493     		str	r3, [sp, #16]
 157:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 999              		.loc 1 157 3 is_stmt 1 view .LVU196
 157:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 1000              		.loc 1 157 30 is_stmt 0 view .LVU197
 1001 001c 0122     		movs	r2, #1
 1002 001e 0792     		str	r2, [sp, #28]
 158:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1003              		.loc 1 158 3 is_stmt 1 view .LVU198
 158:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1004              		.loc 1 158 41 is_stmt 0 view .LVU199
 1005 0020 0F32     		adds	r2, r2, #15
 1006 0022 0892     		str	r2, [sp, #32]
 159:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 1007              		.loc 1 159 3 is_stmt 1 view .LVU200
 159:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 1008              		.loc 1 159 34 is_stmt 0 view .LVU201
ARM GAS  C:\Users\mulwe\AppData\Local\Temp\ccPK4Hju.s 			page 28


 1009 0024 0C93     		str	r3, [sp, #48]
 160:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL12;
 1010              		.loc 1 160 3 is_stmt 1 view .LVU202
 161:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PREDIV = RCC_PREDIV_DIV1;
 1011              		.loc 1 161 3 view .LVU203
 161:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PREDIV = RCC_PREDIV_DIV1;
 1012              		.loc 1 161 32 is_stmt 0 view .LVU204
 1013 0026 A023     		movs	r3, #160
 1014 0028 9B03     		lsls	r3, r3, #14
 1015 002a 0E93     		str	r3, [sp, #56]
 162:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1016              		.loc 1 162 3 is_stmt 1 view .LVU205
 163:Core/Src/main.c ****   {
 1017              		.loc 1 163 3 view .LVU206
 163:Core/Src/main.c ****   {
 1018              		.loc 1 163 7 is_stmt 0 view .LVU207
 1019 002c 04A8     		add	r0, sp, #16
 1020 002e FFF7FEFF 		bl	HAL_RCC_OscConfig
 1021              	.LVL76:
 163:Core/Src/main.c ****   {
 1022              		.loc 1 163 6 discriminator 1 view .LVU208
 1023 0032 0028     		cmp	r0, #0
 1024 0034 0ED1     		bne	.L32
 170:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 1025              		.loc 1 170 3 is_stmt 1 view .LVU209
 170:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 1026              		.loc 1 170 31 is_stmt 0 view .LVU210
 1027 0036 0723     		movs	r3, #7
 1028 0038 0093     		str	r3, [sp]
 172:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1029              		.loc 1 172 3 is_stmt 1 view .LVU211
 172:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1030              		.loc 1 172 34 is_stmt 0 view .LVU212
 1031 003a 053B     		subs	r3, r3, #5
 1032 003c 0193     		str	r3, [sp, #4]
 173:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 1033              		.loc 1 173 3 is_stmt 1 view .LVU213
 173:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 1034              		.loc 1 173 35 is_stmt 0 view .LVU214
 1035 003e 0023     		movs	r3, #0
 1036 0040 0293     		str	r3, [sp, #8]
 174:Core/Src/main.c **** 
 1037              		.loc 1 174 3 is_stmt 1 view .LVU215
 174:Core/Src/main.c **** 
 1038              		.loc 1 174 36 is_stmt 0 view .LVU216
 1039 0042 0393     		str	r3, [sp, #12]
 176:Core/Src/main.c ****   {
 1040              		.loc 1 176 3 is_stmt 1 view .LVU217
 176:Core/Src/main.c ****   {
 1041              		.loc 1 176 7 is_stmt 0 view .LVU218
 1042 0044 0121     		movs	r1, #1
 1043 0046 6846     		mov	r0, sp
 1044 0048 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 1045              	.LVL77:
 176:Core/Src/main.c ****   {
 1046              		.loc 1 176 6 discriminator 1 view .LVU219
 1047 004c 0028     		cmp	r0, #0
ARM GAS  C:\Users\mulwe\AppData\Local\Temp\ccPK4Hju.s 			page 29


 1048 004e 03D1     		bne	.L33
 180:Core/Src/main.c **** 
 1049              		.loc 1 180 1 view .LVU220
 1050 0050 11B0     		add	sp, sp, #68
 1051              		@ sp needed
 1052 0052 00BD     		pop	{pc}
 1053              	.L32:
 165:Core/Src/main.c ****   }
 1054              		.loc 1 165 5 is_stmt 1 view .LVU221
 1055 0054 FFF7FEFF 		bl	Error_Handler
 1056              	.LVL78:
 1057              	.L33:
 178:Core/Src/main.c ****   }
 1058              		.loc 1 178 5 view .LVU222
 1059 0058 FFF7FEFF 		bl	Error_Handler
 1060              	.LVL79:
 1061              		.cfi_endproc
 1062              	.LFE44:
 1064              		.global	__aeabi_ui2f
 1065              		.global	__aeabi_fdiv
 1066              		.section	.text.main,"ax",%progbits
 1067              		.align	1
 1068              		.global	main
 1069              		.syntax unified
 1070              		.code	16
 1071              		.thumb_func
 1073              	main:
 1074              	.LFB43:
  79:Core/Src/main.c **** 
 1075              		.loc 1 79 1 view -0
 1076              		.cfi_startproc
 1077              		@ args = 0, pretend = 0, frame = 8
 1078              		@ frame_needed = 0, uses_anonymous_args = 0
 1079 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1080              	.LCFI10:
 1081              		.cfi_def_cfa_offset 20
 1082              		.cfi_offset 4, -20
 1083              		.cfi_offset 5, -16
 1084              		.cfi_offset 6, -12
 1085              		.cfi_offset 7, -8
 1086              		.cfi_offset 14, -4
 1087 0002 D646     		mov	lr, r10
 1088 0004 4F46     		mov	r7, r9
 1089 0006 4646     		mov	r6, r8
 1090 0008 C0B5     		push	{r6, r7, lr}
 1091              	.LCFI11:
 1092              		.cfi_def_cfa_offset 32
 1093              		.cfi_offset 8, -32
 1094              		.cfi_offset 9, -28
 1095              		.cfi_offset 10, -24
 1096 000a 82B0     		sub	sp, sp, #8
 1097              	.LCFI12:
 1098              		.cfi_def_cfa_offset 40
  88:Core/Src/main.c **** 
 1099              		.loc 1 88 3 view .LVU224
 1100 000c FFF7FEFF 		bl	HAL_Init
 1101              	.LVL80:
ARM GAS  C:\Users\mulwe\AppData\Local\Temp\ccPK4Hju.s 			page 30


  95:Core/Src/main.c **** 
 1102              		.loc 1 95 3 view .LVU225
 1103 0010 FFF7FEFF 		bl	SystemClock_Config
 1104              	.LVL81:
 102:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 1105              		.loc 1 102 3 view .LVU226
 1106 0014 FFF7FEFF 		bl	MX_GPIO_Init
 1107              	.LVL82:
 1108 0018 4DE0     		b	.L38
 1109              	.LVL83:
 1110              	.L36:
 1111              	.LBB25:
 1112              	.LBB26:
 1113              	.LBB27:
 1114              	.LBB28:
 121:Core/Src/main.c **** 			  volatile uint16_t iter = max_iter_array[i];
 1115              		.loc 1 121 6 view .LVU227
 121:Core/Src/main.c **** 			  volatile uint16_t iter = max_iter_array[i];
 1116              		.loc 1 121 47 is_stmt 0 view .LVU228
 1117 001a 2A4B     		ldr	r3, .L41
 1118 001c AA00     		lsls	r2, r5, #2
 1119 001e 9146     		mov	r9, r2
 121:Core/Src/main.c **** 			  volatile uint16_t iter = max_iter_array[i];
 1120              		.loc 1 121 24 view .LVU229
 1121 0020 9846     		mov	r8, r3
 1122 0022 D35A     		ldrh	r3, [r2, r3]
 1123 0024 01AC     		add	r4, sp, #4
 1124 0026 2380     		strh	r3, [r4]
 122:Core/Src/main.c **** 			  StartTime = HAL_GetTick();
 1125              		.loc 1 122 6 is_stmt 1 view .LVU230
 122:Core/Src/main.c **** 			  StartTime = HAL_GetTick();
 1126              		.loc 1 122 45 is_stmt 0 view .LVU231
 1127 0028 274B     		ldr	r3, .L41+4
 1128 002a BA00     		lsls	r2, r7, #2
 122:Core/Src/main.c **** 			  StartTime = HAL_GetTick();
 1129              		.loc 1 122 24 view .LVU232
 1130 002c D35A     		ldrh	r3, [r2, r3]
 1131 002e 6A46     		mov	r2, sp
 1132 0030 961D     		adds	r6, r2, #6
 1133 0032 D380     		strh	r3, [r2, #6]
 123:Core/Src/main.c **** 			  CheckSum = calculate_mandelbrot_fixed_point_arithmetic(size, size , iter);
 1134              		.loc 1 123 6 is_stmt 1 view .LVU233
 123:Core/Src/main.c **** 			  CheckSum = calculate_mandelbrot_fixed_point_arithmetic(size, size , iter);
 1135              		.loc 1 123 18 is_stmt 0 view .LVU234
 1136 0034 FFF7FEFF 		bl	HAL_GetTick
 1137              	.LVL84:
 123:Core/Src/main.c **** 			  CheckSum = calculate_mandelbrot_fixed_point_arithmetic(size, size , iter);
 1138              		.loc 1 123 16 discriminator 1 view .LVU235
 1139 0038 244B     		ldr	r3, .L41+8
 1140 003a 9A46     		mov	r10, r3
 1141 003c 1860     		str	r0, [r3]
 124:Core/Src/main.c **** 			  EndTime = HAL_GetTick();
 1142              		.loc 1 124 6 is_stmt 1 view .LVU236
 124:Core/Src/main.c **** 			  EndTime = HAL_GetTick();
 1143              		.loc 1 124 17 is_stmt 0 view .LVU237
 1144 003e 2088     		ldrh	r0, [r4]
 1145 0040 80B2     		uxth	r0, r0
ARM GAS  C:\Users\mulwe\AppData\Local\Temp\ccPK4Hju.s 			page 31


 1146 0042 2188     		ldrh	r1, [r4]
 1147 0044 89B2     		uxth	r1, r1
 1148 0046 3288     		ldrh	r2, [r6]
 1149 0048 92B2     		uxth	r2, r2
 1150 004a FFF7FEFF 		bl	calculate_mandelbrot_fixed_point_arithmetic
 1151              	.LVL85:
 124:Core/Src/main.c **** 			  EndTime = HAL_GetTick();
 1152              		.loc 1 124 15 discriminator 1 view .LVU238
 1153 004e 204B     		ldr	r3, .L41+12
 1154 0050 1860     		str	r0, [r3]
 1155 0052 5960     		str	r1, [r3, #4]
 125:Core/Src/main.c **** 			  ExecutionTime = EndTime - StartTime;
 1156              		.loc 1 125 6 is_stmt 1 view .LVU239
 125:Core/Src/main.c **** 			  ExecutionTime = EndTime - StartTime;
 1157              		.loc 1 125 16 is_stmt 0 view .LVU240
 1158 0054 FFF7FEFF 		bl	HAL_GetTick
 1159              	.LVL86:
 125:Core/Src/main.c **** 			  ExecutionTime = EndTime - StartTime;
 1160              		.loc 1 125 14 discriminator 1 view .LVU241
 1161 0058 1E4B     		ldr	r3, .L41+16
 1162 005a 1860     		str	r0, [r3]
 126:Core/Src/main.c **** 			  total_cycles  = (uint64_t)ExecutionTime * (CPU_freq / 1000);
 1163              		.loc 1 126 6 is_stmt 1 view .LVU242
 126:Core/Src/main.c **** 			  total_cycles  = (uint64_t)ExecutionTime * (CPU_freq / 1000);
 1164              		.loc 1 126 30 is_stmt 0 view .LVU243
 1165 005c 5346     		mov	r3, r10
 1166 005e 1C68     		ldr	r4, [r3]
 1167 0060 041B     		subs	r4, r0, r4
 126:Core/Src/main.c **** 			  total_cycles  = (uint64_t)ExecutionTime * (CPU_freq / 1000);
 1168              		.loc 1 126 20 view .LVU244
 1169 0062 1D4B     		ldr	r3, .L41+20
 1170 0064 1C60     		str	r4, [r3]
 127:Core/Src/main.c **** 			  uint32_t pixels = image_size_array[z] * image_size_array[z];
 1171              		.loc 1 127 6 is_stmt 1 view .LVU245
 127:Core/Src/main.c **** 			  uint32_t pixels = image_size_array[z] * image_size_array[z];
 1172              		.loc 1 127 46 is_stmt 0 view .LVU246
 1173 0066 1D4B     		ldr	r3, .L41+24
 1174 0068 6343     		muls	r3, r4
 127:Core/Src/main.c **** 			  uint32_t pixels = image_size_array[z] * image_size_array[z];
 1175              		.loc 1 127 20 view .LVU247
 1176 006a 1D4A     		ldr	r2, .L41+28
 1177 006c 1360     		str	r3, [r2]
 128:Core/Src/main.c **** 			  Throughput = (float)pixels /((float)ExecutionTime/1000.0f);
 1178              		.loc 1 128 6 is_stmt 1 view .LVU248
 128:Core/Src/main.c **** 			  Throughput = (float)pixels /((float)ExecutionTime/1000.0f);
 1179              		.loc 1 128 40 is_stmt 0 view .LVU249
 1180 006e 4346     		mov	r3, r8
 1181 0070 4A46     		mov	r2, r9
 1182 0072 D058     		ldr	r0, [r2, r3]
 128:Core/Src/main.c **** 			  Throughput = (float)pixels /((float)ExecutionTime/1000.0f);
 1183              		.loc 1 128 15 view .LVU250
 1184 0074 4043     		muls	r0, r0
 1185              	.LVL87:
 129:Core/Src/main.c **** 		  }
 1186              		.loc 1 129 6 is_stmt 1 view .LVU251
 129:Core/Src/main.c **** 		  }
 1187              		.loc 1 129 19 is_stmt 0 view .LVU252
ARM GAS  C:\Users\mulwe\AppData\Local\Temp\ccPK4Hju.s 			page 32


 1188 0076 FFF7FEFF 		bl	__aeabi_ui2f
 1189              	.LVL88:
 129:Core/Src/main.c **** 		  }
 1190              		.loc 1 129 19 view .LVU253
 1191 007a 061C     		adds	r6, r0, #0
 129:Core/Src/main.c **** 		  }
 1192              		.loc 1 129 35 view .LVU254
 1193 007c 2000     		movs	r0, r4
 1194 007e FFF7FEFF 		bl	__aeabi_ui2f
 1195              	.LVL89:
 129:Core/Src/main.c **** 		  }
 1196              		.loc 1 129 55 view .LVU255
 1197 0082 1849     		ldr	r1, .L41+32
 1198 0084 FFF7FEFF 		bl	__aeabi_fdiv
 1199              	.LVL90:
 1200 0088 011C     		adds	r1, r0, #0
 129:Core/Src/main.c **** 		  }
 1201              		.loc 1 129 33 view .LVU256
 1202 008a 301C     		adds	r0, r6, #0
 1203 008c FFF7FEFF 		bl	__aeabi_fdiv
 1204              	.LVL91:
 129:Core/Src/main.c **** 		  }
 1205              		.loc 1 129 17 view .LVU257
 1206 0090 154B     		ldr	r3, .L41+36
 1207 0092 1860     		str	r0, [r3]
 1208              	.LBE28:
 120:Core/Src/main.c **** 			  volatile uint16_t size = image_size_array[z];
 1209              		.loc 1 120 34 is_stmt 1 discriminator 3 view .LVU258
 1210 0094 0135     		adds	r5, r5, #1
 1211              	.LVL92:
 1212              	.L37:
 120:Core/Src/main.c **** 			  volatile uint16_t size = image_size_array[z];
 1213              		.loc 1 120 27 discriminator 1 view .LVU259
 1214 0096 042D     		cmp	r5, #4
 1215 0098 BFD9     		bls	.L36
 1216              	.LBE27:
 119:Core/Src/main.c **** 		  for (uint32_t z = 0; z< y ; z++){
 1217              		.loc 1 119 32 discriminator 2 view .LVU260
 1218 009a 0137     		adds	r7, r7, #1
 1219              	.LVL93:
 1220              	.L35:
 119:Core/Src/main.c **** 		  for (uint32_t z = 0; z< y ; z++){
 1221              		.loc 1 119 26 discriminator 1 view .LVU261
 1222 009c 042F     		cmp	r7, #4
 1223 009e 01D8     		bhi	.L40
 1224              	.LBB29:
 120:Core/Src/main.c **** 			  volatile uint16_t size = image_size_array[z];
 1225              		.loc 1 120 19 is_stmt 0 view .LVU262
 1226 00a0 0025     		movs	r5, #0
 1227 00a2 F8E7     		b	.L37
 1228              	.L40:
 1229              	.LBE29:
 1230              	.LBE26:
 134:Core/Src/main.c **** 
 1231              		.loc 1 134 4 is_stmt 1 view .LVU263
 1232 00a4 FA20     		movs	r0, #250
 1233 00a6 C000     		lsls	r0, r0, #3
ARM GAS  C:\Users\mulwe\AppData\Local\Temp\ccPK4Hju.s 			page 33


 1234 00a8 FFF7FEFF 		bl	HAL_Delay
 1235              	.LVL94:
 137:Core/Src/main.c **** 
 1236              		.loc 1 137 4 view .LVU264
 1237 00ac 0022     		movs	r2, #0
 1238 00ae 0321     		movs	r1, #3
 1239 00b0 0E48     		ldr	r0, .L41+40
 1240 00b2 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1241              	.LVL95:
 1242              	.LBE25:
 108:Core/Src/main.c ****   {
 1243              		.loc 1 108 9 view .LVU265
 1244              	.L38:
 108:Core/Src/main.c ****   {
 1245              		.loc 1 108 3 view .LVU266
 1246              	.LBB31:
 114:Core/Src/main.c **** 
 1247              		.loc 1 114 4 view .LVU267
 1248 00b6 0122     		movs	r2, #1
 1249 00b8 0121     		movs	r1, #1
 1250 00ba 0C48     		ldr	r0, .L41+40
 1251 00bc FFF7FEFF 		bl	HAL_GPIO_WritePin
 1252              	.LVL96:
 116:Core/Src/main.c **** 	  uint16_t y = sizeof(image_size_array)/sizeof(image_size_array[0]);
 1253              		.loc 1 116 4 view .LVU268
 117:Core/Src/main.c **** 
 1254              		.loc 1 117 4 view .LVU269
 119:Core/Src/main.c **** 		  for (uint32_t z = 0; z< y ; z++){
 1255              		.loc 1 119 4 view .LVU270
 1256              	.LBB30:
 119:Core/Src/main.c **** 		  for (uint32_t z = 0; z< y ; z++){
 1257              		.loc 1 119 9 view .LVU271
 119:Core/Src/main.c **** 		  for (uint32_t z = 0; z< y ; z++){
 1258              		.loc 1 119 18 is_stmt 0 view .LVU272
 1259 00c0 0027     		movs	r7, #0
 119:Core/Src/main.c **** 		  for (uint32_t z = 0; z< y ; z++){
 1260              		.loc 1 119 4 view .LVU273
 1261 00c2 EBE7     		b	.L35
 1262              	.L42:
 1263              		.align	2
 1264              	.L41:
 1265 00c4 00000000 		.word	image_size_array
 1266 00c8 00000000 		.word	max_iter_array
 1267 00cc 00000000 		.word	StartTime
 1268 00d0 00000000 		.word	CheckSum
 1269 00d4 00000000 		.word	EndTime
 1270 00d8 00000000 		.word	ExecutionTime
 1271 00dc 80BB0000 		.word	48000
 1272 00e0 00000000 		.word	total_cycles
 1273 00e4 00007A44 		.word	1148846080
 1274 00e8 00000000 		.word	Throughput
 1275 00ec 00040048 		.word	1207960576
 1276              	.LBE30:
 1277              	.LBE31:
 1278              		.cfi_endproc
 1279              	.LFE43:
 1281              		.section	.bss.Throughput,"aw",%nobits
ARM GAS  C:\Users\mulwe\AppData\Local\Temp\ccPK4Hju.s 			page 34


 1282              		.align	2
 1285              	Throughput:
 1286 0000 00000000 		.space	4
 1287              		.section	.bss.ExecutionTime,"aw",%nobits
 1288              		.align	2
 1291              	ExecutionTime:
 1292 0000 00000000 		.space	4
 1293              		.section	.bss.total_cycles,"aw",%nobits
 1294              		.align	2
 1297              	total_cycles:
 1298 0000 00000000 		.space	4
 1299              		.section	.bss.EndTime,"aw",%nobits
 1300              		.align	2
 1303              	EndTime:
 1304 0000 00000000 		.space	4
 1305              		.section	.bss.StartTime,"aw",%nobits
 1306              		.align	2
 1309              	StartTime:
 1310 0000 00000000 		.space	4
 1311              		.section	.bss.CheckSum,"aw",%nobits
 1312              		.align	3
 1315              	CheckSum:
 1316 0000 00000000 		.space	8
 1316      00000000 
 1317              		.global	image_size_array
 1318              		.section	.data.image_size_array,"aw"
 1319              		.align	2
 1322              	image_size_array:
 1323 0000 80000000 		.word	128
 1324 0004 A0000000 		.word	160
 1325 0008 C0000000 		.word	192
 1326 000c E0000000 		.word	224
 1327 0010 00010000 		.word	256
 1328              		.global	max_iter_array
 1329              		.section	.data.max_iter_array,"aw"
 1330              		.align	2
 1333              	max_iter_array:
 1334 0000 64000000 		.word	100
 1335 0004 FA000000 		.word	250
 1336 0008 F4010000 		.word	500
 1337 000c EE020000 		.word	750
 1338 0010 E8030000 		.word	1000
 1339              		.text
 1340              	.Letext0:
 1341              		.file 3 "C:\\ST\\STM32CubeIDE_1.19.0\\STM32CubeIDE\\plugins\\com.st.stm32cube.ide.mcu.externaltool
 1342              		.file 4 "C:\\ST\\STM32CubeIDE_1.19.0\\STM32CubeIDE\\plugins\\com.st.stm32cube.ide.mcu.externaltool
 1343              		.file 5 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f051x8.h"
 1344              		.file 6 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 1345              		.file 7 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_rcc.h"
 1346              		.file 8 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_gpio.h"
 1347              		.file 9 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal.h"
 1348              		.file 10 "<built-in>"
ARM GAS  C:\Users\mulwe\AppData\Local\Temp\ccPK4Hju.s 			page 35


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\mulwe\AppData\Local\Temp\ccPK4Hju.s:19     .text.MX_GPIO_Init:00000000 $t
C:\Users\mulwe\AppData\Local\Temp\ccPK4Hju.s:24     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\mulwe\AppData\Local\Temp\ccPK4Hju.s:131    .text.MX_GPIO_Init:0000006c $d
C:\Users\mulwe\AppData\Local\Temp\ccPK4Hju.s:139    .text.calculate_mandelbrot_fixed_point_arithmetic:00000000 $t
C:\Users\mulwe\AppData\Local\Temp\ccPK4Hju.s:145    .text.calculate_mandelbrot_fixed_point_arithmetic:00000000 calculate_mandelbrot_fixed_point_arithmetic
C:\Users\mulwe\AppData\Local\Temp\ccPK4Hju.s:598    .text.calculate_mandelbrot_double:00000000 $t
C:\Users\mulwe\AppData\Local\Temp\ccPK4Hju.s:604    .text.calculate_mandelbrot_double:00000000 calculate_mandelbrot_double
C:\Users\mulwe\AppData\Local\Temp\ccPK4Hju.s:916    .text.calculate_mandelbrot_double:0000015c $d
C:\Users\mulwe\AppData\Local\Temp\ccPK4Hju.s:924    .text.Error_Handler:00000000 $t
C:\Users\mulwe\AppData\Local\Temp\ccPK4Hju.s:930    .text.Error_Handler:00000000 Error_Handler
C:\Users\mulwe\AppData\Local\Temp\ccPK4Hju.s:962    .text.SystemClock_Config:00000000 $t
C:\Users\mulwe\AppData\Local\Temp\ccPK4Hju.s:968    .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\mulwe\AppData\Local\Temp\ccPK4Hju.s:1067   .text.main:00000000 $t
C:\Users\mulwe\AppData\Local\Temp\ccPK4Hju.s:1073   .text.main:00000000 main
C:\Users\mulwe\AppData\Local\Temp\ccPK4Hju.s:1265   .text.main:000000c4 $d
C:\Users\mulwe\AppData\Local\Temp\ccPK4Hju.s:1322   .data.image_size_array:00000000 image_size_array
C:\Users\mulwe\AppData\Local\Temp\ccPK4Hju.s:1333   .data.max_iter_array:00000000 max_iter_array
C:\Users\mulwe\AppData\Local\Temp\ccPK4Hju.s:1309   .bss.StartTime:00000000 StartTime
C:\Users\mulwe\AppData\Local\Temp\ccPK4Hju.s:1315   .bss.CheckSum:00000000 CheckSum
C:\Users\mulwe\AppData\Local\Temp\ccPK4Hju.s:1303   .bss.EndTime:00000000 EndTime
C:\Users\mulwe\AppData\Local\Temp\ccPK4Hju.s:1291   .bss.ExecutionTime:00000000 ExecutionTime
C:\Users\mulwe\AppData\Local\Temp\ccPK4Hju.s:1297   .bss.total_cycles:00000000 total_cycles
C:\Users\mulwe\AppData\Local\Temp\ccPK4Hju.s:1285   .bss.Throughput:00000000 Throughput
C:\Users\mulwe\AppData\Local\Temp\ccPK4Hju.s:1282   .bss.Throughput:00000000 $d
C:\Users\mulwe\AppData\Local\Temp\ccPK4Hju.s:1288   .bss.ExecutionTime:00000000 $d
C:\Users\mulwe\AppData\Local\Temp\ccPK4Hju.s:1294   .bss.total_cycles:00000000 $d
C:\Users\mulwe\AppData\Local\Temp\ccPK4Hju.s:1300   .bss.EndTime:00000000 $d
C:\Users\mulwe\AppData\Local\Temp\ccPK4Hju.s:1306   .bss.StartTime:00000000 $d
C:\Users\mulwe\AppData\Local\Temp\ccPK4Hju.s:1312   .bss.CheckSum:00000000 $d
C:\Users\mulwe\AppData\Local\Temp\ccPK4Hju.s:1319   .data.image_size_array:00000000 $d
C:\Users\mulwe\AppData\Local\Temp\ccPK4Hju.s:1330   .data.max_iter_array:00000000 $d

UNDEFINED SYMBOLS
memset
HAL_GPIO_WritePin
HAL_GPIO_Init
__aeabi_ldivmod
__aeabi_lmul
__aeabi_i2d
__aeabi_ddiv
__aeabi_dmul
__aeabi_dsub
__aeabi_dadd
__aeabi_dcmple
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
__aeabi_ui2f
__aeabi_fdiv
HAL_Init
HAL_GetTick
HAL_Delay
