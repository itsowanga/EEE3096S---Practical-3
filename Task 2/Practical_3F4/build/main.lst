ARM GAS  C:\Users\mulwe\AppData\Local\Temp\ccLTOw0I.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/main.c"
  20              		.section	.text.MX_GPIO_Init,"ax",%progbits
  21              		.align	1
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	MX_GPIO_Init:
  27              	.LFB136:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2025 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** 
  25:Core/Src/main.c **** /* USER CODE END Includes */
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  28:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  29:Core/Src/main.c **** #define Max_iter  100
  30:Core/Src/main.c **** #define Width  100
  31:Core/Src/main.c **** #define Height  100
ARM GAS  C:\Users\mulwe\AppData\Local\Temp\ccLTOw0I.s 			page 2


  32:Core/Src/main.c **** #define CPU_freq 48000000
  33:Core/Src/main.c **** /* USER CODE END PTD */
  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  36:Core/Src/main.c **** /* USER CODE BEGIN PD */
  37:Core/Src/main.c **** 
  38:Core/Src/main.c **** /* USER CODE END PD */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  41:Core/Src/main.c **** /* USER CODE BEGIN PM */
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** /* USER CODE END PM */
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** /* USER CODE BEGIN PV */
  48:Core/Src/main.c **** //TODO: Define variables you think you might need
  49:Core/Src/main.c **** // - Performance timing variables (e.g execution time, throughput, pixels per second, clock cycles)
  50:Core/Src/main.c **** static uint64_t CheckSum;
  51:Core/Src/main.c **** static uint32_t StartTime;
  52:Core/Src/main.c **** static uint32_t EndTime;
  53:Core/Src/main.c **** static uint32_t total_cycles;
  54:Core/Src/main.c **** static uint32_t ExecutionTime;
  55:Core/Src/main.c **** static float Throughput;
  56:Core/Src/main.c **** /* USER CODE END PV */
  57:Core/Src/main.c **** 
  58:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  59:Core/Src/main.c **** void SystemClock_Config(void);
  60:Core/Src/main.c **** static void MX_GPIO_Init(void);
  61:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  62:Core/Src/main.c **** //TODO: Define any function prototypes you might need such as the calculate Mandelbrot function amo
  63:Core/Src/main.c **** uint64_t calculate_mandelbrot_fixed_point_arithmetic(int width, int height, int max_iterations);
  64:Core/Src/main.c **** uint64_t calculate_mandelbrot_double(int width, int height, int max_iterations);
  65:Core/Src/main.c **** /* USER CODE END PFP */
  66:Core/Src/main.c **** 
  67:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  68:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  69:Core/Src/main.c **** 
  70:Core/Src/main.c **** /* USER CODE END 0 */
  71:Core/Src/main.c **** 
  72:Core/Src/main.c **** /**
  73:Core/Src/main.c ****   * @brief  The application entry point.
  74:Core/Src/main.c ****   * @retval int
  75:Core/Src/main.c ****   */
  76:Core/Src/main.c **** int main(void)
  77:Core/Src/main.c **** {
  78:Core/Src/main.c **** 
  79:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  80:Core/Src/main.c **** 
  81:Core/Src/main.c ****   /* USER CODE END 1 */
  82:Core/Src/main.c **** 
  83:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  84:Core/Src/main.c **** 
  85:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  86:Core/Src/main.c ****   HAL_Init();
  87:Core/Src/main.c **** 
  88:Core/Src/main.c ****   /* USER CODE BEGIN Init */
ARM GAS  C:\Users\mulwe\AppData\Local\Temp\ccLTOw0I.s 			page 3


  89:Core/Src/main.c **** 
  90:Core/Src/main.c ****   /* USER CODE END Init */
  91:Core/Src/main.c **** 
  92:Core/Src/main.c ****   /* Configure the system clock */
  93:Core/Src/main.c ****   SystemClock_Config();
  94:Core/Src/main.c **** 
  95:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  96:Core/Src/main.c **** 
  97:Core/Src/main.c ****   /* USER CODE END SysInit */
  98:Core/Src/main.c **** 
  99:Core/Src/main.c ****   /* Initialize all configured peripherals */
 100:Core/Src/main.c ****   MX_GPIO_Init();
 101:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 102:Core/Src/main.c **** 
 103:Core/Src/main.c ****   /* USER CODE END 2 */
 104:Core/Src/main.c **** 
 105:Core/Src/main.c ****   /* Infinite loop */
 106:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 107:Core/Src/main.c ****   while (1)
 108:Core/Src/main.c ****   {
 109:Core/Src/main.c ****     /* USER CODE END WHILE */
 110:Core/Src/main.c **** 
 111:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 112:Core/Src/main.c **** 	  //TODO: Visual indicator: Turn on LED0 to signal processing start
 113:Core/Src/main.c **** 	  HAL_GPIO_WritePin(GPIOB,1, GPIO_PIN_SET);
 114:Core/Src/main.c **** 
 115:Core/Src/main.c **** 	  //TODO: Benchmark and Profile Performance
 116:Core/Src/main.c **** 	  uint32_t max_iter_array[] = {100,250,500,750,1000};
 117:Core/Src/main.c **** 	  	  uint32_t image_size_array[] = {128,160,192,224,256};
 118:Core/Src/main.c **** 
 119:Core/Src/main.c **** 	  	  uint16_t x = sizeof(max_iter_array)/sizeof(max_iter_array[0]);
 120:Core/Src/main.c **** 	  	  uint16_t y = sizeof(image_size_array)/sizeof(image_size_array[0]);
 121:Core/Src/main.c **** 
 122:Core/Src/main.c **** 	  	  for (uint32_t i = 0; i< x ;i++){
 123:Core/Src/main.c **** 	  		  for (uint32_t z = 0; z< y ; z++){
 124:Core/Src/main.c **** 	  			  uint16_t size = image_size_array[z];
 125:Core/Src/main.c **** 	  			  uint16_t iter = max_iter_array[i];
 126:Core/Src/main.c **** 	  			  StartTime = HAL_GetTick();
 127:Core/Src/main.c **** 	  			  CheckSum = calculate_mandelbrot_fixed_point_arithmetic(size, size , iter);
 128:Core/Src/main.c **** 	  			  EndTime = HAL_GetTick();
 129:Core/Src/main.c **** 	  			  ExecutionTime = EndTime - StartTime;
 130:Core/Src/main.c **** 	  			  total_cycles  = (uint64_t)ExecutionTime * (CPU_freq / 1000);
 131:Core/Src/main.c **** 	  			  uint32_t pixels = image_size_array[z] * image_size_array[z];
 132:Core/Src/main.c **** 	  			  Throughput = (float)pixels /((float)ExecutionTime/1000.0f);
 133:Core/Src/main.c **** 	  		  }
 134:Core/Src/main.c **** 	  	  }
 135:Core/Src/main.c **** 
 136:Core/Src/main.c **** 	  //TODO: Visual indicator: Turn on LED1 to signal processing start
 137:Core/Src/main.c **** 	  	HAL_GPIO_WritePin(GPIOB,2, GPIO_PIN_SET);
 138:Core/Src/main.c **** 
 139:Core/Src/main.c **** 	  //TODO: Keep the LEDs ON for 2s
 140:Core/Src/main.c **** 	  	HAL_Delay(2000);
 141:Core/Src/main.c **** 	  //TODO: Turn OFF LEDs
 142:Core/Src/main.c **** 	  	HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0 | GPIO_PIN_1, GPIO_PIN_RESET);
 143:Core/Src/main.c ****   }
 144:Core/Src/main.c ****   /* USER CODE END 3 */
 145:Core/Src/main.c **** }
ARM GAS  C:\Users\mulwe\AppData\Local\Temp\ccLTOw0I.s 			page 4


 146:Core/Src/main.c **** 
 147:Core/Src/main.c **** /**
 148:Core/Src/main.c ****   * @brief System Clock Configuration
 149:Core/Src/main.c ****   * @retval None
 150:Core/Src/main.c ****   */
 151:Core/Src/main.c **** void SystemClock_Config(void)
 152:Core/Src/main.c **** {
 153:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 154:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 155:Core/Src/main.c **** 
 156:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 157:Core/Src/main.c ****   */
 158:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 159:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 160:Core/Src/main.c **** 
 161:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 162:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 163:Core/Src/main.c ****   */
 164:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 165:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 166:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 167:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 168:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 15;
 169:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 144;
 170:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 171:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 172:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
 173:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 174:Core/Src/main.c ****   {
 175:Core/Src/main.c ****     Error_Handler();
 176:Core/Src/main.c ****   }
 177:Core/Src/main.c **** 
 178:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 179:Core/Src/main.c ****   */
 180:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 181:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 182:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 183:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 184:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 185:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 186:Core/Src/main.c **** 
 187:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_3) != HAL_OK)
 188:Core/Src/main.c ****   {
 189:Core/Src/main.c ****     Error_Handler();
 190:Core/Src/main.c ****   }
 191:Core/Src/main.c **** }
 192:Core/Src/main.c **** 
 193:Core/Src/main.c **** /**
 194:Core/Src/main.c ****   * @brief GPIO Initialization Function
 195:Core/Src/main.c ****   * @param None
 196:Core/Src/main.c ****   * @retval None
 197:Core/Src/main.c ****   */
 198:Core/Src/main.c **** static void MX_GPIO_Init(void)
 199:Core/Src/main.c **** {
  28              		.loc 1 199 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 32
ARM GAS  C:\Users\mulwe\AppData\Local\Temp\ccLTOw0I.s 			page 5


  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 30B5     		push	{r4, r5, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 12
  35              		.cfi_offset 4, -12
  36              		.cfi_offset 5, -8
  37              		.cfi_offset 14, -4
  38 0002 89B0     		sub	sp, sp, #36
  39              	.LCFI1:
  40              		.cfi_def_cfa_offset 48
 200:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  41              		.loc 1 200 3 view .LVU1
  42              		.loc 1 200 20 is_stmt 0 view .LVU2
  43 0004 0024     		movs	r4, #0
  44 0006 0394     		str	r4, [sp, #12]
  45 0008 0494     		str	r4, [sp, #16]
  46 000a 0594     		str	r4, [sp, #20]
  47 000c 0694     		str	r4, [sp, #24]
  48 000e 0794     		str	r4, [sp, #28]
 201:Core/Src/main.c ****   /* USER CODE BEGIN MX_GPIO_Init_1 */
 202:Core/Src/main.c **** 
 203:Core/Src/main.c ****   /* USER CODE END MX_GPIO_Init_1 */
 204:Core/Src/main.c **** 
 205:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 206:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  49              		.loc 1 206 3 is_stmt 1 view .LVU3
  50              	.LBB4:
  51              		.loc 1 206 3 view .LVU4
  52 0010 0094     		str	r4, [sp]
  53              		.loc 1 206 3 view .LVU5
  54 0012 184B     		ldr	r3, .L3
  55 0014 1A6B     		ldr	r2, [r3, #48]
  56 0016 42F00402 		orr	r2, r2, #4
  57 001a 1A63     		str	r2, [r3, #48]
  58              		.loc 1 206 3 view .LVU6
  59 001c 1A6B     		ldr	r2, [r3, #48]
  60 001e 02F00402 		and	r2, r2, #4
  61 0022 0092     		str	r2, [sp]
  62              		.loc 1 206 3 view .LVU7
  63 0024 009A     		ldr	r2, [sp]
  64              	.LBE4:
  65              		.loc 1 206 3 view .LVU8
 207:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
  66              		.loc 1 207 3 view .LVU9
  67              	.LBB5:
  68              		.loc 1 207 3 view .LVU10
  69 0026 0194     		str	r4, [sp, #4]
  70              		.loc 1 207 3 view .LVU11
  71 0028 1A6B     		ldr	r2, [r3, #48]
  72 002a 42F08002 		orr	r2, r2, #128
  73 002e 1A63     		str	r2, [r3, #48]
  74              		.loc 1 207 3 view .LVU12
  75 0030 1A6B     		ldr	r2, [r3, #48]
  76 0032 02F08002 		and	r2, r2, #128
  77 0036 0192     		str	r2, [sp, #4]
  78              		.loc 1 207 3 view .LVU13
  79 0038 019A     		ldr	r2, [sp, #4]
ARM GAS  C:\Users\mulwe\AppData\Local\Temp\ccLTOw0I.s 			page 6


  80              	.LBE5:
  81              		.loc 1 207 3 view .LVU14
 208:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  82              		.loc 1 208 3 view .LVU15
  83              	.LBB6:
  84              		.loc 1 208 3 view .LVU16
  85 003a 0294     		str	r4, [sp, #8]
  86              		.loc 1 208 3 view .LVU17
  87 003c 1A6B     		ldr	r2, [r3, #48]
  88 003e 42F00202 		orr	r2, r2, #2
  89 0042 1A63     		str	r2, [r3, #48]
  90              		.loc 1 208 3 view .LVU18
  91 0044 1B6B     		ldr	r3, [r3, #48]
  92 0046 03F00203 		and	r3, r3, #2
  93 004a 0293     		str	r3, [sp, #8]
  94              		.loc 1 208 3 view .LVU19
  95 004c 029B     		ldr	r3, [sp, #8]
  96              	.LBE6:
  97              		.loc 1 208 3 view .LVU20
 209:Core/Src/main.c **** 
 210:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 211:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
  98              		.loc 1 211 3 view .LVU21
  99 004e 0A4D     		ldr	r5, .L3+4
 100 0050 2246     		mov	r2, r4
 101 0052 FF21     		movs	r1, #255
 102 0054 2846     		mov	r0, r5
 103 0056 FFF7FEFF 		bl	HAL_GPIO_WritePin
 104              	.LVL0:
 212:Core/Src/main.c ****                           |GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7, GPIO_PIN_RESET);
 213:Core/Src/main.c **** 
 214:Core/Src/main.c ****   /*Configure GPIO pins : PB0 PB1 PB2 PB3
 215:Core/Src/main.c ****                            PB4 PB5 PB6 PB7 */
 216:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 105              		.loc 1 216 3 view .LVU22
 106              		.loc 1 216 23 is_stmt 0 view .LVU23
 107 005a FF23     		movs	r3, #255
 108 005c 0393     		str	r3, [sp, #12]
 217:Core/Src/main.c ****                           |GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7;
 218:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 109              		.loc 1 218 3 is_stmt 1 view .LVU24
 110              		.loc 1 218 24 is_stmt 0 view .LVU25
 111 005e 0123     		movs	r3, #1
 112 0060 0493     		str	r3, [sp, #16]
 219:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 113              		.loc 1 219 3 is_stmt 1 view .LVU26
 114              		.loc 1 219 24 is_stmt 0 view .LVU27
 115 0062 0594     		str	r4, [sp, #20]
 220:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 116              		.loc 1 220 3 is_stmt 1 view .LVU28
 117              		.loc 1 220 25 is_stmt 0 view .LVU29
 118 0064 0694     		str	r4, [sp, #24]
 221:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 119              		.loc 1 221 3 is_stmt 1 view .LVU30
 120 0066 03A9     		add	r1, sp, #12
 121 0068 2846     		mov	r0, r5
 122 006a FFF7FEFF 		bl	HAL_GPIO_Init
ARM GAS  C:\Users\mulwe\AppData\Local\Temp\ccLTOw0I.s 			page 7


 123              	.LVL1:
 222:Core/Src/main.c **** 
 223:Core/Src/main.c ****   /* USER CODE BEGIN MX_GPIO_Init_2 */
 224:Core/Src/main.c **** 
 225:Core/Src/main.c ****   /* USER CODE END MX_GPIO_Init_2 */
 226:Core/Src/main.c **** }
 124              		.loc 1 226 1 is_stmt 0 view .LVU31
 125 006e 09B0     		add	sp, sp, #36
 126              	.LCFI2:
 127              		.cfi_def_cfa_offset 12
 128              		@ sp needed
 129 0070 30BD     		pop	{r4, r5, pc}
 130              	.L4:
 131 0072 00BF     		.align	2
 132              	.L3:
 133 0074 00380240 		.word	1073887232
 134 0078 00040240 		.word	1073873920
 135              		.cfi_endproc
 136              	.LFE136:
 138              		.global	__aeabi_ldivmod
 139              		.section	.text.calculate_mandelbrot_fixed_point_arithmetic,"ax",%progbits
 140              		.align	1
 141              		.global	calculate_mandelbrot_fixed_point_arithmetic
 142              		.syntax unified
 143              		.thumb
 144              		.thumb_func
 146              	calculate_mandelbrot_fixed_point_arithmetic:
 147              	.LVL2:
 148              	.LFB137:
 227:Core/Src/main.c **** 
 228:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 229:Core/Src/main.c **** //TODO: Function signatures you defined previously , implement them here
 230:Core/Src/main.c **** uint64_t calculate_mandelbrot_fixed_point_arithmetic(int width, int height, int max_iterations){
 149              		.loc 1 230 96 is_stmt 1 view -0
 150              		.cfi_startproc
 151              		@ args = 0, pretend = 0, frame = 40
 152              		@ frame_needed = 0, uses_anonymous_args = 0
 153              		.loc 1 230 96 is_stmt 0 view .LVU33
 154 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 155              	.LCFI3:
 156              		.cfi_def_cfa_offset 36
 157              		.cfi_offset 4, -36
 158              		.cfi_offset 5, -32
 159              		.cfi_offset 6, -28
 160              		.cfi_offset 7, -24
 161              		.cfi_offset 8, -20
 162              		.cfi_offset 9, -16
 163              		.cfi_offset 10, -12
 164              		.cfi_offset 11, -8
 165              		.cfi_offset 14, -4
 166 0004 8BB0     		sub	sp, sp, #44
 167              	.LCFI4:
 168              		.cfi_def_cfa_offset 80
 169 0006 8A46     		mov	r10, r1
 170 0008 0192     		str	r2, [sp, #4]
 231:Core/Src/main.c ****   uint64_t mandelbrot_sum = 0;
 171              		.loc 1 231 3 is_stmt 1 view .LVU34
ARM GAS  C:\Users\mulwe\AppData\Local\Temp\ccLTOw0I.s 			page 8


 172              	.LVL3:
 232:Core/Src/main.c **** 	#define S (1<<28)
 233:Core/Src/main.c ****     //TODO: Complete the function implementation
 234:Core/Src/main.c ****   	  for (int y = 0; y < height; y++) {
 173              		.loc 1 234 6 view .LVU35
 174              	.LBB7:
 175              		.loc 1 234 11 view .LVU36
 176              		.loc 1 234 15 is_stmt 0 view .LVU37
 177 000a 4FF0000B 		mov	fp, #0
 178              	.LBE7:
 231:Core/Src/main.c ****   uint64_t mandelbrot_sum = 0;
 179              		.loc 1 231 12 view .LVU38
 180 000e CDF810B0 		str	fp, [sp, #16]
 181 0012 CDF814B0 		str	fp, [sp, #20]
 182 0016 8146     		mov	r9, r0
 183              	.LBB13:
 184              		.loc 1 234 6 view .LVU39
 185 0018 BAE0     		b	.L6
 186              	.LVL4:
 187              	.L9:
 188              	.LBB8:
 189              	.LBB9:
 190              	.LBB10:
 235:Core/Src/main.c ****           for (int x = 0; x < width; x++) {
 236:Core/Src/main.c **** 
 237:Core/Src/main.c ****         	  int64_t x_scaled = ((int64_t)x * S + width / 2) / width;
 238:Core/Src/main.c ****         	              int64_t y_scaled = ((int64_t)y * S + height / 2) / height;
 239:Core/Src/main.c **** 
 240:Core/Src/main.c ****         	              int64_t x0 = ((x_scaled * (int64_t)(3.5 * S) + (S >> 1)) >> 28) - (int64_t)(
 241:Core/Src/main.c ****         	              int64_t y0 = ((y_scaled * (int64_t)(2.0 * S) + (S >> 1)) >> 28) - (1 * S);
 242:Core/Src/main.c **** 
 243:Core/Src/main.c ****         	              int64_t xi = 0;
 244:Core/Src/main.c ****         	              int64_t yi = 0;
 245:Core/Src/main.c ****         	              int iteration = 0;
 246:Core/Src/main.c **** 
 247:Core/Src/main.c ****         	              while (iteration < max_iterations &&
 248:Core/Src/main.c ****         	                     ((xi * xi + yi * yi) <= (4LL * S * S))) {
 249:Core/Src/main.c **** 
 250:Core/Src/main.c **** 
 251:Core/Src/main.c ****         	                  int64_t x_sq = (xi * xi + (S >> 1)) >> 28;
 191              		.loc 1 251 28 is_stmt 1 view .LVU40
 192              		.loc 1 251 52 is_stmt 0 view .LVU41
 193 001a 10F10060 		adds	r0, r0, #134217728
 194 001e 44F10004 		adc	r4, r4, #0
 195              		.loc 1 251 36 view .LVU42
 196 0022 000F     		lsrs	r0, r0, #28
 197 0024 40EA0410 		orr	r0, r0, r4, lsl #4
 198 0028 2417     		asrs	r4, r4, #28
 199              	.LVL5:
 252:Core/Src/main.c ****         	                  int64_t y_sq = (yi * yi + (S >> 1)) >> 28;
 200              		.loc 1 252 28 is_stmt 1 view .LVU43
 201              		.loc 1 252 52 is_stmt 0 view .LVU44
 202 002a 12F10062 		adds	r2, r2, #134217728
 203 002e 46F10006 		adc	r6, r6, #0
 204              		.loc 1 252 36 view .LVU45
 205 0032 120F     		lsrs	r2, r2, #28
 206 0034 42EA0612 		orr	r2, r2, r6, lsl #4
ARM GAS  C:\Users\mulwe\AppData\Local\Temp\ccLTOw0I.s 			page 9


 207              	.LVL6:
 253:Core/Src/main.c ****         	                  int64_t xy   = (xi * yi + (S >> 1)) >> 28;
 208              		.loc 1 253 28 is_stmt 1 view .LVU46
 209              		.loc 1 253 47 is_stmt 0 view .LVU47
 210 0038 03FB08F8 		mul	r8, r3, r8
 211              	.LVL7:
 212              		.loc 1 253 47 view .LVU48
 213 003c 05FB0188 		mla	r8, r5, r1, r8
 214 0040 A3FB0553 		umull	r5, r3, r3, r5
 215              	.LVL8:
 216              		.loc 1 253 52 view .LVU49
 217 0044 15F10065 		adds	r5, r5, #134217728
 218 0048 48EB0308 		adc	r8, r8, r3
 219              		.loc 1 253 36 view .LVU50
 220 004c 2D0F     		lsrs	r5, r5, #28
 221 004e 45EA0815 		orr	r5, r5, r8, lsl #4
 222 0052 4FEA2878 		asr	r8, r8, #28
 223              	.LVL9:
 254:Core/Src/main.c **** 
 255:Core/Src/main.c ****         	                  int64_t temp_xi = x_sq - y_sq + x0;
 224              		.loc 1 255 28 is_stmt 1 view .LVU51
 225              		.loc 1 255 51 is_stmt 0 view .LVU52
 226 0056 821A     		subs	r2, r0, r2
 227              	.LVL10:
 228              		.loc 1 255 51 view .LVU53
 229 0058 64EB2674 		sbc	r4, r4, r6, asr #28
 230              	.LVL11:
 231              		.loc 1 255 36 view .LVU54
 232 005c D319     		adds	r3, r2, r7
 233 005e 44EB0E01 		adc	r1, r4, lr
 234              	.LVL12:
 256:Core/Src/main.c ****         	                  yi = (xy << 1) + y0;
 235              		.loc 1 256 28 is_stmt 1 view .LVU55
 236              		.loc 1 256 37 is_stmt 0 view .LVU56
 237 0062 6D19     		adds	r5, r5, r5
 238              	.LVL13:
 239              		.loc 1 256 37 view .LVU57
 240 0064 48EB0808 		adc	r8, r8, r8
 241              		.loc 1 256 31 view .LVU58
 242 0068 029A     		ldr	r2, [sp, #8]
 243 006a AD18     		adds	r5, r5, r2
 244 006c 039A     		ldr	r2, [sp, #12]
 245 006e 42EB0808 		adc	r8, r2, r8
 246              	.LVL14:
 257:Core/Src/main.c ****         	                  xi = temp_xi;
 247              		.loc 1 257 28 is_stmt 1 view .LVU59
 258:Core/Src/main.c **** 
 259:Core/Src/main.c ****         	                  iteration++;
 248              		.loc 1 259 28 view .LVU60
 249              		.loc 1 259 37 is_stmt 0 view .LVU61
 250 0072 0CF1010C 		add	ip, ip, #1
 251              	.LVL15:
 252              	.L7:
 253              		.loc 1 259 37 view .LVU62
 254              	.LBE10:
 247:Core/Src/main.c ****         	                     ((xi * xi + yi * yi) <= (4LL * S * S))) {
 255              		.loc 1 247 58 is_stmt 1 view .LVU63
ARM GAS  C:\Users\mulwe\AppData\Local\Temp\ccLTOw0I.s 			page 10


 256 0076 019A     		ldr	r2, [sp, #4]
 257 0078 9445     		cmp	ip, r2
 258 007a 17DA     		bge	.L8
 248:Core/Src/main.c **** 
 259              		.loc 1 248 36 is_stmt 0 view .LVU64
 260 007c 03FB01F2 		mul	r2, r3, r1
 261 0080 A3FB0304 		umull	r0, r4, r3, r3
 262 0084 04EB4204 		add	r4, r4, r2, lsl #1
 248:Core/Src/main.c **** 
 263              		.loc 1 248 46 view .LVU65
 264 0088 05FB08F9 		mul	r9, r5, r8
 265 008c A5FB0526 		umull	r2, r6, r5, r5
 266 0090 06EB4906 		add	r6, r6, r9, lsl #1
 248:Core/Src/main.c **** 
 267              		.loc 1 248 41 view .LVU66
 268 0094 10EB020A 		adds	r10, r0, r2
 269 0098 44EB0609 		adc	r9, r4, r6
 247:Core/Src/main.c ****         	                     ((xi * xi + yi * yi) <= (4LL * S * S))) {
 270              		.loc 1 247 58 discriminator 1 view .LVU67
 271 009c 4FF0000B 		mov	fp, #0
 272 00a0 D345     		cmp	fp, r10
 273 00a2 4FF0806A 		mov	r10, #67108864
 274 00a6 7AEB090A 		sbcs	r10, r10, r9
 275 00aa B6DA     		bge	.L9
 276              	.L8:
 260:Core/Src/main.c ****         	              }
 261:Core/Src/main.c **** 
 262:Core/Src/main.c ****         	              mandelbrot_sum += iteration;
 277              		.loc 1 262 39 view .LVU68
 278 00ac DDF818B0 		ldr	fp, [sp, #24]
 279 00b0 079E     		ldr	r6, [sp, #28]
 280 00b2 DDF82090 		ldr	r9, [sp, #32]
 281 00b6 DDF824A0 		ldr	r10, [sp, #36]
 282              		.loc 1 262 24 is_stmt 1 view .LVU69
 283              		.loc 1 262 39 is_stmt 0 view .LVU70
 284 00ba 049B     		ldr	r3, [sp, #16]
 285              	.LVL16:
 286              		.loc 1 262 39 view .LVU71
 287 00bc 1CEB0303 		adds	r3, ip, r3
 288 00c0 0493     		str	r3, [sp, #16]
 289              	.LVL17:
 290              		.loc 1 262 39 view .LVU72
 291 00c2 059B     		ldr	r3, [sp, #20]
 292 00c4 43EBEC73 		adc	r3, r3, ip, asr #31
 293 00c8 0593     		str	r3, [sp, #20]
 294              	.LVL18:
 295              		.loc 1 262 39 view .LVU73
 296              	.LBE9:
 235:Core/Src/main.c **** 
 297              		.loc 1 235 39 is_stmt 1 discriminator 2 view .LVU74
 298 00ca 0136     		adds	r6, r6, #1
 299              	.LVL19:
 300              	.L11:
 235:Core/Src/main.c **** 
 301              		.loc 1 235 29 discriminator 1 view .LVU75
 302 00cc 4E45     		cmp	r6, r9
 303 00ce 5DDA     		bge	.L14
ARM GAS  C:\Users\mulwe\AppData\Local\Temp\ccLTOw0I.s 			page 11


 304              	.LBB11:
 237:Core/Src/main.c ****         	              int64_t y_scaled = ((int64_t)y * S + height / 2) / height;
 305              		.loc 1 237 12 view .LVU76
 237:Core/Src/main.c ****         	              int64_t y_scaled = ((int64_t)y * S + height / 2) / height;
 306              		.loc 1 237 32 is_stmt 0 view .LVU77
 307 00d0 F117     		asrs	r1, r6, #31
 237:Core/Src/main.c ****         	              int64_t y_scaled = ((int64_t)y * S + height / 2) / height;
 308              		.loc 1 237 43 view .LVU78
 309 00d2 0907     		lsls	r1, r1, #28
 310 00d4 41EA1611 		orr	r1, r1, r6, lsr #4
 311 00d8 3007     		lsls	r0, r6, #28
 237:Core/Src/main.c ****         	              int64_t y_scaled = ((int64_t)y * S + height / 2) / height;
 312              		.loc 1 237 55 view .LVU79
 313 00da 09EBD974 		add	r4, r9, r9, lsr #31
 314 00de 6310     		asrs	r3, r4, #1
 237:Core/Src/main.c ****         	              int64_t y_scaled = ((int64_t)y * S + height / 2) / height;
 315              		.loc 1 237 47 view .LVU80
 316 00e0 C018     		adds	r0, r0, r3
 237:Core/Src/main.c ****         	              int64_t y_scaled = ((int64_t)y * S + height / 2) / height;
 317              		.loc 1 237 20 view .LVU81
 318 00e2 4A46     		mov	r2, r9
 319 00e4 4FEAE973 		asr	r3, r9, #31
 320 00e8 41EBE471 		adc	r1, r1, r4, asr #31
 321 00ec FFF7FEFF 		bl	__aeabi_ldivmod
 322              	.LVL20:
 323 00f0 0446     		mov	r4, r0
 324 00f2 0D46     		mov	r5, r1
 325 00f4 0746     		mov	r7, r0
 326 00f6 8846     		mov	r8, r1
 327              	.LVL21:
 238:Core/Src/main.c **** 
 328              		.loc 1 238 24 is_stmt 1 view .LVU82
 238:Core/Src/main.c **** 
 329              		.loc 1 238 44 is_stmt 0 view .LVU83
 330 00f8 4FEAEB71 		asr	r1, fp, #31
 331              	.LVL22:
 238:Core/Src/main.c **** 
 332              		.loc 1 238 55 view .LVU84
 333 00fc 0907     		lsls	r1, r1, #28
 334 00fe 41EA1B11 		orr	r1, r1, fp, lsr #4
 335 0102 4FEA0B70 		lsl	r0, fp, #28
 336              	.LVL23:
 238:Core/Src/main.c **** 
 337              		.loc 1 238 68 view .LVU85
 338 0106 0AEBDA7C 		add	ip, r10, r10, lsr #31
 339 010a 4FEA6C03 		asr	r3, ip, #1
 238:Core/Src/main.c **** 
 340              		.loc 1 238 59 view .LVU86
 341 010e C018     		adds	r0, r0, r3
 238:Core/Src/main.c **** 
 342              		.loc 1 238 32 view .LVU87
 343 0110 5246     		mov	r2, r10
 344 0112 4FEAEA73 		asr	r3, r10, #31
 345 0116 41EBEC71 		adc	r1, r1, ip, asr #31
 346 011a FFF7FEFF 		bl	__aeabi_ldivmod
 347              	.LVL24:
 240:Core/Src/main.c ****         	              int64_t y0 = ((y_scaled * (int64_t)(2.0 * S) + (S >> 1)) >> 28) - (1 * S);
ARM GAS  C:\Users\mulwe\AppData\Local\Temp\ccLTOw0I.s 			page 12


 348              		.loc 1 240 24 is_stmt 1 view .LVU88
 240:Core/Src/main.c ****         	              int64_t y0 = ((y_scaled * (int64_t)(2.0 * S) + (S >> 1)) >> 28) - (1 * S);
 349              		.loc 1 240 48 is_stmt 0 view .LVU89
 350 011e ED00     		lsls	r5, r5, #3
 351              	.LVL25:
 240:Core/Src/main.c ****         	              int64_t y0 = ((y_scaled * (int64_t)(2.0 * S) + (S >> 1)) >> 28) - (1 * S);
 352              		.loc 1 240 48 view .LVU90
 353 0120 45EA5475 		orr	r5, r5, r4, lsr #29
 354 0124 E400     		lsls	r4, r4, #3
 355              	.LVL26:
 240:Core/Src/main.c ****         	              int64_t y0 = ((y_scaled * (int64_t)(2.0 * S) + (S >> 1)) >> 28) - (1 * S);
 356              		.loc 1 240 48 view .LVU91
 357 0126 E71B     		subs	r7, r4, r7
 358              	.LVL27:
 240:Core/Src/main.c ****         	              int64_t y0 = ((y_scaled * (int64_t)(2.0 * S) + (S >> 1)) >> 28) - (1 * S);
 359              		.loc 1 240 48 view .LVU92
 360 0128 65EB0805 		sbc	r5, r5, r8
 361 012c ED06     		lsls	r5, r5, #27
 362 012e 45EA5715 		orr	r5, r5, r7, lsr #5
 363 0132 FF06     		lsls	r7, r7, #27
 240:Core/Src/main.c ****         	              int64_t y0 = ((y_scaled * (int64_t)(2.0 * S) + (S >> 1)) >> 28) - (1 * S);
 364              		.loc 1 240 69 view .LVU93
 365 0134 17F10067 		adds	r7, r7, #134217728
 366 0138 45F10005 		adc	r5, r5, #0
 240:Core/Src/main.c ****         	              int64_t y0 = ((y_scaled * (int64_t)(2.0 * S) + (S >> 1)) >> 28) - (1 * S);
 367              		.loc 1 240 81 view .LVU94
 368 013c 3F0F     		lsrs	r7, r7, #28
 369 013e 47EA0517 		orr	r7, r7, r5, lsl #4
 370 0142 2D17     		asrs	r5, r5, #28
 240:Core/Src/main.c ****         	              int64_t y0 = ((y_scaled * (int64_t)(2.0 * S) + (S >> 1)) >> 28) - (1 * S);
 371              		.loc 1 240 32 view .LVU95
 372 0144 17F15847 		adds	r7, r7, #-671088640
 373 0148 45F1FF3E 		adc	lr, r5, #-1
 374              	.LVL28:
 241:Core/Src/main.c **** 
 375              		.loc 1 241 24 is_stmt 1 view .LVU96
 241:Core/Src/main.c **** 
 376              		.loc 1 241 48 is_stmt 0 view .LVU97
 377 014c 4907     		lsls	r1, r1, #29
 378              	.LVL29:
 241:Core/Src/main.c **** 
 379              		.loc 1 241 48 view .LVU98
 380 014e 41EAD001 		orr	r1, r1, r0, lsr #3
 381 0152 4007     		lsls	r0, r0, #29
 241:Core/Src/main.c **** 
 382              		.loc 1 241 69 view .LVU99
 383 0154 10F10060 		adds	r0, r0, #134217728
 384 0158 41F10001 		adc	r1, r1, #0
 241:Core/Src/main.c **** 
 385              		.loc 1 241 81 view .LVU100
 386 015c 000F     		lsrs	r0, r0, #28
 387 015e 40EA0110 		orr	r0, r0, r1, lsl #4
 388 0162 0917     		asrs	r1, r1, #28
 241:Core/Src/main.c **** 
 389              		.loc 1 241 32 view .LVU101
 390 0164 10F17043 		adds	r3, r0, #-268435456
 391 0168 0293     		str	r3, [sp, #8]
ARM GAS  C:\Users\mulwe\AppData\Local\Temp\ccLTOw0I.s 			page 13


 392 016a 41F1FF33 		adc	r3, r1, #-1
 393 016e 0393     		str	r3, [sp, #12]
 394              	.LVL30:
 243:Core/Src/main.c ****         	              int64_t yi = 0;
 395              		.loc 1 243 24 is_stmt 1 view .LVU102
 244:Core/Src/main.c ****         	              int iteration = 0;
 396              		.loc 1 244 24 view .LVU103
 245:Core/Src/main.c **** 
 397              		.loc 1 245 24 view .LVU104
 247:Core/Src/main.c ****         	                     ((xi * xi + yi * yi) <= (4LL * S * S))) {
 398              		.loc 1 247 24 view .LVU105
 245:Core/Src/main.c **** 
 399              		.loc 1 245 28 is_stmt 0 view .LVU106
 400 0170 4FF0000C 		mov	ip, #0
 244:Core/Src/main.c ****         	              int iteration = 0;
 401              		.loc 1 244 32 view .LVU107
 402 0174 6546     		mov	r5, ip
 403 0176 E046     		mov	r8, ip
 243:Core/Src/main.c ****         	              int64_t yi = 0;
 404              		.loc 1 243 32 view .LVU108
 405 0178 6346     		mov	r3, ip
 406              	.LVL31:
 243:Core/Src/main.c ****         	              int64_t yi = 0;
 407              		.loc 1 243 32 view .LVU109
 408 017a 6146     		mov	r1, ip
 409 017c CDF818B0 		str	fp, [sp, #24]
 410 0180 0796     		str	r6, [sp, #28]
 411 0182 CDF82090 		str	r9, [sp, #32]
 412 0186 CDF824A0 		str	r10, [sp, #36]
 247:Core/Src/main.c ****         	                     ((xi * xi + yi * yi) <= (4LL * S * S))) {
 413              		.loc 1 247 30 view .LVU110
 414 018a 74E7     		b	.L7
 415              	.LVL32:
 416              	.L14:
 247:Core/Src/main.c ****         	                     ((xi * xi + yi * yi) <= (4LL * S * S))) {
 417              		.loc 1 247 30 view .LVU111
 418              	.LBE11:
 419              	.LBE8:
 234:Core/Src/main.c ****           for (int x = 0; x < width; x++) {
 420              		.loc 1 234 35 is_stmt 1 discriminator 2 view .LVU112
 421 018c 0BF1010B 		add	fp, fp, #1
 422              	.LVL33:
 423              	.L6:
 234:Core/Src/main.c ****           for (int x = 0; x < width; x++) {
 424              		.loc 1 234 24 discriminator 1 view .LVU113
 425 0190 D345     		cmp	fp, r10
 426 0192 01DA     		bge	.L15
 427              	.LBB12:
 235:Core/Src/main.c **** 
 428              		.loc 1 235 20 is_stmt 0 view .LVU114
 429 0194 0026     		movs	r6, #0
 430 0196 99E7     		b	.L11
 431              	.L15:
 432              	.LBE12:
 433              	.LBE13:
 263:Core/Src/main.c ****         	          }
 264:Core/Src/main.c ****         	      }
ARM GAS  C:\Users\mulwe\AppData\Local\Temp\ccLTOw0I.s 			page 14


 265:Core/Src/main.c **** 
 266:Core/Src/main.c ****         	      return mandelbrot_sum;
 434              		.loc 1 266 16 is_stmt 1 view .LVU115
 267:Core/Src/main.c **** 
 268:Core/Src/main.c **** }
 435              		.loc 1 268 1 is_stmt 0 view .LVU116
 436 0198 0498     		ldr	r0, [sp, #16]
 437 019a 0599     		ldr	r1, [sp, #20]
 438 019c 0BB0     		add	sp, sp, #44
 439              	.LCFI5:
 440              		.cfi_def_cfa_offset 36
 441              		@ sp needed
 442 019e BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 443              		.loc 1 268 1 view .LVU117
 444              		.cfi_endproc
 445              	.LFE137:
 447              		.global	__aeabi_i2d
 448              		.global	__aeabi_ddiv
 449              		.global	__aeabi_dmul
 450              		.global	__aeabi_dsub
 451              		.global	__aeabi_dadd
 452              		.global	__aeabi_dcmple
 453              		.section	.text.calculate_mandelbrot_double,"ax",%progbits
 454              		.align	1
 455              		.global	calculate_mandelbrot_double
 456              		.syntax unified
 457              		.thumb
 458              		.thumb_func
 460              	calculate_mandelbrot_double:
 461              	.LVL34:
 462              	.LFB138:
 269:Core/Src/main.c **** 
 270:Core/Src/main.c **** //Mandelbroat using variable type double
 271:Core/Src/main.c **** uint64_t calculate_mandelbrot_double(int width, int height, int max_iterations) {
 463              		.loc 1 271 81 is_stmt 1 view -0
 464              		.cfi_startproc
 465              		@ args = 0, pretend = 0, frame = 72
 466              		@ frame_needed = 0, uses_anonymous_args = 0
 467              		.loc 1 271 81 is_stmt 0 view .LVU119
 468 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 469              	.LCFI6:
 470              		.cfi_def_cfa_offset 36
 471              		.cfi_offset 4, -36
 472              		.cfi_offset 5, -32
 473              		.cfi_offset 6, -28
 474              		.cfi_offset 7, -24
 475              		.cfi_offset 8, -20
 476              		.cfi_offset 9, -16
 477              		.cfi_offset 10, -12
 478              		.cfi_offset 11, -8
 479              		.cfi_offset 14, -4
 480 0004 93B0     		sub	sp, sp, #76
 481              	.LCFI7:
 482              		.cfi_def_cfa_offset 112
 483 0006 0C90     		str	r0, [sp, #48]
 484 0008 0E46     		mov	r6, r1
 485 000a 1446     		mov	r4, r2
ARM GAS  C:\Users\mulwe\AppData\Local\Temp\ccLTOw0I.s 			page 15


 272:Core/Src/main.c ****     uint64_t mandelbrot_sum = 0;
 486              		.loc 1 272 5 is_stmt 1 view .LVU120
 487              	.LVL35:
 273:Core/Src/main.c **** 
 274:Core/Src/main.c ****     double inv_width  = 3.5 / width;
 488              		.loc 1 274 5 view .LVU121
 489              		.loc 1 274 29 is_stmt 0 view .LVU122
 490 000c FFF7FEFF 		bl	__aeabi_i2d
 491              	.LVL36:
 492              		.loc 1 274 29 view .LVU123
 493 0010 0246     		mov	r2, r0
 494 0012 0B46     		mov	r3, r1
 495              		.loc 1 274 12 view .LVU124
 496 0014 0020     		movs	r0, #0
 497 0016 4E49     		ldr	r1, .L27
 498 0018 FFF7FEFF 		bl	__aeabi_ddiv
 499              	.LVL37:
 500 001c CDE90A01 		strd	r0, [sp, #40]
 501              	.LVL38:
 275:Core/Src/main.c ****     double inv_height = 2.0 / height;
 502              		.loc 1 275 5 is_stmt 1 view .LVU125
 503              		.loc 1 275 29 is_stmt 0 view .LVU126
 504 0020 3046     		mov	r0, r6
 505              	.LVL39:
 506              		.loc 1 275 29 view .LVU127
 507 0022 FFF7FEFF 		bl	__aeabi_i2d
 508              	.LVL40:
 509 0026 0246     		mov	r2, r0
 510 0028 0B46     		mov	r3, r1
 511              		.loc 1 275 12 view .LVU128
 512 002a 0020     		movs	r0, #0
 513 002c 4FF08041 		mov	r1, #1073741824
 514 0030 FFF7FEFF 		bl	__aeabi_ddiv
 515              	.LVL41:
 516 0034 CDE91001 		strd	r0, [sp, #64]
 517              	.LVL42:
 276:Core/Src/main.c **** 
 277:Core/Src/main.c ****     for (int y = 0; y < height; y++) {
 518              		.loc 1 277 5 is_stmt 1 view .LVU129
 519              	.LBB14:
 520              		.loc 1 277 10 view .LVU130
 521              		.loc 1 277 14 is_stmt 0 view .LVU131
 522 0038 0027     		movs	r7, #0
 523              	.LBE14:
 272:Core/Src/main.c **** 
 524              		.loc 1 272 14 view .LVU132
 525 003a 0797     		str	r7, [sp, #28]
 526 003c BB46     		mov	fp, r7
 527 003e 0F96     		str	r6, [sp, #60]
 528 0040 0D94     		str	r4, [sp, #52]
 529              	.LBB22:
 530              		.loc 1 277 5 view .LVU133
 531 0042 6BE0     		b	.L17
 532              	.LVL43:
 533              	.L21:
 534              	.LBB15:
 535              	.LBB16:
ARM GAS  C:\Users\mulwe\AppData\Local\Temp\ccLTOw0I.s 			page 16


 536              	.LBB17:
 537              	.LBB18:
 278:Core/Src/main.c ****         double y0 = y * inv_height - 1.0;
 279:Core/Src/main.c **** 
 280:Core/Src/main.c ****         for (int x = 0; x < width; x++) {
 281:Core/Src/main.c ****             double x0 = x * inv_width - 2.5;
 282:Core/Src/main.c **** 
 283:Core/Src/main.c ****             double xi = 0.0, yi = 0.0;
 284:Core/Src/main.c ****             int iteration = 0;
 285:Core/Src/main.c **** 
 286:Core/Src/main.c ****             while (iteration < max_iterations && (xi*xi + yi*yi) <= 4.0) {
 287:Core/Src/main.c ****                 double temp = xi*xi - yi*yi + x0;
 538              		.loc 1 287 17 is_stmt 1 view .LVU134
 539              		.loc 1 287 37 is_stmt 0 view .LVU135
 540 0044 4246     		mov	r2, r8
 541 0046 4B46     		mov	r3, r9
 542 0048 DDE90001 		ldrd	r0, [sp]
 543 004c FFF7FEFF 		bl	__aeabi_dsub
 544              	.LVL44:
 545              		.loc 1 287 24 view .LVU136
 546 0050 DDE90223 		ldrd	r2, [sp, #8]
 547 0054 FFF7FEFF 		bl	__aeabi_dadd
 548              	.LVL45:
 549 0058 8046     		mov	r8, r0
 550 005a 8946     		mov	r9, r1
 551              	.LVL46:
 288:Core/Src/main.c ****                 yi = 2.0 * xi * yi + y0;
 552              		.loc 1 288 17 is_stmt 1 view .LVU137
 553              		.loc 1 288 26 is_stmt 0 view .LVU138
 554 005c 2246     		mov	r2, r4
 555 005e 2B46     		mov	r3, r5
 556 0060 2046     		mov	r0, r4
 557 0062 2946     		mov	r1, r5
 558 0064 FFF7FEFF 		bl	__aeabi_dadd
 559              	.LVL47:
 560              		.loc 1 288 31 view .LVU139
 561 0068 3246     		mov	r2, r6
 562 006a 3B46     		mov	r3, r7
 563 006c FFF7FEFF 		bl	__aeabi_dmul
 564              	.LVL48:
 565              		.loc 1 288 20 view .LVU140
 566 0070 DDE90423 		ldrd	r2, [sp, #16]
 567 0074 FFF7FEFF 		bl	__aeabi_dadd
 568              	.LVL49:
 569 0078 0646     		mov	r6, r0
 570              	.LVL50:
 571              		.loc 1 288 20 view .LVU141
 572 007a 0F46     		mov	r7, r1
 573              	.LVL51:
 289:Core/Src/main.c ****                 xi = temp;
 574              		.loc 1 289 17 is_stmt 1 view .LVU142
 290:Core/Src/main.c ****                 iteration++;
 575              		.loc 1 290 17 view .LVU143
 576              		.loc 1 290 26 is_stmt 0 view .LVU144
 577 007c 0AF1010A 		add	r10, r10, #1
 578              	.LVL52:
 289:Core/Src/main.c ****                 xi = temp;
ARM GAS  C:\Users\mulwe\AppData\Local\Temp\ccLTOw0I.s 			page 17


 579              		.loc 1 289 20 view .LVU145
 580 0080 4446     		mov	r4, r8
 581 0082 4D46     		mov	r5, r9
 582              	.LVL53:
 583              	.L19:
 289:Core/Src/main.c ****                 xi = temp;
 584              		.loc 1 289 20 view .LVU146
 585              	.LBE18:
 286:Core/Src/main.c ****                 double temp = xi*xi - yi*yi + x0;
 586              		.loc 1 286 47 is_stmt 1 view .LVU147
 587 0084 DA45     		cmp	r10, fp
 588 0086 1BDA     		bge	.L20
 286:Core/Src/main.c ****                 double temp = xi*xi - yi*yi + x0;
 589              		.loc 1 286 53 is_stmt 0 discriminator 1 view .LVU148
 590 0088 2246     		mov	r2, r4
 591 008a 2B46     		mov	r3, r5
 592 008c 2046     		mov	r0, r4
 593 008e 2946     		mov	r1, r5
 594 0090 FFF7FEFF 		bl	__aeabi_dmul
 595              	.LVL54:
 596 0094 CDE90001 		strd	r0, [sp]
 286:Core/Src/main.c ****                 double temp = xi*xi - yi*yi + x0;
 597              		.loc 1 286 61 discriminator 1 view .LVU149
 598 0098 3246     		mov	r2, r6
 599 009a 3B46     		mov	r3, r7
 600 009c 3046     		mov	r0, r6
 601 009e 3946     		mov	r1, r7
 602 00a0 FFF7FEFF 		bl	__aeabi_dmul
 603              	.LVL55:
 604 00a4 8046     		mov	r8, r0
 605 00a6 8946     		mov	r9, r1
 286:Core/Src/main.c ****                 double temp = xi*xi - yi*yi + x0;
 606              		.loc 1 286 57 discriminator 1 view .LVU150
 607 00a8 0246     		mov	r2, r0
 608 00aa 0B46     		mov	r3, r1
 609 00ac DDE90001 		ldrd	r0, [sp]
 610 00b0 FFF7FEFF 		bl	__aeabi_dadd
 611              	.LVL56:
 286:Core/Src/main.c ****                 double temp = xi*xi - yi*yi + x0;
 612              		.loc 1 286 47 discriminator 1 view .LVU151
 613 00b4 0022     		movs	r2, #0
 614 00b6 274B     		ldr	r3, .L27+4
 615 00b8 FFF7FEFF 		bl	__aeabi_dcmple
 616              	.LVL57:
 617 00bc 0028     		cmp	r0, #0
 618 00be C1D1     		bne	.L21
 619              	.L20:
 291:Core/Src/main.c ****             }
 292:Core/Src/main.c **** 
 293:Core/Src/main.c ****             mandelbrot_sum += iteration;
 620              		.loc 1 293 28 view .LVU152
 621 00c0 D146     		mov	r9, r10
 622 00c2 DDF820A0 		ldr	r10, [sp, #32]
 623              	.LVL58:
 624              		.loc 1 293 28 view .LVU153
 625 00c6 DDF82480 		ldr	r8, [sp, #36]
 626              		.loc 1 293 13 is_stmt 1 view .LVU154
ARM GAS  C:\Users\mulwe\AppData\Local\Temp\ccLTOw0I.s 			page 18


 627              		.loc 1 293 28 is_stmt 0 view .LVU155
 628 00ca 079B     		ldr	r3, [sp, #28]
 629 00cc 19EB0302 		adds	r2, r9, r3
 630 00d0 0792     		str	r2, [sp, #28]
 631              	.LVL59:
 632              		.loc 1 293 28 view .LVU156
 633 00d2 48EBE978 		adc	r8, r8, r9, asr #31
 634              	.LVL60:
 635              		.loc 1 293 28 view .LVU157
 636              	.LBE17:
 280:Core/Src/main.c ****             double x0 = x * inv_width - 2.5;
 637              		.loc 1 280 37 is_stmt 1 discriminator 2 view .LVU158
 638 00d6 0AF1010A 		add	r10, r10, #1
 639              	.LVL61:
 640              	.L18:
 280:Core/Src/main.c ****             double x0 = x * inv_width - 2.5;
 641              		.loc 1 280 27 discriminator 1 view .LVU159
 642 00da 0C9B     		ldr	r3, [sp, #48]
 643 00dc 9A45     		cmp	r10, r3
 644 00de 1ADA     		bge	.L25
 645              	.LBB19:
 281:Core/Src/main.c **** 
 646              		.loc 1 281 13 view .LVU160
 281:Core/Src/main.c **** 
 647              		.loc 1 281 27 is_stmt 0 view .LVU161
 648 00e0 5046     		mov	r0, r10
 649 00e2 FFF7FEFF 		bl	__aeabi_i2d
 650              	.LVL62:
 651 00e6 DDE90A23 		ldrd	r2, [sp, #40]
 652 00ea FFF7FEFF 		bl	__aeabi_dmul
 653              	.LVL63:
 281:Core/Src/main.c **** 
 654              		.loc 1 281 20 view .LVU162
 655 00ee 0022     		movs	r2, #0
 656 00f0 194B     		ldr	r3, .L27+8
 657 00f2 FFF7FEFF 		bl	__aeabi_dsub
 658              	.LVL64:
 659 00f6 CDE90201 		strd	r0, [sp, #8]
 660              	.LVL65:
 283:Core/Src/main.c ****             int iteration = 0;
 661              		.loc 1 283 13 is_stmt 1 view .LVU163
 284:Core/Src/main.c **** 
 662              		.loc 1 284 13 view .LVU164
 286:Core/Src/main.c ****                 double temp = xi*xi - yi*yi + x0;
 663              		.loc 1 286 13 view .LVU165
 284:Core/Src/main.c **** 
 664              		.loc 1 284 17 is_stmt 0 view .LVU166
 665 00fa 4FF00009 		mov	r9, #0
 283:Core/Src/main.c ****             int iteration = 0;
 666              		.loc 1 283 30 view .LVU167
 667 00fe 0026     		movs	r6, #0
 668 0100 0027     		movs	r7, #0
 283:Core/Src/main.c ****             int iteration = 0;
 669              		.loc 1 283 20 view .LVU168
 670 0102 3446     		mov	r4, r6
 671 0104 3D46     		mov	r5, r7
 672 0106 CDF820A0 		str	r10, [sp, #32]
ARM GAS  C:\Users\mulwe\AppData\Local\Temp\ccLTOw0I.s 			page 19


 673 010a CA46     		mov	r10, r9
 674              	.LVL66:
 283:Core/Src/main.c ****             int iteration = 0;
 675              		.loc 1 283 20 view .LVU169
 676 010c DDF834B0 		ldr	fp, [sp, #52]
 677 0110 CDF82480 		str	r8, [sp, #36]
 286:Core/Src/main.c ****                 double temp = xi*xi - yi*yi + x0;
 678              		.loc 1 286 19 view .LVU170
 679 0114 B6E7     		b	.L19
 680              	.LVL67:
 681              	.L25:
 286:Core/Src/main.c ****                 double temp = xi*xi - yi*yi + x0;
 682              		.loc 1 286 19 view .LVU171
 683              	.LBE19:
 684              	.LBE16:
 685              	.LBE15:
 277:Core/Src/main.c ****         double y0 = y * inv_height - 1.0;
 686              		.loc 1 277 34 discriminator 2 view .LVU172
 687 0116 0E9F     		ldr	r7, [sp, #56]
 688 0118 C346     		mov	fp, r8
 277:Core/Src/main.c ****         double y0 = y * inv_height - 1.0;
 689              		.loc 1 277 34 is_stmt 1 discriminator 2 view .LVU173
 690 011a 0137     		adds	r7, r7, #1
 691              	.LVL68:
 692              	.L17:
 277:Core/Src/main.c ****         double y0 = y * inv_height - 1.0;
 693              		.loc 1 277 23 discriminator 1 view .LVU174
 694 011c 0F9B     		ldr	r3, [sp, #60]
 695 011e 9F42     		cmp	r7, r3
 696 0120 11DA     		bge	.L26
 697              	.LBB21:
 278:Core/Src/main.c **** 
 698              		.loc 1 278 9 view .LVU175
 278:Core/Src/main.c **** 
 699              		.loc 1 278 23 is_stmt 0 view .LVU176
 700 0122 3846     		mov	r0, r7
 701 0124 FFF7FEFF 		bl	__aeabi_i2d
 702              	.LVL69:
 703 0128 DDE91023 		ldrd	r2, [sp, #64]
 704 012c FFF7FEFF 		bl	__aeabi_dmul
 705              	.LVL70:
 278:Core/Src/main.c **** 
 706              		.loc 1 278 16 view .LVU177
 707 0130 0022     		movs	r2, #0
 708 0132 0A4B     		ldr	r3, .L27+12
 709 0134 FFF7FEFF 		bl	__aeabi_dsub
 710              	.LVL71:
 711 0138 CDE90401 		strd	r0, [sp, #16]
 712              	.LVL72:
 280:Core/Src/main.c ****             double x0 = x * inv_width - 2.5;
 713              		.loc 1 280 9 is_stmt 1 view .LVU178
 714              	.LBB20:
 280:Core/Src/main.c ****             double x0 = x * inv_width - 2.5;
 715              		.loc 1 280 14 view .LVU179
 280:Core/Src/main.c ****             double x0 = x * inv_width - 2.5;
 716              		.loc 1 280 18 is_stmt 0 view .LVU180
 717 013c 4FF0000A 		mov	r10, #0
ARM GAS  C:\Users\mulwe\AppData\Local\Temp\ccLTOw0I.s 			page 20


 718 0140 0E97     		str	r7, [sp, #56]
 719 0142 D846     		mov	r8, fp
 280:Core/Src/main.c ****             double x0 = x * inv_width - 2.5;
 720              		.loc 1 280 9 view .LVU181
 721 0144 C9E7     		b	.L18
 722              	.LVL73:
 723              	.L26:
 280:Core/Src/main.c ****             double x0 = x * inv_width - 2.5;
 724              		.loc 1 280 9 view .LVU182
 725              	.LBE20:
 726              	.LBE21:
 727              	.LBE22:
 294:Core/Src/main.c ****         }
 295:Core/Src/main.c ****     }
 296:Core/Src/main.c ****     return mandelbrot_sum;
 728              		.loc 1 296 5 is_stmt 1 view .LVU183
 297:Core/Src/main.c **** }
 729              		.loc 1 297 1 is_stmt 0 view .LVU184
 730 0146 0798     		ldr	r0, [sp, #28]
 731 0148 5946     		mov	r1, fp
 732 014a 13B0     		add	sp, sp, #76
 733              	.LCFI8:
 734              		.cfi_def_cfa_offset 36
 735              		@ sp needed
 736 014c BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 737              	.LVL74:
 738              	.L28:
 739              		.loc 1 297 1 view .LVU185
 740              		.align	2
 741              	.L27:
 742 0150 00000C40 		.word	1074528256
 743 0154 00001040 		.word	1074790400
 744 0158 00000440 		.word	1074003968
 745 015c 0000F03F 		.word	1072693248
 746              		.cfi_endproc
 747              	.LFE138:
 749              		.section	.text.Error_Handler,"ax",%progbits
 750              		.align	1
 751              		.global	Error_Handler
 752              		.syntax unified
 753              		.thumb
 754              		.thumb_func
 756              	Error_Handler:
 757              	.LFB139:
 298:Core/Src/main.c **** /* USER CODE END 4 */
 299:Core/Src/main.c **** 
 300:Core/Src/main.c **** /**
 301:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 302:Core/Src/main.c ****   * @retval None
 303:Core/Src/main.c ****   */
 304:Core/Src/main.c **** void Error_Handler(void)
 305:Core/Src/main.c **** {
 758              		.loc 1 305 1 is_stmt 1 view -0
 759              		.cfi_startproc
 760              		@ Volatile: function does not return.
 761              		@ args = 0, pretend = 0, frame = 0
 762              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\mulwe\AppData\Local\Temp\ccLTOw0I.s 			page 21


 763              		@ link register save eliminated.
 306:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 307:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 308:Core/Src/main.c ****   __disable_irq();
 764              		.loc 1 308 3 view .LVU187
 765              	.LBB23:
 766              	.LBI23:
 767              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.4.1
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     27. May 2021
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2021 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE
ARM GAS  C:\Users\mulwe\AppData\Local\Temp\ccLTOw0I.s 			page 22


  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
ARM GAS  C:\Users\mulwe\AppData\Local\Temp\ccLTOw0I.s 			page 23


 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
ARM GAS  C:\Users\mulwe\AppData\Local\Temp\ccLTOw0I.s 			page 24


 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute__((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_SEAL
 187:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_SEAL              __StackSeal
 188:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 189:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_SIZE
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_SIZE      8U
 192:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 193:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 194:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_VALUE
 195:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_VALUE     0xFEF5EDA5FEF5EDA5ULL
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 198:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_STACKSEAL_S (uint32_t* stackTop) {
 200:Drivers/CMSIS/Include/cmsis_gcc.h ****   *((uint64_t *)stackTop) = __TZ_STACK_SEAL_VALUE;
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 203:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 204:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 205:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 206:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 207:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 208:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 209:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 210:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 212:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 213:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 214:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 215:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 216:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 217:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 218:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 220:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
ARM GAS  C:\Users\mulwe\AppData\Local\Temp\ccLTOw0I.s 			page 25


 221:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 222:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 223:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 224:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 225:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 226:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 227:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 228:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 229:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 230:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 233:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi":::"memory")
 235:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 239:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 240:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 241:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe":::"memory")
 243:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 244:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 245:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 247:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 248:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 249:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 250:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 251:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 252:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 253:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 254:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 255:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 256:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 257:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 258:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 259:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 260:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 261:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 262:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 264:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 265:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 266:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 267:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 268:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 269:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 270:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 271:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 272:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 273:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 274:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 275:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 277:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
ARM GAS  C:\Users\mulwe\AppData\Local\Temp\ccLTOw0I.s 			page 26


 278:Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 279:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 281:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 282:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 283:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 284:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 285:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 286:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 287:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 288:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 289:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 290:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 291:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 295:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 296:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 298:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 300:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 302:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 303:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 305:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 306:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 307:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 308:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 309:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 310:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 311:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 312:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 314:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 315:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 316:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 317:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 318:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 319:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 320:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 321:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 322:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 323:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 324:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 325:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 326:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
 327:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 328:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 329:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
 330:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 331:Drivers/CMSIS/Include/cmsis_gcc.h ****   int16_t result;
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 334:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
ARM GAS  C:\Users\mulwe\AppData\Local\Temp\ccLTOw0I.s 			page 27


 335:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 338:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 339:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
 342:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
 343:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
 344:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 345:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 346:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 348:Drivers/CMSIS/Include/cmsis_gcc.h ****   op2 %= 32U;
 349:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (op2 == 0U)
 350:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 351:Drivers/CMSIS/Include/cmsis_gcc.h ****     return op1;
 352:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
 354:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 355:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 358:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
 359:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
 360:Drivers/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
 361:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
 362:Drivers/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
 363:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 364:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
 365:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 366:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 367:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 368:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
 369:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
 370:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 371:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 375:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 378:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM ("rbit %0, %1" : "=r" (result) : "r" (value) );
 381:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 382:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 384:Drivers/CMSIS/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
 385:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****     result <<= 1U;
 388:Drivers/CMSIS/Include/cmsis_gcc.h ****     result |= value & 1U;
 389:Drivers/CMSIS/Include/cmsis_gcc.h ****     s--;
 390:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 391:Drivers/CMSIS/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
ARM GAS  C:\Users\mulwe\AppData\Local\Temp\ccLTOw0I.s 			page 28


 392:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 393:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 394:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 395:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 396:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 397:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 398:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Count leading zeros
 399:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Counts the number of leading zeros of a data value.
 400:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to count the leading zeros
 401:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             number of leading zeros in value
 402:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __CLZ(uint32_t value)
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 405:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Even though __builtin_clz produces a CLZ instruction on ARM, formally
 406:Drivers/CMSIS/Include/cmsis_gcc.h ****      __builtin_clz(0) is undefined behaviour, so handle this case specially.
 407:Drivers/CMSIS/Include/cmsis_gcc.h ****      This guarantees ARM-compatible results if happening to compile on a non-ARM
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****      target, and ensures the compiler doesn't decide to activate any
 409:Drivers/CMSIS/Include/cmsis_gcc.h ****      optimisations using the logic "value was passed to __builtin_clz, so it
 410:Drivers/CMSIS/Include/cmsis_gcc.h ****      is non-zero".
 411:Drivers/CMSIS/Include/cmsis_gcc.h ****      ARM GCC 7.3 and possibly earlier will optimise this test away, leaving a
 412:Drivers/CMSIS/Include/cmsis_gcc.h ****      single CLZ instruction.
 413:Drivers/CMSIS/Include/cmsis_gcc.h ****    */
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (value == 0U)
 415:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 416:Drivers/CMSIS/Include/cmsis_gcc.h ****     return 32U;
 417:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 418:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_clz(value);
 419:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 420:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 421:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 422:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 423:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 424:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 425:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 426:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 427:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (8 bit)
 428:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 8 bit value.
 429:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 430:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 431:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 432:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDREXB(volatile uint8_t *addr)
 433:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 434:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 435:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 436:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 437:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, %1" : "=r" (result) : "Q" (*addr) );
 438:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 439:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 440:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 441:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 442:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 444:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 445:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 446:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 447:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 448:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  C:\Users\mulwe\AppData\Local\Temp\ccLTOw0I.s 			page 29


 449:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (16 bit)
 450:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 16 bit values.
 451:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 452:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 454:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDREXH(volatile uint16_t *addr)
 455:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 456:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 457:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 458:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 459:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, %1" : "=r" (result) : "Q" (*addr) );
 460:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 461:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 462:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 463:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 464:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 465:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 466:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 467:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 468:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 469:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 471:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (32 bit)
 472:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 32 bit values.
 473:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 474:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 475:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 476:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
 477:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 478:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 479:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 481:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 482:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 484:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 485:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 486:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (8 bit)
 487:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 8 bit values.
 488:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 489:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 490:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 491:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 492:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 493:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXB(uint8_t value, volatile uint8_t *addr)
 494:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 495:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 496:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexb %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 498:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 499:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 500:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 501:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 502:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 503:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (16 bit)
 504:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 16 bit values.
 505:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
ARM GAS  C:\Users\mulwe\AppData\Local\Temp\ccLTOw0I.s 			page 30


 506:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 507:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 508:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 509:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 510:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXH(uint16_t value, volatile uint16_t *addr)
 511:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 512:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 513:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexh %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 515:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 516:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 517:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 518:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 519:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 520:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (32 bit)
 521:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 32 bit values.
 522:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 523:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 524:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 525:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 526:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 527:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
 528:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 529:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 530:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 532:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 533:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 534:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 535:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 537:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Remove the exclusive lock
 538:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Removes the exclusive lock which is created by LDREX.
 539:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 540:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __CLREX(void)
 541:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 542:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("clrex" ::: "memory");
 543:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 544:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 545:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 546:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 547:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 548:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 549:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 550:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 551:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 552:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 553:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 554:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 555:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 556:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 557:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 558:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (1..32)
 559:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 560:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 561:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SSAT(ARG1, ARG2) \
 562:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
ARM GAS  C:\Users\mulwe\AppData\Local\Temp\ccLTOw0I.s 			page 31


 563:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 564:Drivers/CMSIS/Include/cmsis_gcc.h ****   int32_t __RES, __ARG1 = (ARG1); \
 565:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("ssat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 566:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 567:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 568:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 569:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 570:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 571:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 572:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 573:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 574:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (0..31)
 575:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 576:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 577:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __USAT(ARG1, ARG2) \
 578:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 579:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 580:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t __RES, __ARG1 = (ARG1); \
 581:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("usat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 582:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 583:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 584:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 585:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 586:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 587:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right with Extend (32 bit)
 588:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Moves each bit of a bitstring right by one bit.
 589:Drivers/CMSIS/Include/cmsis_gcc.h ****            The carry input is shifted in at the left end of the bitstring.
 590:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to rotate
 591:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 592:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 593:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RRX(uint32_t value)
 594:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 595:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 596:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 597:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rrx %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 598:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 599:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 600:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 601:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 602:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 603:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (8 bit)
 604:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 8 bit value.
 605:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 606:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 607:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 608:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDRBT(volatile uint8_t *ptr)
 609:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 610:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 611:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 612:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 613:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, %1" : "=r" (result) : "Q" (*ptr) );
 614:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 615:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 616:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 617:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 618:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 619:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  C:\Users\mulwe\AppData\Local\Temp\ccLTOw0I.s 			page 32


 620:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 621:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 622:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 623:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 624:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 625:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (16 bit)
 626:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 16 bit values.
 627:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 628:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 629:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 630:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDRHT(volatile uint16_t *ptr)
 631:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 632:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 633:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 634:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 635:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, %1" : "=r" (result) : "Q" (*ptr) );
 636:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 637:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 638:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 639:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 640:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 641:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 642:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 643:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 644:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 645:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 646:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 647:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (32 bit)
 648:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 32 bit values.
 649:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 650:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 651:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 652:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDRT(volatile uint32_t *ptr)
 653:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 654:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 655:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 656:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrt %0, %1" : "=r" (result) : "Q" (*ptr) );
 657:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 658:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 659:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 660:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 661:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 662:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (8 bit)
 663:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 8 bit values.
 664:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 665:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 666:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 667:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRBT(uint8_t value, volatile uint8_t *ptr)
 668:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 669:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strbt %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 670:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 671:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 672:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 673:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 674:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (16 bit)
 675:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 16 bit values.
 676:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
ARM GAS  C:\Users\mulwe\AppData\Local\Temp\ccLTOw0I.s 			page 33


 677:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 678:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 679:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRHT(uint16_t value, volatile uint16_t *ptr)
 680:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 681:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strht %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 682:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 683:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 684:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 685:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 686:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (32 bit)
 687:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 32 bit values.
 688:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 689:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 690:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 691:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRT(uint32_t value, volatile uint32_t *ptr)
 692:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 693:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strt %1, %0" : "=Q" (*ptr) : "r" (value) );
 694:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 695:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 696:Drivers/CMSIS/Include/cmsis_gcc.h **** #else  /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 697:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 698:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 699:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 700:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 701:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 702:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 703:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 704:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (1..32)
 705:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 706:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 707:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int32_t __SSAT(int32_t val, uint32_t sat)
 708:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 709:Drivers/CMSIS/Include/cmsis_gcc.h ****   if ((sat >= 1U) && (sat <= 32U))
 710:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 711:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t max = (int32_t)((1U << (sat - 1U)) - 1U);
 712:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t min = -1 - max ;
 713:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > max)
 714:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 715:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 716:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 717:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < min)
 718:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 719:Drivers/CMSIS/Include/cmsis_gcc.h ****       return min;
 720:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 721:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 722:Drivers/CMSIS/Include/cmsis_gcc.h ****   return val;
 723:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 724:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 725:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 726:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 727:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 728:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 729:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (0..31)
 730:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 731:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 732:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __USAT(int32_t val, uint32_t sat)
 733:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  C:\Users\mulwe\AppData\Local\Temp\ccLTOw0I.s 			page 34


 734:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (sat <= 31U)
 735:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 736:Drivers/CMSIS/Include/cmsis_gcc.h ****     const uint32_t max = ((1U << sat) - 1U);
 737:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > (int32_t)max)
 738:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 739:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 740:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 741:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < 0)
 742:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 743:Drivers/CMSIS/Include/cmsis_gcc.h ****       return 0U;
 744:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 745:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 746:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (uint32_t)val;
 747:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 748:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 749:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 750:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 751:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 752:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 753:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 754:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 755:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 756:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 757:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (8 bit)
 758:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB instruction for 8 bit value.
 759:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 760:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 761:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 762:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAB(volatile uint8_t *ptr)
 763:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 764:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 765:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 766:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldab %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 767:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 768:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 769:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 770:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 771:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 772:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (16 bit)
 773:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH instruction for 16 bit values.
 774:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 775:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 776:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 777:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAH(volatile uint16_t *ptr)
 778:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 779:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 780:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 781:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldah %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 782:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 783:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 784:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 785:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 786:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 787:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (32 bit)
 788:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA instruction for 32 bit values.
 789:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 790:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
ARM GAS  C:\Users\mulwe\AppData\Local\Temp\ccLTOw0I.s 			page 35


 791:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 792:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDA(volatile uint32_t *ptr)
 793:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 795:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 796:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("lda %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 797:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 798:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 799:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 800:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 801:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 802:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (8 bit)
 803:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB instruction for 8 bit values.
 804:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 805:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 806:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 807:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLB(uint8_t value, volatile uint8_t *ptr)
 808:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 809:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlb %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 810:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 811:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 812:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 813:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 814:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (16 bit)
 815:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH instruction for 16 bit values.
 816:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 817:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 818:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 819:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLH(uint16_t value, volatile uint16_t *ptr)
 820:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 821:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlh %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 822:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 823:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 824:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 825:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 826:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (32 bit)
 827:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL instruction for 32 bit values.
 828:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 829:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 830:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 831:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STL(uint32_t value, volatile uint32_t *ptr)
 832:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 833:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stl %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 834:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 835:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 836:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 837:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 838:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (8 bit)
 839:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB exclusive instruction for 8 bit value.
 840:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 841:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 842:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 843:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAEXB(volatile uint8_t *ptr)
 844:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 845:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 846:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 847:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexb %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
ARM GAS  C:\Users\mulwe\AppData\Local\Temp\ccLTOw0I.s 			page 36


 848:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 849:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 851:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 853:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (16 bit)
 854:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH exclusive instruction for 16 bit values.
 855:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 856:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 857:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 858:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAEXH(volatile uint16_t *ptr)
 859:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 860:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 861:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 862:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexh %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 863:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 864:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 865:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 866:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 867:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 868:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (32 bit)
 869:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA exclusive instruction for 32 bit values.
 870:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 871:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 872:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 873:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDAEX(volatile uint32_t *ptr)
 874:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 875:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 876:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 877:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaex %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 878:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 879:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 880:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 881:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 882:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 883:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (8 bit)
 884:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB exclusive instruction for 8 bit values.
 885:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 886:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 887:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 888:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 889:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 890:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXB(uint8_t value, volatile uint8_t *ptr)
 891:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 892:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 893:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 894:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexb %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 895:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 896:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 897:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 898:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 899:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 900:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (16 bit)
 901:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH exclusive instruction for 16 bit values.
 902:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 903:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 904:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
ARM GAS  C:\Users\mulwe\AppData\Local\Temp\ccLTOw0I.s 			page 37


 905:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 906:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 907:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXH(uint16_t value, volatile uint16_t *ptr)
 908:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 909:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 910:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 911:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexh %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 912:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 913:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 914:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 915:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 916:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 917:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (32 bit)
 918:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL exclusive instruction for 32 bit values.
 919:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 920:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 921:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 922:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 923:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 924:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEX(uint32_t value, volatile uint32_t *ptr)
 925:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 926:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 927:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 928:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlex %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "memo
 929:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 930:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 931:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 932:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 933:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 934:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 935:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@}*/ /* end of group CMSIS_Core_InstructionInterface */
 936:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 937:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 938:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 939:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 940:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 941:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 942:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 943:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 944:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 945:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 946:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing special-purpose register PRIMASK.
 947:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 948:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 949:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 950:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 951:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 952:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 953:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 954:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 955:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 956:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 957:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
 958:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 959:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 960:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 768              		.loc 2 960 27 view .LVU188
ARM GAS  C:\Users\mulwe\AppData\Local\Temp\ccLTOw0I.s 			page 38


 769              	.LBB24:
 961:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 962:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 770              		.loc 2 962 3 view .LVU189
 771              		.syntax unified
 772              	@ 962 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 773 0000 72B6     		cpsid i
 774              	@ 0 "" 2
 775              		.thumb
 776              		.syntax unified
 777              	.L30:
 778              	.LBE24:
 779              	.LBE23:
 309:Core/Src/main.c ****   while (1)
 780              		.loc 1 309 3 view .LVU190
 310:Core/Src/main.c ****   {
 311:Core/Src/main.c ****   }
 781              		.loc 1 311 3 view .LVU191
 309:Core/Src/main.c ****   while (1)
 782              		.loc 1 309 9 view .LVU192
 783 0002 FEE7     		b	.L30
 784              		.cfi_endproc
 785              	.LFE139:
 787              		.section	.text.SystemClock_Config,"ax",%progbits
 788              		.align	1
 789              		.global	SystemClock_Config
 790              		.syntax unified
 791              		.thumb
 792              		.thumb_func
 794              	SystemClock_Config:
 795              	.LFB135:
 152:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 796              		.loc 1 152 1 view -0
 797              		.cfi_startproc
 798              		@ args = 0, pretend = 0, frame = 80
 799              		@ frame_needed = 0, uses_anonymous_args = 0
 800 0000 00B5     		push	{lr}
 801              	.LCFI9:
 802              		.cfi_def_cfa_offset 4
 803              		.cfi_offset 14, -4
 804 0002 95B0     		sub	sp, sp, #84
 805              	.LCFI10:
 806              		.cfi_def_cfa_offset 88
 153:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 807              		.loc 1 153 3 view .LVU194
 153:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 808              		.loc 1 153 22 is_stmt 0 view .LVU195
 809 0004 3422     		movs	r2, #52
 810 0006 0021     		movs	r1, #0
 811 0008 07A8     		add	r0, sp, #28
 812 000a FFF7FEFF 		bl	memset
 813              	.LVL75:
 154:Core/Src/main.c **** 
 814              		.loc 1 154 3 is_stmt 1 view .LVU196
 154:Core/Src/main.c **** 
 815              		.loc 1 154 22 is_stmt 0 view .LVU197
 816 000e 0023     		movs	r3, #0
ARM GAS  C:\Users\mulwe\AppData\Local\Temp\ccLTOw0I.s 			page 39


 817 0010 0293     		str	r3, [sp, #8]
 818 0012 0393     		str	r3, [sp, #12]
 819 0014 0493     		str	r3, [sp, #16]
 820 0016 0593     		str	r3, [sp, #20]
 821 0018 0693     		str	r3, [sp, #24]
 158:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 822              		.loc 1 158 3 is_stmt 1 view .LVU198
 823              	.LBB25:
 158:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 824              		.loc 1 158 3 view .LVU199
 825 001a 0093     		str	r3, [sp]
 158:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 826              		.loc 1 158 3 view .LVU200
 827 001c 214A     		ldr	r2, .L37
 828 001e 116C     		ldr	r1, [r2, #64]
 829 0020 41F08051 		orr	r1, r1, #268435456
 830 0024 1164     		str	r1, [r2, #64]
 158:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 831              		.loc 1 158 3 view .LVU201
 832 0026 126C     		ldr	r2, [r2, #64]
 833 0028 02F08052 		and	r2, r2, #268435456
 834 002c 0092     		str	r2, [sp]
 158:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 835              		.loc 1 158 3 view .LVU202
 836 002e 009A     		ldr	r2, [sp]
 837              	.LBE25:
 158:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 838              		.loc 1 158 3 view .LVU203
 159:Core/Src/main.c **** 
 839              		.loc 1 159 3 view .LVU204
 840              	.LBB26:
 159:Core/Src/main.c **** 
 841              		.loc 1 159 3 view .LVU205
 842 0030 0193     		str	r3, [sp, #4]
 159:Core/Src/main.c **** 
 843              		.loc 1 159 3 view .LVU206
 844 0032 1D4A     		ldr	r2, .L37+4
 845 0034 1368     		ldr	r3, [r2]
 846 0036 23F44043 		bic	r3, r3, #49152
 847 003a 43F48043 		orr	r3, r3, #16384
 848 003e 1360     		str	r3, [r2]
 159:Core/Src/main.c **** 
 849              		.loc 1 159 3 view .LVU207
 850 0040 1368     		ldr	r3, [r2]
 851 0042 03F44043 		and	r3, r3, #49152
 852 0046 0193     		str	r3, [sp, #4]
 159:Core/Src/main.c **** 
 853              		.loc 1 159 3 view .LVU208
 854 0048 019B     		ldr	r3, [sp, #4]
 855              	.LBE26:
 159:Core/Src/main.c **** 
 856              		.loc 1 159 3 view .LVU209
 164:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 857              		.loc 1 164 3 view .LVU210
 164:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 858              		.loc 1 164 36 is_stmt 0 view .LVU211
 859 004a 0123     		movs	r3, #1
ARM GAS  C:\Users\mulwe\AppData\Local\Temp\ccLTOw0I.s 			page 40


 860 004c 0793     		str	r3, [sp, #28]
 165:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 861              		.loc 1 165 3 is_stmt 1 view .LVU212
 165:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 862              		.loc 1 165 30 is_stmt 0 view .LVU213
 863 004e 4FF48033 		mov	r3, #65536
 864 0052 0893     		str	r3, [sp, #32]
 166:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 865              		.loc 1 166 3 is_stmt 1 view .LVU214
 166:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 866              		.loc 1 166 34 is_stmt 0 view .LVU215
 867 0054 0223     		movs	r3, #2
 868 0056 0D93     		str	r3, [sp, #52]
 167:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 15;
 869              		.loc 1 167 3 is_stmt 1 view .LVU216
 167:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 15;
 870              		.loc 1 167 35 is_stmt 0 view .LVU217
 871 0058 4FF48002 		mov	r2, #4194304
 872 005c 0E92     		str	r2, [sp, #56]
 168:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 144;
 873              		.loc 1 168 3 is_stmt 1 view .LVU218
 168:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 144;
 874              		.loc 1 168 30 is_stmt 0 view .LVU219
 875 005e 0F22     		movs	r2, #15
 876 0060 0F92     		str	r2, [sp, #60]
 169:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 877              		.loc 1 169 3 is_stmt 1 view .LVU220
 169:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 878              		.loc 1 169 30 is_stmt 0 view .LVU221
 879 0062 9022     		movs	r2, #144
 880 0064 1092     		str	r2, [sp, #64]
 170:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 881              		.loc 1 170 3 is_stmt 1 view .LVU222
 170:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 882              		.loc 1 170 30 is_stmt 0 view .LVU223
 883 0066 1193     		str	r3, [sp, #68]
 171:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
 884              		.loc 1 171 3 is_stmt 1 view .LVU224
 171:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
 885              		.loc 1 171 30 is_stmt 0 view .LVU225
 886 0068 1293     		str	r3, [sp, #72]
 172:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 887              		.loc 1 172 3 is_stmt 1 view .LVU226
 172:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 888              		.loc 1 172 30 is_stmt 0 view .LVU227
 889 006a 1393     		str	r3, [sp, #76]
 173:Core/Src/main.c ****   {
 890              		.loc 1 173 3 is_stmt 1 view .LVU228
 173:Core/Src/main.c ****   {
 891              		.loc 1 173 7 is_stmt 0 view .LVU229
 892 006c 07A8     		add	r0, sp, #28
 893 006e FFF7FEFF 		bl	HAL_RCC_OscConfig
 894              	.LVL76:
 173:Core/Src/main.c ****   {
 895              		.loc 1 173 6 discriminator 1 view .LVU230
 896 0072 98B9     		cbnz	r0, .L35
 180:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
ARM GAS  C:\Users\mulwe\AppData\Local\Temp\ccLTOw0I.s 			page 41


 897              		.loc 1 180 3 is_stmt 1 view .LVU231
 180:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 898              		.loc 1 180 31 is_stmt 0 view .LVU232
 899 0074 0F23     		movs	r3, #15
 900 0076 0293     		str	r3, [sp, #8]
 182:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 901              		.loc 1 182 3 is_stmt 1 view .LVU233
 182:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 902              		.loc 1 182 34 is_stmt 0 view .LVU234
 903 0078 0223     		movs	r3, #2
 904 007a 0393     		str	r3, [sp, #12]
 183:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 905              		.loc 1 183 3 is_stmt 1 view .LVU235
 183:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 906              		.loc 1 183 35 is_stmt 0 view .LVU236
 907 007c 0023     		movs	r3, #0
 908 007e 0493     		str	r3, [sp, #16]
 184:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 909              		.loc 1 184 3 is_stmt 1 view .LVU237
 184:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 910              		.loc 1 184 36 is_stmt 0 view .LVU238
 911 0080 4FF4A053 		mov	r3, #5120
 912 0084 0593     		str	r3, [sp, #20]
 185:Core/Src/main.c **** 
 913              		.loc 1 185 3 is_stmt 1 view .LVU239
 185:Core/Src/main.c **** 
 914              		.loc 1 185 36 is_stmt 0 view .LVU240
 915 0086 4FF48053 		mov	r3, #4096
 916 008a 0693     		str	r3, [sp, #24]
 187:Core/Src/main.c ****   {
 917              		.loc 1 187 3 is_stmt 1 view .LVU241
 187:Core/Src/main.c ****   {
 918              		.loc 1 187 7 is_stmt 0 view .LVU242
 919 008c 0321     		movs	r1, #3
 920 008e 02A8     		add	r0, sp, #8
 921 0090 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 922              	.LVL77:
 187:Core/Src/main.c ****   {
 923              		.loc 1 187 6 discriminator 1 view .LVU243
 924 0094 20B9     		cbnz	r0, .L36
 191:Core/Src/main.c **** 
 925              		.loc 1 191 1 view .LVU244
 926 0096 15B0     		add	sp, sp, #84
 927              	.LCFI11:
 928              		.cfi_remember_state
 929              		.cfi_def_cfa_offset 4
 930              		@ sp needed
 931 0098 5DF804FB 		ldr	pc, [sp], #4
 932              	.L35:
 933              	.LCFI12:
 934              		.cfi_restore_state
 175:Core/Src/main.c ****   }
 935              		.loc 1 175 5 is_stmt 1 view .LVU245
 936 009c FFF7FEFF 		bl	Error_Handler
 937              	.LVL78:
 938              	.L36:
 189:Core/Src/main.c ****   }
ARM GAS  C:\Users\mulwe\AppData\Local\Temp\ccLTOw0I.s 			page 42


 939              		.loc 1 189 5 view .LVU246
 940 00a0 FFF7FEFF 		bl	Error_Handler
 941              	.LVL79:
 942              	.L38:
 943              		.align	2
 944              	.L37:
 945 00a4 00380240 		.word	1073887232
 946 00a8 00700040 		.word	1073770496
 947              		.cfi_endproc
 948              	.LFE135:
 950              		.section	.text.main,"ax",%progbits
 951              		.align	1
 952              		.global	main
 953              		.syntax unified
 954              		.thumb
 955              		.thumb_func
 957              	main:
 958              	.LFB134:
  77:Core/Src/main.c **** 
 959              		.loc 1 77 1 view -0
 960              		.cfi_startproc
 961              		@ args = 0, pretend = 0, frame = 40
 962              		@ frame_needed = 0, uses_anonymous_args = 0
 963 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 964              	.LCFI13:
 965              		.cfi_def_cfa_offset 24
 966              		.cfi_offset 4, -24
 967              		.cfi_offset 5, -20
 968              		.cfi_offset 6, -16
 969              		.cfi_offset 7, -12
 970              		.cfi_offset 8, -8
 971              		.cfi_offset 14, -4
 972 0004 8AB0     		sub	sp, sp, #40
 973              	.LCFI14:
 974              		.cfi_def_cfa_offset 64
  86:Core/Src/main.c **** 
 975              		.loc 1 86 3 view .LVU248
 976 0006 FFF7FEFF 		bl	HAL_Init
 977              	.LVL80:
  93:Core/Src/main.c **** 
 978              		.loc 1 93 3 view .LVU249
 979 000a FFF7FEFF 		bl	SystemClock_Config
 980              	.LVL81:
 100:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 981              		.loc 1 100 3 view .LVU250
 982 000e FFF7FEFF 		bl	MX_GPIO_Init
 983              	.LVL82:
 984 0012 4EE0     		b	.L43
 985              	.LVL83:
 986              	.L41:
 987              	.LBB27:
 988              	.LBB28:
 989              	.LBB29:
 990              	.LBB30:
 124:Core/Src/main.c **** 	  			  uint16_t iter = max_iter_array[i];
 991              		.loc 1 124 9 view .LVU251
 124:Core/Src/main.c **** 	  			  uint16_t iter = max_iter_array[i];
ARM GAS  C:\Users\mulwe\AppData\Local\Temp\ccLTOw0I.s 			page 43


 992              		.loc 1 124 41 is_stmt 0 view .LVU252
 993 0014 0AAB     		add	r3, sp, #40
 994 0016 03EB8503 		add	r3, r3, r5, lsl #2
 995 001a 53F8144C 		ldr	r4, [r3, #-20]
 996              	.LVL84:
 125:Core/Src/main.c **** 	  			  StartTime = HAL_GetTick();
 997              		.loc 1 125 9 is_stmt 1 view .LVU253
 125:Core/Src/main.c **** 	  			  StartTime = HAL_GetTick();
 998              		.loc 1 125 39 is_stmt 0 view .LVU254
 999 001e 0AAB     		add	r3, sp, #40
 1000 0020 03EB8603 		add	r3, r3, r6, lsl #2
 1001 0024 53F8288C 		ldr	r8, [r3, #-40]
 1002              	.LVL85:
 126:Core/Src/main.c **** 	  			  CheckSum = calculate_mandelbrot_fixed_point_arithmetic(size, size , iter);
 1003              		.loc 1 126 9 is_stmt 1 view .LVU255
 126:Core/Src/main.c **** 	  			  CheckSum = calculate_mandelbrot_fixed_point_arithmetic(size, size , iter);
 1004              		.loc 1 126 21 is_stmt 0 view .LVU256
 1005 0028 FFF7FEFF 		bl	HAL_GetTick
 1006              	.LVL86:
 126:Core/Src/main.c **** 	  			  CheckSum = calculate_mandelbrot_fixed_point_arithmetic(size, size , iter);
 1007              		.loc 1 126 19 discriminator 1 view .LVU257
 1008 002c 2B4F     		ldr	r7, .L47
 1009 002e 3860     		str	r0, [r7]
 127:Core/Src/main.c **** 	  			  EndTime = HAL_GetTick();
 1010              		.loc 1 127 9 is_stmt 1 view .LVU258
 127:Core/Src/main.c **** 	  			  EndTime = HAL_GetTick();
 1011              		.loc 1 127 20 is_stmt 0 view .LVU259
 1012 0030 A0B2     		uxth	r0, r4
 1013 0032 1FFA88F2 		uxth	r2, r8
 1014 0036 0146     		mov	r1, r0
 1015 0038 FFF7FEFF 		bl	calculate_mandelbrot_fixed_point_arithmetic
 1016              	.LVL87:
 127:Core/Src/main.c **** 	  			  EndTime = HAL_GetTick();
 1017              		.loc 1 127 18 discriminator 1 view .LVU260
 1018 003c 284B     		ldr	r3, .L47+4
 1019 003e C3E90001 		strd	r0, [r3]
 128:Core/Src/main.c **** 	  			  ExecutionTime = EndTime - StartTime;
 1020              		.loc 1 128 9 is_stmt 1 view .LVU261
 128:Core/Src/main.c **** 	  			  ExecutionTime = EndTime - StartTime;
 1021              		.loc 1 128 19 is_stmt 0 view .LVU262
 1022 0042 FFF7FEFF 		bl	HAL_GetTick
 1023              	.LVL88:
 128:Core/Src/main.c **** 	  			  ExecutionTime = EndTime - StartTime;
 1024              		.loc 1 128 17 discriminator 1 view .LVU263
 1025 0046 274B     		ldr	r3, .L47+8
 1026 0048 1860     		str	r0, [r3]
 129:Core/Src/main.c **** 	  			  total_cycles  = (uint64_t)ExecutionTime * (CPU_freq / 1000);
 1027              		.loc 1 129 9 is_stmt 1 view .LVU264
 129:Core/Src/main.c **** 	  			  total_cycles  = (uint64_t)ExecutionTime * (CPU_freq / 1000);
 1028              		.loc 1 129 33 is_stmt 0 view .LVU265
 1029 004a 3B68     		ldr	r3, [r7]
 1030 004c C01A     		subs	r0, r0, r3
 129:Core/Src/main.c **** 	  			  total_cycles  = (uint64_t)ExecutionTime * (CPU_freq / 1000);
 1031              		.loc 1 129 23 view .LVU266
 1032 004e 264B     		ldr	r3, .L47+12
 1033 0050 1860     		str	r0, [r3]
 130:Core/Src/main.c **** 	  			  uint32_t pixels = image_size_array[z] * image_size_array[z];
ARM GAS  C:\Users\mulwe\AppData\Local\Temp\ccLTOw0I.s 			page 44


 1034              		.loc 1 130 9 is_stmt 1 view .LVU267
 130:Core/Src/main.c **** 	  			  uint32_t pixels = image_size_array[z] * image_size_array[z];
 1035              		.loc 1 130 49 is_stmt 0 view .LVU268
 1036 0052 4BF68033 		movw	r3, #48000
 1037 0056 00FB03F3 		mul	r3, r0, r3
 130:Core/Src/main.c **** 	  			  uint32_t pixels = image_size_array[z] * image_size_array[z];
 1038              		.loc 1 130 23 view .LVU269
 1039 005a 244A     		ldr	r2, .L47+16
 1040 005c 1360     		str	r3, [r2]
 131:Core/Src/main.c **** 	  			  Throughput = (float)pixels /((float)ExecutionTime/1000.0f);
 1041              		.loc 1 131 9 is_stmt 1 view .LVU270
 131:Core/Src/main.c **** 	  			  Throughput = (float)pixels /((float)ExecutionTime/1000.0f);
 1042              		.loc 1 131 18 is_stmt 0 view .LVU271
 1043 005e 04FB04F4 		mul	r4, r4, r4
 1044              	.LVL89:
 132:Core/Src/main.c **** 	  		  }
 1045              		.loc 1 132 9 is_stmt 1 view .LVU272
 132:Core/Src/main.c **** 	  		  }
 1046              		.loc 1 132 22 is_stmt 0 view .LVU273
 1047 0062 07EE904A 		vmov	s15, r4	@ int
 1048 0066 B8EE677A 		vcvt.f32.u32	s14, s15
 132:Core/Src/main.c **** 	  		  }
 1049              		.loc 1 132 38 view .LVU274
 1050 006a 07EE900A 		vmov	s15, r0	@ int
 1051 006e F8EE677A 		vcvt.f32.u32	s15, s15
 132:Core/Src/main.c **** 	  		  }
 1052              		.loc 1 132 58 view .LVU275
 1053 0072 9FED1F6A 		vldr.32	s12, .L47+20
 1054 0076 C7EE866A 		vdiv.f32	s13, s15, s12
 132:Core/Src/main.c **** 	  		  }
 1055              		.loc 1 132 36 view .LVU276
 1056 007a C7EE267A 		vdiv.f32	s15, s14, s13
 132:Core/Src/main.c **** 	  		  }
 1057              		.loc 1 132 20 view .LVU277
 1058 007e 1D4B     		ldr	r3, .L47+24
 1059 0080 C3ED007A 		vstr.32	s15, [r3]
 1060              	.LBE30:
 123:Core/Src/main.c **** 	  			  uint16_t size = image_size_array[z];
 1061              		.loc 1 123 37 is_stmt 1 discriminator 3 view .LVU278
 1062 0084 0135     		adds	r5, r5, #1
 1063              	.LVL90:
 1064              	.L42:
 123:Core/Src/main.c **** 	  			  uint16_t size = image_size_array[z];
 1065              		.loc 1 123 30 discriminator 1 view .LVU279
 1066 0086 042D     		cmp	r5, #4
 1067 0088 C4D9     		bls	.L41
 1068              	.LBE29:
 122:Core/Src/main.c **** 	  		  for (uint32_t z = 0; z< y ; z++){
 1069              		.loc 1 122 35 discriminator 2 view .LVU280
 1070 008a 0136     		adds	r6, r6, #1
 1071              	.LVL91:
 1072              	.L40:
 122:Core/Src/main.c **** 	  		  for (uint32_t z = 0; z< y ; z++){
 1073              		.loc 1 122 29 discriminator 1 view .LVU281
 1074 008c 042E     		cmp	r6, #4
 1075 008e 01D8     		bhi	.L46
 1076              	.LBB31:
ARM GAS  C:\Users\mulwe\AppData\Local\Temp\ccLTOw0I.s 			page 45


 123:Core/Src/main.c **** 	  			  uint16_t size = image_size_array[z];
 1077              		.loc 1 123 22 is_stmt 0 view .LVU282
 1078 0090 0025     		movs	r5, #0
 1079 0092 F8E7     		b	.L42
 1080              	.L46:
 1081              	.LBE31:
 1082              	.LBE28:
 137:Core/Src/main.c **** 
 1083              		.loc 1 137 5 is_stmt 1 view .LVU283
 1084 0094 184C     		ldr	r4, .L47+28
 1085 0096 0122     		movs	r2, #1
 1086 0098 0221     		movs	r1, #2
 1087 009a 2046     		mov	r0, r4
 1088 009c FFF7FEFF 		bl	HAL_GPIO_WritePin
 1089              	.LVL92:
 140:Core/Src/main.c **** 	  //TODO: Turn OFF LEDs
 1090              		.loc 1 140 5 view .LVU284
 1091 00a0 4FF4FA60 		mov	r0, #2000
 1092 00a4 FFF7FEFF 		bl	HAL_Delay
 1093              	.LVL93:
 142:Core/Src/main.c ****   }
 1094              		.loc 1 142 5 view .LVU285
 1095 00a8 0022     		movs	r2, #0
 1096 00aa 0321     		movs	r1, #3
 1097 00ac 2046     		mov	r0, r4
 1098 00ae FFF7FEFF 		bl	HAL_GPIO_WritePin
 1099              	.LVL94:
 1100              	.LBE27:
 107:Core/Src/main.c ****   {
 1101              		.loc 1 107 9 view .LVU286
 1102              	.L43:
 107:Core/Src/main.c ****   {
 1103              		.loc 1 107 3 view .LVU287
 1104              	.LBB33:
 113:Core/Src/main.c **** 
 1105              		.loc 1 113 4 view .LVU288
 1106 00b2 0122     		movs	r2, #1
 1107 00b4 1146     		mov	r1, r2
 1108 00b6 1048     		ldr	r0, .L47+28
 1109 00b8 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1110              	.LVL95:
 116:Core/Src/main.c **** 	  	  uint32_t image_size_array[] = {128,160,192,224,256};
 1111              		.loc 1 116 4 view .LVU289
 116:Core/Src/main.c **** 	  	  uint32_t image_size_array[] = {128,160,192,224,256};
 1112              		.loc 1 116 13 is_stmt 0 view .LVU290
 1113 00bc 0F4C     		ldr	r4, .L47+32
 1114 00be 6D46     		mov	r5, sp
 1115 00c0 2646     		mov	r6, r4
 1116 00c2 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 1117 00c4 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 1118 00c6 3368     		ldr	r3, [r6]
 1119 00c8 2B60     		str	r3, [r5]
 117:Core/Src/main.c **** 
 1120              		.loc 1 117 7 is_stmt 1 view .LVU291
 117:Core/Src/main.c **** 
 1121              		.loc 1 117 16 is_stmt 0 view .LVU292
 1122 00ca 05AD     		add	r5, sp, #20
ARM GAS  C:\Users\mulwe\AppData\Local\Temp\ccLTOw0I.s 			page 46


 1123 00cc 1434     		adds	r4, r4, #20
 1124 00ce 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 1125 00d0 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 1126 00d2 2368     		ldr	r3, [r4]
 1127 00d4 2B60     		str	r3, [r5]
 119:Core/Src/main.c **** 	  	  uint16_t y = sizeof(image_size_array)/sizeof(image_size_array[0]);
 1128              		.loc 1 119 7 is_stmt 1 view .LVU293
 1129              	.LVL96:
 120:Core/Src/main.c **** 
 1130              		.loc 1 120 7 view .LVU294
 122:Core/Src/main.c **** 	  		  for (uint32_t z = 0; z< y ; z++){
 1131              		.loc 1 122 7 view .LVU295
 1132              	.LBB32:
 122:Core/Src/main.c **** 	  		  for (uint32_t z = 0; z< y ; z++){
 1133              		.loc 1 122 12 view .LVU296
 122:Core/Src/main.c **** 	  		  for (uint32_t z = 0; z< y ; z++){
 1134              		.loc 1 122 21 is_stmt 0 view .LVU297
 1135 00d6 0026     		movs	r6, #0
 122:Core/Src/main.c **** 	  		  for (uint32_t z = 0; z< y ; z++){
 1136              		.loc 1 122 7 view .LVU298
 1137 00d8 D8E7     		b	.L40
 1138              	.L48:
 1139 00da 00BF     		.align	2
 1140              	.L47:
 1141 00dc 00000000 		.word	StartTime
 1142 00e0 00000000 		.word	CheckSum
 1143 00e4 00000000 		.word	EndTime
 1144 00e8 00000000 		.word	ExecutionTime
 1145 00ec 00000000 		.word	total_cycles
 1146 00f0 00007A44 		.word	1148846080
 1147 00f4 00000000 		.word	Throughput
 1148 00f8 00040240 		.word	1073873920
 1149 00fc 00000000 		.word	.LANCHOR0
 1150              	.LBE32:
 1151              	.LBE33:
 1152              		.cfi_endproc
 1153              	.LFE134:
 1155              		.section	.bss.Throughput,"aw",%nobits
 1156              		.align	2
 1159              	Throughput:
 1160 0000 00000000 		.space	4
 1161              		.section	.bss.ExecutionTime,"aw",%nobits
 1162              		.align	2
 1165              	ExecutionTime:
 1166 0000 00000000 		.space	4
 1167              		.section	.bss.total_cycles,"aw",%nobits
 1168              		.align	2
 1171              	total_cycles:
 1172 0000 00000000 		.space	4
 1173              		.section	.bss.EndTime,"aw",%nobits
 1174              		.align	2
 1177              	EndTime:
 1178 0000 00000000 		.space	4
 1179              		.section	.bss.StartTime,"aw",%nobits
 1180              		.align	2
 1183              	StartTime:
 1184 0000 00000000 		.space	4
ARM GAS  C:\Users\mulwe\AppData\Local\Temp\ccLTOw0I.s 			page 47


 1185              		.section	.bss.CheckSum,"aw",%nobits
 1186              		.align	3
 1189              	CheckSum:
 1190 0000 00000000 		.space	8
 1190      00000000 
 1191              		.section	.rodata
 1192              		.align	2
 1193              		.set	.LANCHOR0,. + 0
 1194              	.LC0:
 1195 0000 64000000 		.word	100
 1196 0004 FA000000 		.word	250
 1197 0008 F4010000 		.word	500
 1198 000c EE020000 		.word	750
 1199 0010 E8030000 		.word	1000
 1200              	.LC1:
 1201 0014 80000000 		.word	128
 1202 0018 A0000000 		.word	160
 1203 001c C0000000 		.word	192
 1204 0020 E0000000 		.word	224
 1205 0024 00010000 		.word	256
 1206              		.text
 1207              	.Letext0:
 1208              		.file 3 "C:\\ST\\STM32CubeIDE_1.19.0\\STM32CubeIDE\\plugins\\com.st.stm32cube.ide.mcu.externaltool
 1209              		.file 4 "C:\\ST\\STM32CubeIDE_1.19.0\\STM32CubeIDE\\plugins\\com.st.stm32cube.ide.mcu.externaltool
 1210              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f446xx.h"
 1211              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 1212              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 1213              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 1214              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 1215              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 1216              		.file 11 "<built-in>"
ARM GAS  C:\Users\mulwe\AppData\Local\Temp\ccLTOw0I.s 			page 48


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\mulwe\AppData\Local\Temp\ccLTOw0I.s:21     .text.MX_GPIO_Init:00000000 $t
C:\Users\mulwe\AppData\Local\Temp\ccLTOw0I.s:26     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\mulwe\AppData\Local\Temp\ccLTOw0I.s:133    .text.MX_GPIO_Init:00000074 $d
C:\Users\mulwe\AppData\Local\Temp\ccLTOw0I.s:140    .text.calculate_mandelbrot_fixed_point_arithmetic:00000000 $t
C:\Users\mulwe\AppData\Local\Temp\ccLTOw0I.s:146    .text.calculate_mandelbrot_fixed_point_arithmetic:00000000 calculate_mandelbrot_fixed_point_arithmetic
C:\Users\mulwe\AppData\Local\Temp\ccLTOw0I.s:454    .text.calculate_mandelbrot_double:00000000 $t
C:\Users\mulwe\AppData\Local\Temp\ccLTOw0I.s:460    .text.calculate_mandelbrot_double:00000000 calculate_mandelbrot_double
C:\Users\mulwe\AppData\Local\Temp\ccLTOw0I.s:742    .text.calculate_mandelbrot_double:00000150 $d
C:\Users\mulwe\AppData\Local\Temp\ccLTOw0I.s:750    .text.Error_Handler:00000000 $t
C:\Users\mulwe\AppData\Local\Temp\ccLTOw0I.s:756    .text.Error_Handler:00000000 Error_Handler
C:\Users\mulwe\AppData\Local\Temp\ccLTOw0I.s:788    .text.SystemClock_Config:00000000 $t
C:\Users\mulwe\AppData\Local\Temp\ccLTOw0I.s:794    .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\mulwe\AppData\Local\Temp\ccLTOw0I.s:945    .text.SystemClock_Config:000000a4 $d
C:\Users\mulwe\AppData\Local\Temp\ccLTOw0I.s:951    .text.main:00000000 $t
C:\Users\mulwe\AppData\Local\Temp\ccLTOw0I.s:957    .text.main:00000000 main
C:\Users\mulwe\AppData\Local\Temp\ccLTOw0I.s:1141   .text.main:000000dc $d
C:\Users\mulwe\AppData\Local\Temp\ccLTOw0I.s:1183   .bss.StartTime:00000000 StartTime
C:\Users\mulwe\AppData\Local\Temp\ccLTOw0I.s:1189   .bss.CheckSum:00000000 CheckSum
C:\Users\mulwe\AppData\Local\Temp\ccLTOw0I.s:1177   .bss.EndTime:00000000 EndTime
C:\Users\mulwe\AppData\Local\Temp\ccLTOw0I.s:1165   .bss.ExecutionTime:00000000 ExecutionTime
C:\Users\mulwe\AppData\Local\Temp\ccLTOw0I.s:1171   .bss.total_cycles:00000000 total_cycles
C:\Users\mulwe\AppData\Local\Temp\ccLTOw0I.s:1159   .bss.Throughput:00000000 Throughput
C:\Users\mulwe\AppData\Local\Temp\ccLTOw0I.s:1156   .bss.Throughput:00000000 $d
C:\Users\mulwe\AppData\Local\Temp\ccLTOw0I.s:1162   .bss.ExecutionTime:00000000 $d
C:\Users\mulwe\AppData\Local\Temp\ccLTOw0I.s:1168   .bss.total_cycles:00000000 $d
C:\Users\mulwe\AppData\Local\Temp\ccLTOw0I.s:1174   .bss.EndTime:00000000 $d
C:\Users\mulwe\AppData\Local\Temp\ccLTOw0I.s:1180   .bss.StartTime:00000000 $d
C:\Users\mulwe\AppData\Local\Temp\ccLTOw0I.s:1186   .bss.CheckSum:00000000 $d
C:\Users\mulwe\AppData\Local\Temp\ccLTOw0I.s:1192   .rodata:00000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
__aeabi_ldivmod
__aeabi_i2d
__aeabi_ddiv
__aeabi_dmul
__aeabi_dsub
__aeabi_dadd
__aeabi_dcmple
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
HAL_GetTick
HAL_Delay
