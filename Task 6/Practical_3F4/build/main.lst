ARM GAS  C:\Users\mulwe\AppData\Local\Temp\cciz2f0Q.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 4
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/main.c"
  20              		.section	.text.SystemClock_Config,"ax",%progbits
  21              		.align	1
  22              		.global	SystemClock_Config
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	SystemClock_Config:
  28              	.LFB138:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2025 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** #include "stdio.h"
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** 
  25:Core/Src/main.c **** /* USER CODE END Includes */
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  28:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  29:Core/Src/main.c **** #define Max_iter 100
  30:Core/Src/main.c **** #define CPU_freq 48000000
ARM GAS  C:\Users\mulwe\AppData\Local\Temp\cciz2f0Q.s 			page 2


  31:Core/Src/main.c **** /* USER CODE END PTD */
  32:Core/Src/main.c **** 
  33:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  34:Core/Src/main.c **** /* USER CODE BEGIN PD */
  35:Core/Src/main.c **** 
  36:Core/Src/main.c **** /* USER CODE END PD */
  37:Core/Src/main.c **** 
  38:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  39:Core/Src/main.c **** /* USER CODE BEGIN PM */
  40:Core/Src/main.c **** 
  41:Core/Src/main.c **** /* USER CODE END PM */
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** /* USER CODE BEGIN PV */
  46:Core/Src/main.c **** //TODO: Define variables you think you might need
  47:Core/Src/main.c **** // - Performance timing variables (e.g execution time, throughput, pixels per second, clock cycles)
  48:Core/Src/main.c **** volatile uint64_t CheckSum;
  49:Core/Src/main.c **** uint32_t StartTime;
  50:Core/Src/main.c **** static uint32_t EndTime;
  51:Core/Src/main.c **** uint32_t total_cycles;
  52:Core/Src/main.c **** volatile uint32_t ExecutionTime;
  53:Core/Src/main.c **** volatile float Throughput;
  54:Core/Src/main.c **** uint32_t image_Width[] = {128, 160, 192, 224, 256};
  55:Core/Src/main.c **** uint32_t image_Height[] = {128, 160, 192, 224, 256};
  56:Core/Src/main.c **** /* USER CODE END PV */
  57:Core/Src/main.c **** 
  58:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  59:Core/Src/main.c **** void SystemClock_Config(void);
  60:Core/Src/main.c **** static void MX_GPIO_Init(void);
  61:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  62:Core/Src/main.c **** //TODO: Define any function prototypes you might need such as the calculate Mandelbrot function amo
  63:Core/Src/main.c **** uint64_t calculate_mandelbrot_fixed_point_arithmetic(int width, int height, int max_iterations);
  64:Core/Src/main.c **** uint64_t calculate_mandelbrot_double(int width, int height, int max_iterations);
  65:Core/Src/main.c **** /* USER CODE END PFP */
  66:Core/Src/main.c **** 
  67:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  68:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  69:Core/Src/main.c **** 
  70:Core/Src/main.c **** /* USER CODE END 0 */
  71:Core/Src/main.c **** 
  72:Core/Src/main.c **** /**
  73:Core/Src/main.c ****   * @brief  The application entry point.
  74:Core/Src/main.c ****   * @retval int
  75:Core/Src/main.c ****   */
  76:Core/Src/main.c **** int main(void)
  77:Core/Src/main.c **** {
  78:Core/Src/main.c **** 	StartTime = HAL_GetTick();
  79:Core/Src/main.c **** 
  80:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  81:Core/Src/main.c **** 
  82:Core/Src/main.c ****   /* USER CODE END 1 */
  83:Core/Src/main.c **** 
  84:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  85:Core/Src/main.c **** 
  86:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  87:Core/Src/main.c ****   HAL_Init();
ARM GAS  C:\Users\mulwe\AppData\Local\Temp\cciz2f0Q.s 			page 3


  88:Core/Src/main.c **** 
  89:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  90:Core/Src/main.c **** 
  91:Core/Src/main.c ****   /* USER CODE END Init */
  92:Core/Src/main.c **** 
  93:Core/Src/main.c ****   /* Configure the system clock */
  94:Core/Src/main.c ****   SystemClock_Config();
  95:Core/Src/main.c **** 
  96:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  97:Core/Src/main.c **** 
  98:Core/Src/main.c ****   /* USER CODE END SysInit */
  99:Core/Src/main.c **** 
 100:Core/Src/main.c ****   /* Initialize all configured peripherals */
 101:Core/Src/main.c ****   MX_GPIO_Init();
 102:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 103:Core/Src/main.c ****   /* USER CODE END 2 */
 104:Core/Src/main.c **** 
 105:Core/Src/main.c ****   /* Infinite loop */
 106:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 107:Core/Src/main.c ****   while (1)
 108:Core/Src/main.c ****   {
 109:Core/Src/main.c ****     /* USER CODE END WHILE */
 110:Core/Src/main.c **** 
 111:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 112:Core/Src/main.c **** 	  //TODO: Visual indicator: Turn on LED0 to signal processing start
 113:Core/Src/main.c **** 	  HAL_GPIO_WritePin(GPIOB,1, GPIO_PIN_SET);
 114:Core/Src/main.c **** 
 115:Core/Src/main.c **** 	  //TODO: Benchmark and Profile Performance
 116:Core/Src/main.c **** 	  uint16_t x = sizeof(image_Width)/sizeof(image_Width[0]);
 117:Core/Src/main.c **** 
 118:Core/Src/main.c **** 	  //for (uint32_t i = 0; i< x ;i++){
 119:Core/Src/main.c **** 		  volatile uint16_t width = 256;                                 //image_Width[i];
 120:Core/Src/main.c **** 		  volatile uint16_t height = 256;                                //image_Height[i];
 121:Core/Src/main.c **** 		  //StartTime = HAL_GetTick();
 122:Core/Src/main.c **** 		  CheckSum = calculate_mandelbrot_fixed_point_arithmetic(width, height , Max_iter);
 123:Core/Src/main.c **** 		  //EndTime = HAL_GetTick();
 124:Core/Src/main.c **** 		  //ExecutionTime = EndTime - StartTime;
 125:Core/Src/main.c **** 		  //total_cycles  = (uint64_t)ExecutionTime * (CPU_freq / 1000);
 126:Core/Src/main.c **** 		  //uint32_t pixels = image_Width[i]* image_Height[i];
 127:Core/Src/main.c **** 		  //Throughput = (float)pixels /((float)ExecutionTime/1000.0f);
 128:Core/Src/main.c **** 		  //TODO: Visual indicator: Turn on LED1 to signal processing start
 129:Core/Src/main.c **** 			HAL_GPIO_WritePin(GPIOB,2, GPIO_PIN_SET);
 130:Core/Src/main.c **** 
 131:Core/Src/main.c **** 		  //TODO: Keep the LEDs ON for 2s
 132:Core/Src/main.c **** 			HAL_Delay(2000);
 133:Core/Src/main.c **** 		  //TODO: Turn OFF LEDs
 134:Core/Src/main.c **** 			HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0 | GPIO_PIN_1, GPIO_PIN_RESET);
 135:Core/Src/main.c **** 			EndTime = HAL_GetTick();
 136:Core/Src/main.c **** 			ExecutionTime = EndTime - StartTime;
 137:Core/Src/main.c **** 	  //}
 138:Core/Src/main.c ****   }
 139:Core/Src/main.c ****   /* USER CODE END 3 */
 140:Core/Src/main.c **** }
 141:Core/Src/main.c **** 
 142:Core/Src/main.c **** /**
 143:Core/Src/main.c ****   * @brief System Clock Configuration
 144:Core/Src/main.c ****   * @retval None
ARM GAS  C:\Users\mulwe\AppData\Local\Temp\cciz2f0Q.s 			page 4


 145:Core/Src/main.c ****   */
 146:Core/Src/main.c **** void SystemClock_Config(void)
 147:Core/Src/main.c **** {
  29              		.loc 1 147 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 80
  32              		@ frame_needed = 0, uses_anonymous_args = 0
 148:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
  33              		.loc 1 148 3 view .LVU1
 147:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
  34              		.loc 1 147 1 is_stmt 0 view .LVU2
  35 0000 30B5     		push	{r4, r5, lr}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 12
  38              		.cfi_offset 4, -12
  39              		.cfi_offset 5, -8
  40              		.cfi_offset 14, -4
  41 0002 95B0     		sub	sp, sp, #84
  42              	.LCFI1:
  43              		.cfi_def_cfa_offset 96
  44              		.loc 1 148 22 view .LVU3
  45 0004 1022     		movs	r2, #16
  46 0006 0021     		movs	r1, #0
  47 0008 09A8     		add	r0, sp, #36
  48 000a FFF7FEFF 		bl	memset
  49              	.LVL0:
 149:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
  50              		.loc 1 149 3 is_stmt 1 view .LVU4
  51              		.loc 1 149 22 is_stmt 0 view .LVU5
  52 000e 1422     		movs	r2, #20
  53 0010 0021     		movs	r1, #0
  54 0012 02A8     		add	r0, sp, #8
  55 0014 FFF7FEFF 		bl	memset
  56              	.LVL1:
 150:Core/Src/main.c **** 
 151:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 152:Core/Src/main.c ****   */
 153:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
  57              		.loc 1 153 3 is_stmt 1 view .LVU6
  58              	.LBB14:
  59              		.loc 1 153 3 view .LVU7
  60 0018 204B     		ldr	r3, .L6
  61 001a 0021     		movs	r1, #0
  62 001c 0091     		str	r1, [sp]
  63              		.loc 1 153 3 view .LVU8
  64 001e 1A6C     		ldr	r2, [r3, #64]
  65 0020 42F08052 		orr	r2, r2, #268435456
  66 0024 1A64     		str	r2, [r3, #64]
  67              		.loc 1 153 3 view .LVU9
  68 0026 1B6C     		ldr	r3, [r3, #64]
  69              	.LBE14:
  70              	.LBB15:
 154:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
  71              		.loc 1 154 3 is_stmt 0 view .LVU10
  72 0028 1D4A     		ldr	r2, .L6+4
  73              	.LBE15:
  74              	.LBB16:
ARM GAS  C:\Users\mulwe\AppData\Local\Temp\cciz2f0Q.s 			page 5


 153:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
  75              		.loc 1 153 3 view .LVU11
  76 002a 03F08053 		and	r3, r3, #268435456
  77 002e 0093     		str	r3, [sp]
 153:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
  78              		.loc 1 153 3 is_stmt 1 view .LVU12
  79 0030 009B     		ldr	r3, [sp]
  80              	.LBE16:
 153:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
  81              		.loc 1 153 3 view .LVU13
  82              		.loc 1 154 3 view .LVU14
  83              	.LBB17:
  84              		.loc 1 154 3 view .LVU15
  85 0032 0191     		str	r1, [sp, #4]
  86              		.loc 1 154 3 view .LVU16
  87 0034 1368     		ldr	r3, [r2]
  88 0036 23F44043 		bic	r3, r3, #49152
  89 003a 43F48043 		orr	r3, r3, #16384
  90 003e 1360     		str	r3, [r2]
  91              		.loc 1 154 3 view .LVU17
  92 0040 1368     		ldr	r3, [r2]
  93 0042 03F44043 		and	r3, r3, #49152
  94 0046 0193     		str	r3, [sp, #4]
  95              		.loc 1 154 3 view .LVU18
  96 0048 019B     		ldr	r3, [sp, #4]
  97              	.LBE17:
  98              		.loc 1 154 3 view .LVU19
 155:Core/Src/main.c **** 
 156:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 157:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 158:Core/Src/main.c ****   */
 159:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
  99              		.loc 1 159 3 view .LVU20
 160:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 100              		.loc 1 160 30 is_stmt 0 view .LVU21
 101 004a 0121     		movs	r1, #1
 102 004c 4FF48033 		mov	r3, #65536
 161:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 162:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 103              		.loc 1 162 35 view .LVU22
 104 0050 0224     		movs	r4, #2
 160:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 105              		.loc 1 160 30 view .LVU23
 106 0052 CDE90713 		strd	r1, r3, [sp, #28]
 161:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 107              		.loc 1 161 3 is_stmt 1 view .LVU24
 108              		.loc 1 162 35 is_stmt 0 view .LVU25
 109 0056 4FF48003 		mov	r3, #4194304
 110 005a CDE90D43 		strd	r4, r3, [sp, #52]
 163:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 15;
 111              		.loc 1 163 3 is_stmt 1 view .LVU26
 164:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 144;
 112              		.loc 1 164 30 is_stmt 0 view .LVU27
 113 005e 0F25     		movs	r5, #15
 114 0060 9023     		movs	r3, #144
 165:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 166:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 2;
ARM GAS  C:\Users\mulwe\AppData\Local\Temp\cciz2f0Q.s 			page 6


 167:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
 168:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 115              		.loc 1 168 7 view .LVU28
 116 0062 07A8     		add	r0, sp, #28
 164:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 144;
 117              		.loc 1 164 30 view .LVU29
 118 0064 CDE90F53 		strd	r5, r3, [sp, #60]
 165:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 119              		.loc 1 165 3 is_stmt 1 view .LVU30
 166:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
 120              		.loc 1 166 30 is_stmt 0 view .LVU31
 121 0068 CDE91144 		strd	r4, r4, [sp, #68]
 167:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 122              		.loc 1 167 3 is_stmt 1 view .LVU32
 167:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 123              		.loc 1 167 30 is_stmt 0 view .LVU33
 124 006c 1394     		str	r4, [sp, #76]
 125              		.loc 1 168 3 is_stmt 1 view .LVU34
 126              		.loc 1 168 7 is_stmt 0 view .LVU35
 127 006e FFF7FEFF 		bl	HAL_RCC_OscConfig
 128              	.LVL2:
 129              		.loc 1 168 6 discriminator 1 view .LVU36
 130 0072 08B1     		cbz	r0, .L2
 169:Core/Src/main.c ****   {
 170:Core/Src/main.c ****     Error_Handler();
 131              		.loc 1 170 5 is_stmt 1 view .LVU37
 132              	.LBB18:
 133              	.LBI18:
 171:Core/Src/main.c ****   }
 172:Core/Src/main.c **** 
 173:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 174:Core/Src/main.c ****   */
 175:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 176:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 177:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 178:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 179:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 180:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 181:Core/Src/main.c **** 
 182:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_3) != HAL_OK)
 183:Core/Src/main.c ****   {
 184:Core/Src/main.c ****     Error_Handler();
 185:Core/Src/main.c ****   }
 186:Core/Src/main.c **** }
 187:Core/Src/main.c **** 
 188:Core/Src/main.c **** /**
 189:Core/Src/main.c ****   * @brief GPIO Initialization Function
 190:Core/Src/main.c ****   * @param None
 191:Core/Src/main.c ****   * @retval None
 192:Core/Src/main.c ****   */
 193:Core/Src/main.c **** static void MX_GPIO_Init(void)
 194:Core/Src/main.c **** {
 195:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 196:Core/Src/main.c ****   /* USER CODE BEGIN MX_GPIO_Init_1 */
 197:Core/Src/main.c **** 
 198:Core/Src/main.c ****   /* USER CODE END MX_GPIO_Init_1 */
 199:Core/Src/main.c **** 
ARM GAS  C:\Users\mulwe\AppData\Local\Temp\cciz2f0Q.s 			page 7


 200:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 201:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
 202:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
 203:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 204:Core/Src/main.c **** 
 205:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 206:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 207:Core/Src/main.c ****                           |GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7, GPIO_PIN_RESET);
 208:Core/Src/main.c **** 
 209:Core/Src/main.c ****   /*Configure GPIO pins : PB0 PB1 PB2 PB3
 210:Core/Src/main.c ****                            PB4 PB5 PB6 PB7 */
 211:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 212:Core/Src/main.c ****                           |GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7;
 213:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 214:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 215:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 216:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 217:Core/Src/main.c **** 
 218:Core/Src/main.c ****   /* USER CODE BEGIN MX_GPIO_Init_2 */
 219:Core/Src/main.c **** 
 220:Core/Src/main.c ****   /* USER CODE END MX_GPIO_Init_2 */
 221:Core/Src/main.c **** }
 222:Core/Src/main.c **** 
 223:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 224:Core/Src/main.c **** //TODO: Function signatures you defined previously , implement them here
 225:Core/Src/main.c **** uint64_t calculate_mandelbrot_fixed_point_arithmetic(int width, int height, int max_iterations){
 226:Core/Src/main.c ****   uint64_t mandelbrot_sum = 0;
 227:Core/Src/main.c **** 	#define S (1<<28)
 228:Core/Src/main.c ****     //TODO: Complete the function implementation
 229:Core/Src/main.c ****   	  for (int y = 0; y < height; y++) {
 230:Core/Src/main.c ****           for (int x = 0; x < width; x++) {
 231:Core/Src/main.c **** 
 232:Core/Src/main.c ****         	  int64_t x_scaled = ((int64_t)x * S + width / 2) / width;
 233:Core/Src/main.c ****         	              int64_t y_scaled = ((int64_t)y * S + height / 2) / height;
 234:Core/Src/main.c **** 
 235:Core/Src/main.c ****         	              int64_t x0 = ((x_scaled * (int64_t)(3.5 * S) + (S >> 1)) >> 28) - (int64_t)(
 236:Core/Src/main.c ****         	              int64_t y0 = ((y_scaled * (int64_t)(2.0 * S) + (S >> 1)) >> 28) - (1 * S);
 237:Core/Src/main.c **** 
 238:Core/Src/main.c ****         	              int64_t xi = 0;
 239:Core/Src/main.c ****         	              int64_t yi = 0;
 240:Core/Src/main.c ****         	              int iteration = 0;
 241:Core/Src/main.c **** 
 242:Core/Src/main.c ****         	              while (iteration < max_iterations &&
 243:Core/Src/main.c ****         	                     ((xi * xi + yi * yi) <= (4LL * S * S))) {
 244:Core/Src/main.c **** 
 245:Core/Src/main.c **** 
 246:Core/Src/main.c ****         	                  int64_t x_sq = (xi * xi + (S >> 1)) >> 28;
 247:Core/Src/main.c ****         	                  int64_t y_sq = (yi * yi + (S >> 1)) >> 28;
 248:Core/Src/main.c ****         	                  int64_t xy   = (xi * yi + (S >> 1)) >> 28;
 249:Core/Src/main.c **** 
 250:Core/Src/main.c ****         	                  int64_t temp_xi = x_sq - y_sq + x0;
 251:Core/Src/main.c ****         	                  yi = (xy << 1) + y0;
 252:Core/Src/main.c ****         	                  xi = temp_xi;
 253:Core/Src/main.c **** 
 254:Core/Src/main.c ****         	                  iteration++;
 255:Core/Src/main.c ****         	              }
 256:Core/Src/main.c **** 
ARM GAS  C:\Users\mulwe\AppData\Local\Temp\cciz2f0Q.s 			page 8


 257:Core/Src/main.c ****         	              mandelbrot_sum += iteration;
 258:Core/Src/main.c ****         	          }
 259:Core/Src/main.c ****         	      }
 260:Core/Src/main.c **** 
 261:Core/Src/main.c ****         	      return mandelbrot_sum;
 262:Core/Src/main.c **** 
 263:Core/Src/main.c **** }
 264:Core/Src/main.c **** 
 265:Core/Src/main.c **** //Mandelbroat using variable type double
 266:Core/Src/main.c **** uint64_t calculate_mandelbrot_double(int width, int height, int max_iterations) {
 267:Core/Src/main.c ****     uint64_t mandelbrot_sum = 0;
 268:Core/Src/main.c **** 
 269:Core/Src/main.c ****     double inv_width  = 3.5 / width;
 270:Core/Src/main.c ****     double inv_height = 2.0 / height;
 271:Core/Src/main.c **** 
 272:Core/Src/main.c ****     for (int y = 0; y < height; y++) {
 273:Core/Src/main.c ****         double y0 = y * inv_height - 1.0;
 274:Core/Src/main.c **** 
 275:Core/Src/main.c ****         for (int x = 0; x < width; x++) {
 276:Core/Src/main.c ****             double x0 = x * inv_width - 2.5;
 277:Core/Src/main.c **** 
 278:Core/Src/main.c ****             double xi = 0.0, yi = 0.0;
 279:Core/Src/main.c ****             int iteration = 0;
 280:Core/Src/main.c **** 
 281:Core/Src/main.c ****             while (iteration < max_iterations && (xi*xi + yi*yi) <= 4.0) {
 282:Core/Src/main.c ****                 double temp = xi*xi - yi*yi + x0;
 283:Core/Src/main.c ****                 yi = 2.0 * xi * yi + y0;
 284:Core/Src/main.c ****                 xi = temp;
 285:Core/Src/main.c ****                 iteration++;
 286:Core/Src/main.c ****             }
 287:Core/Src/main.c **** 
 288:Core/Src/main.c ****             mandelbrot_sum += iteration;
 289:Core/Src/main.c ****         }
 290:Core/Src/main.c ****     }
 291:Core/Src/main.c ****     return mandelbrot_sum;
 292:Core/Src/main.c **** }
 293:Core/Src/main.c **** /* USER CODE END 4 */
 294:Core/Src/main.c **** 
 295:Core/Src/main.c **** /**
 296:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 297:Core/Src/main.c ****   * @retval None
 298:Core/Src/main.c ****   */
 299:Core/Src/main.c **** void Error_Handler(void)
 134              		.loc 1 299 6 view .LVU38
 300:Core/Src/main.c **** {
 301:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 302:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 303:Core/Src/main.c ****   __disable_irq();
 135              		.loc 1 303 3 view .LVU39
 136              	.LBB19:
 137              	.LBI19:
 138              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.4.1
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     27. May 2021
ARM GAS  C:\Users\mulwe\AppData\Local\Temp\cciz2f0Q.s 			page 9


   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2021 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
ARM GAS  C:\Users\mulwe\AppData\Local\Temp\cciz2f0Q.s 			page 10


  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\mulwe\AppData\Local\Temp\cciz2f0Q.s 			page 11


 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\mulwe\AppData\Local\Temp\cciz2f0Q.s 			page 12


 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute__((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_SEAL
 187:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_SEAL              __StackSeal
 188:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 189:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_SIZE
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_SIZE      8U
 192:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 193:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 194:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_VALUE
 195:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_VALUE     0xFEF5EDA5FEF5EDA5ULL
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 198:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_STACKSEAL_S (uint32_t* stackTop) {
 200:Drivers/CMSIS/Include/cmsis_gcc.h ****   *((uint64_t *)stackTop) = __TZ_STACK_SEAL_VALUE;
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 203:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 204:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 205:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 206:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 207:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 208:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 209:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 210:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 212:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 213:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 214:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 215:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 216:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 217:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 218:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 220:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 221:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 222:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 223:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 224:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 225:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 226:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 227:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 228:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 229:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 230:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 233:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  C:\Users\mulwe\AppData\Local\Temp\cciz2f0Q.s 			page 13


 234:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi":::"memory")
 235:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 239:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 240:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 241:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe":::"memory")
 243:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 244:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 245:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 247:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 248:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 249:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 250:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 251:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 252:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 253:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 254:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 255:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 256:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 257:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 258:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 259:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 260:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 261:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 262:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 264:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 265:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 266:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 267:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 268:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 269:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 270:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 271:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 272:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 273:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 274:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 275:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 277:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 278:Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 279:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 281:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 282:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 283:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 284:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 285:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 286:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 287:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 288:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 289:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 290:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
ARM GAS  C:\Users\mulwe\AppData\Local\Temp\cciz2f0Q.s 			page 14


 291:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 295:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 296:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 298:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 300:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 302:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 303:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 305:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 306:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 307:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 308:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 309:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 310:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 311:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 312:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 314:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 315:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 316:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 317:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 318:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 319:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 320:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 321:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 322:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 323:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 324:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 325:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 326:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
 327:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 328:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 329:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
 330:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 331:Drivers/CMSIS/Include/cmsis_gcc.h ****   int16_t result;
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 334:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 338:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 339:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
 342:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
 343:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
 344:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 345:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 346:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  C:\Users\mulwe\AppData\Local\Temp\cciz2f0Q.s 			page 15


 348:Drivers/CMSIS/Include/cmsis_gcc.h ****   op2 %= 32U;
 349:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (op2 == 0U)
 350:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 351:Drivers/CMSIS/Include/cmsis_gcc.h ****     return op1;
 352:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
 354:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 355:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 358:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
 359:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
 360:Drivers/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
 361:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
 362:Drivers/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
 363:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 364:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
 365:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 366:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 367:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 368:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
 369:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
 370:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 371:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 375:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 378:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM ("rbit %0, %1" : "=r" (result) : "r" (value) );
 381:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 382:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 384:Drivers/CMSIS/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
 385:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****     result <<= 1U;
 388:Drivers/CMSIS/Include/cmsis_gcc.h ****     result |= value & 1U;
 389:Drivers/CMSIS/Include/cmsis_gcc.h ****     s--;
 390:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 391:Drivers/CMSIS/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
 392:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 393:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 394:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 395:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 396:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 397:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 398:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Count leading zeros
 399:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Counts the number of leading zeros of a data value.
 400:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to count the leading zeros
 401:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             number of leading zeros in value
 402:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __CLZ(uint32_t value)
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  C:\Users\mulwe\AppData\Local\Temp\cciz2f0Q.s 			page 16


 405:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Even though __builtin_clz produces a CLZ instruction on ARM, formally
 406:Drivers/CMSIS/Include/cmsis_gcc.h ****      __builtin_clz(0) is undefined behaviour, so handle this case specially.
 407:Drivers/CMSIS/Include/cmsis_gcc.h ****      This guarantees ARM-compatible results if happening to compile on a non-ARM
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****      target, and ensures the compiler doesn't decide to activate any
 409:Drivers/CMSIS/Include/cmsis_gcc.h ****      optimisations using the logic "value was passed to __builtin_clz, so it
 410:Drivers/CMSIS/Include/cmsis_gcc.h ****      is non-zero".
 411:Drivers/CMSIS/Include/cmsis_gcc.h ****      ARM GCC 7.3 and possibly earlier will optimise this test away, leaving a
 412:Drivers/CMSIS/Include/cmsis_gcc.h ****      single CLZ instruction.
 413:Drivers/CMSIS/Include/cmsis_gcc.h ****    */
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (value == 0U)
 415:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 416:Drivers/CMSIS/Include/cmsis_gcc.h ****     return 32U;
 417:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 418:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_clz(value);
 419:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 420:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 421:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 422:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 423:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 424:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 425:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 426:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 427:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (8 bit)
 428:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 8 bit value.
 429:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 430:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 431:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 432:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDREXB(volatile uint8_t *addr)
 433:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 434:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 435:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 436:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 437:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, %1" : "=r" (result) : "Q" (*addr) );
 438:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 439:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 440:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 441:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 442:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 444:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 445:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 446:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 447:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 448:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 449:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (16 bit)
 450:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 16 bit values.
 451:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 452:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 454:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDREXH(volatile uint16_t *addr)
 455:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 456:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 457:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 458:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 459:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, %1" : "=r" (result) : "Q" (*addr) );
 460:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 461:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
ARM GAS  C:\Users\mulwe\AppData\Local\Temp\cciz2f0Q.s 			page 17


 462:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 463:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 464:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 465:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 466:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 467:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 468:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 469:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 471:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (32 bit)
 472:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 32 bit values.
 473:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 474:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 475:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 476:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
 477:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 478:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 479:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 481:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 482:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 484:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 485:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 486:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (8 bit)
 487:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 8 bit values.
 488:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 489:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 490:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 491:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 492:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 493:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXB(uint8_t value, volatile uint8_t *addr)
 494:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 495:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 496:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexb %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 498:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 499:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 500:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 501:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 502:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 503:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (16 bit)
 504:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 16 bit values.
 505:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 506:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 507:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 508:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 509:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 510:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXH(uint16_t value, volatile uint16_t *addr)
 511:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 512:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 513:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexh %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 515:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 516:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 517:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 518:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\mulwe\AppData\Local\Temp\cciz2f0Q.s 			page 18


 519:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 520:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (32 bit)
 521:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 32 bit values.
 522:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 523:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 524:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 525:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 526:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 527:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
 528:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 529:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 530:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 532:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 533:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 534:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 535:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 537:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Remove the exclusive lock
 538:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Removes the exclusive lock which is created by LDREX.
 539:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 540:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __CLREX(void)
 541:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 542:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("clrex" ::: "memory");
 543:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 544:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 545:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 546:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 547:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 548:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 549:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 550:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 551:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 552:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 553:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 554:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 555:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 556:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 557:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 558:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (1..32)
 559:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 560:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 561:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SSAT(ARG1, ARG2) \
 562:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 563:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 564:Drivers/CMSIS/Include/cmsis_gcc.h ****   int32_t __RES, __ARG1 = (ARG1); \
 565:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("ssat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 566:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 567:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 568:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 569:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 570:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 571:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 572:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 573:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 574:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (0..31)
 575:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
ARM GAS  C:\Users\mulwe\AppData\Local\Temp\cciz2f0Q.s 			page 19


 576:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 577:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __USAT(ARG1, ARG2) \
 578:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 579:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 580:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t __RES, __ARG1 = (ARG1); \
 581:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("usat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 582:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 583:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 584:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 585:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 586:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 587:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right with Extend (32 bit)
 588:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Moves each bit of a bitstring right by one bit.
 589:Drivers/CMSIS/Include/cmsis_gcc.h ****            The carry input is shifted in at the left end of the bitstring.
 590:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to rotate
 591:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 592:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 593:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RRX(uint32_t value)
 594:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 595:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 596:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 597:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rrx %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 598:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 599:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 600:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 601:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 602:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 603:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (8 bit)
 604:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 8 bit value.
 605:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 606:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 607:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 608:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDRBT(volatile uint8_t *ptr)
 609:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 610:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 611:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 612:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 613:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, %1" : "=r" (result) : "Q" (*ptr) );
 614:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 615:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 616:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 617:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 618:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 619:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 620:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 621:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 622:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 623:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 624:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 625:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (16 bit)
 626:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 16 bit values.
 627:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 628:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 629:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 630:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDRHT(volatile uint16_t *ptr)
 631:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 632:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
ARM GAS  C:\Users\mulwe\AppData\Local\Temp\cciz2f0Q.s 			page 20


 633:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 634:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 635:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, %1" : "=r" (result) : "Q" (*ptr) );
 636:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 637:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 638:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 639:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 640:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 641:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 642:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 643:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 644:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 645:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 646:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 647:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (32 bit)
 648:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 32 bit values.
 649:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 650:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 651:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 652:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDRT(volatile uint32_t *ptr)
 653:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 654:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 655:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 656:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrt %0, %1" : "=r" (result) : "Q" (*ptr) );
 657:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 658:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 659:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 660:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 661:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 662:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (8 bit)
 663:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 8 bit values.
 664:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 665:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 666:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 667:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRBT(uint8_t value, volatile uint8_t *ptr)
 668:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 669:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strbt %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 670:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 671:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 672:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 673:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 674:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (16 bit)
 675:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 16 bit values.
 676:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 677:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 678:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 679:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRHT(uint16_t value, volatile uint16_t *ptr)
 680:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 681:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strht %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 682:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 683:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 684:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 685:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 686:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (32 bit)
 687:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 32 bit values.
 688:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 689:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
ARM GAS  C:\Users\mulwe\AppData\Local\Temp\cciz2f0Q.s 			page 21


 690:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 691:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRT(uint32_t value, volatile uint32_t *ptr)
 692:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 693:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strt %1, %0" : "=Q" (*ptr) : "r" (value) );
 694:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 695:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 696:Drivers/CMSIS/Include/cmsis_gcc.h **** #else  /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 697:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 698:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 699:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 700:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 701:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 702:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 703:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 704:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (1..32)
 705:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 706:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 707:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int32_t __SSAT(int32_t val, uint32_t sat)
 708:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 709:Drivers/CMSIS/Include/cmsis_gcc.h ****   if ((sat >= 1U) && (sat <= 32U))
 710:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 711:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t max = (int32_t)((1U << (sat - 1U)) - 1U);
 712:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t min = -1 - max ;
 713:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > max)
 714:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 715:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 716:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 717:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < min)
 718:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 719:Drivers/CMSIS/Include/cmsis_gcc.h ****       return min;
 720:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 721:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 722:Drivers/CMSIS/Include/cmsis_gcc.h ****   return val;
 723:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 724:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 725:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 726:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 727:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 728:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 729:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (0..31)
 730:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 731:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 732:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __USAT(int32_t val, uint32_t sat)
 733:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 734:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (sat <= 31U)
 735:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 736:Drivers/CMSIS/Include/cmsis_gcc.h ****     const uint32_t max = ((1U << sat) - 1U);
 737:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > (int32_t)max)
 738:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 739:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 740:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 741:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < 0)
 742:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 743:Drivers/CMSIS/Include/cmsis_gcc.h ****       return 0U;
 744:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 745:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 746:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (uint32_t)val;
ARM GAS  C:\Users\mulwe\AppData\Local\Temp\cciz2f0Q.s 			page 22


 747:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 748:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 749:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 750:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 751:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 752:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 753:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 754:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 755:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 756:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 757:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (8 bit)
 758:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB instruction for 8 bit value.
 759:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 760:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 761:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 762:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAB(volatile uint8_t *ptr)
 763:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 764:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 765:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 766:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldab %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 767:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 768:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 769:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 770:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 771:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 772:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (16 bit)
 773:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH instruction for 16 bit values.
 774:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 775:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 776:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 777:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAH(volatile uint16_t *ptr)
 778:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 779:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 780:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 781:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldah %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 782:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 783:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 784:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 785:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 786:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 787:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (32 bit)
 788:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA instruction for 32 bit values.
 789:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 790:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 791:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 792:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDA(volatile uint32_t *ptr)
 793:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 795:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 796:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("lda %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 797:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 798:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 799:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 800:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 801:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 802:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (8 bit)
 803:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB instruction for 8 bit values.
ARM GAS  C:\Users\mulwe\AppData\Local\Temp\cciz2f0Q.s 			page 23


 804:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 805:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 806:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 807:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLB(uint8_t value, volatile uint8_t *ptr)
 808:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 809:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlb %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 810:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 811:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 812:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 813:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 814:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (16 bit)
 815:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH instruction for 16 bit values.
 816:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 817:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 818:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 819:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLH(uint16_t value, volatile uint16_t *ptr)
 820:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 821:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlh %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 822:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 823:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 824:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 825:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 826:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (32 bit)
 827:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL instruction for 32 bit values.
 828:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 829:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 830:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 831:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STL(uint32_t value, volatile uint32_t *ptr)
 832:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 833:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stl %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 834:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 835:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 836:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 837:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 838:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (8 bit)
 839:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB exclusive instruction for 8 bit value.
 840:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 841:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 842:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 843:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAEXB(volatile uint8_t *ptr)
 844:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 845:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 846:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 847:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexb %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 848:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 849:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 851:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 853:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (16 bit)
 854:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH exclusive instruction for 16 bit values.
 855:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 856:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 857:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 858:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAEXH(volatile uint16_t *ptr)
 859:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 860:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
ARM GAS  C:\Users\mulwe\AppData\Local\Temp\cciz2f0Q.s 			page 24


 861:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 862:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexh %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 863:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 864:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 865:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 866:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 867:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 868:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (32 bit)
 869:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA exclusive instruction for 32 bit values.
 870:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 871:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 872:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 873:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDAEX(volatile uint32_t *ptr)
 874:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 875:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 876:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 877:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaex %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 878:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 879:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 880:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 881:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 882:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 883:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (8 bit)
 884:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB exclusive instruction for 8 bit values.
 885:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 886:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 887:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 888:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 889:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 890:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXB(uint8_t value, volatile uint8_t *ptr)
 891:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 892:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 893:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 894:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexb %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 895:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 896:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 897:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 898:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 899:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 900:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (16 bit)
 901:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH exclusive instruction for 16 bit values.
 902:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 903:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 904:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 905:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 906:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 907:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXH(uint16_t value, volatile uint16_t *ptr)
 908:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 909:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 910:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 911:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexh %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 912:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 913:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 914:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 915:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 916:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 917:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (32 bit)
ARM GAS  C:\Users\mulwe\AppData\Local\Temp\cciz2f0Q.s 			page 25


 918:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL exclusive instruction for 32 bit values.
 919:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 920:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 921:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 922:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 923:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 924:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEX(uint32_t value, volatile uint32_t *ptr)
 925:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 926:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 927:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 928:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlex %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "memo
 929:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 930:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 931:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 932:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 933:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 934:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 935:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@}*/ /* end of group CMSIS_Core_InstructionInterface */
 936:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 937:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 938:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 939:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 940:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 941:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 942:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 943:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 944:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 945:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 946:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing special-purpose register PRIMASK.
 947:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 948:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 949:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 950:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 951:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 952:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 953:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 954:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 955:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 956:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 957:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
 958:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 959:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 960:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 139              		.loc 2 960 27 view .LVU40
 140              	.LBB20:
 961:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 962:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 141              		.loc 2 962 3 view .LVU41
 142              		.syntax unified
 143              	@ 962 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 144 0074 72B6     		cpsid i
 145              	@ 0 "" 2
 146              		.thumb
 147              		.syntax unified
 148              	.L3:
 149              	.LBE20:
 150              	.LBE19:
ARM GAS  C:\Users\mulwe\AppData\Local\Temp\cciz2f0Q.s 			page 26


 304:Core/Src/main.c ****   while (1)
 151              		.loc 1 304 3 view .LVU42
 305:Core/Src/main.c ****   {
 306:Core/Src/main.c ****   }
 152              		.loc 1 306 3 view .LVU43
 304:Core/Src/main.c ****   while (1)
 153              		.loc 1 304 9 view .LVU44
 154 0076 FEE7     		b	.L3
 155              	.L2:
 156              	.LBE18:
 175:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 157              		.loc 1 175 3 view .LVU45
 178:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 158              		.loc 1 178 35 is_stmt 0 view .LVU46
 159 0078 0490     		str	r0, [sp, #16]
 180:Core/Src/main.c **** 
 160              		.loc 1 180 36 view .LVU47
 161 007a 4FF4A052 		mov	r2, #5120
 162 007e 4FF48053 		mov	r3, #4096
 182:Core/Src/main.c ****   {
 163              		.loc 1 182 7 view .LVU48
 164 0082 0321     		movs	r1, #3
 165 0084 02A8     		add	r0, sp, #8
 177:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 166              		.loc 1 177 34 view .LVU49
 167 0086 CDE90254 		strd	r5, r4, [sp, #8]
 178:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 168              		.loc 1 178 3 is_stmt 1 view .LVU50
 179:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 169              		.loc 1 179 3 view .LVU51
 180:Core/Src/main.c **** 
 170              		.loc 1 180 36 is_stmt 0 view .LVU52
 171 008a CDE90523 		strd	r2, r3, [sp, #20]
 182:Core/Src/main.c ****   {
 172              		.loc 1 182 3 is_stmt 1 view .LVU53
 182:Core/Src/main.c ****   {
 173              		.loc 1 182 7 is_stmt 0 view .LVU54
 174 008e FFF7FEFF 		bl	HAL_RCC_ClockConfig
 175              	.LVL3:
 182:Core/Src/main.c ****   {
 176              		.loc 1 182 6 discriminator 1 view .LVU55
 177 0092 08B1     		cbz	r0, .L1
 184:Core/Src/main.c ****   }
 178              		.loc 1 184 5 is_stmt 1 view .LVU56
 179              	.LBB21:
 180              	.LBI21:
 299:Core/Src/main.c **** {
 181              		.loc 1 299 6 view .LVU57
 303:Core/Src/main.c ****   while (1)
 182              		.loc 1 303 3 view .LVU58
 183              	.LBB22:
 184              	.LBI22:
 960:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 185              		.loc 2 960 27 view .LVU59
 186              	.LBB23:
 187              		.loc 2 962 3 view .LVU60
 188              		.syntax unified
ARM GAS  C:\Users\mulwe\AppData\Local\Temp\cciz2f0Q.s 			page 27


 189              	@ 962 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 190 0094 72B6     		cpsid i
 191              	@ 0 "" 2
 192              		.thumb
 193              		.syntax unified
 194              	.L5:
 195              	.LBE23:
 196              	.LBE22:
 304:Core/Src/main.c ****   {
 197              		.loc 1 304 3 view .LVU61
 198              		.loc 1 306 3 view .LVU62
 304:Core/Src/main.c ****   {
 199              		.loc 1 304 9 view .LVU63
 200 0096 FEE7     		b	.L5
 201              	.L1:
 202              	.LBE21:
 186:Core/Src/main.c **** 
 203              		.loc 1 186 1 is_stmt 0 view .LVU64
 204 0098 15B0     		add	sp, sp, #84
 205              	.LCFI2:
 206              		.cfi_def_cfa_offset 12
 207              		@ sp needed
 208 009a 30BD     		pop	{r4, r5, pc}
 209              	.L7:
 210              		.align	2
 211              	.L6:
 212 009c 00380240 		.word	1073887232
 213 00a0 00700040 		.word	1073770496
 214              		.cfi_endproc
 215              	.LFE138:
 217              		.global	__aeabi_uldivmod
 218              		.global	__aeabi_ldivmod
 219              		.section	.text.calculate_mandelbrot_fixed_point_arithmetic,"ax",%progbits
 220              		.align	1
 221              		.global	calculate_mandelbrot_fixed_point_arithmetic
 222              		.syntax unified
 223              		.thumb
 224              		.thumb_func
 226              	calculate_mandelbrot_fixed_point_arithmetic:
 227              	.LVL4:
 228              	.LFB140:
 225:Core/Src/main.c ****   uint64_t mandelbrot_sum = 0;
 229              		.loc 1 225 96 is_stmt 1 view -0
 230              		.cfi_startproc
 231              		@ args = 0, pretend = 0, frame = 72
 232              		@ frame_needed = 0, uses_anonymous_args = 0
 226:Core/Src/main.c **** 	#define S (1<<28)
 233              		.loc 1 226 3 view .LVU66
 229:Core/Src/main.c ****           for (int x = 0; x < width; x++) {
 234              		.loc 1 229 6 view .LVU67
 235              	.LBB24:
 229:Core/Src/main.c ****           for (int x = 0; x < width; x++) {
 236              		.loc 1 229 11 view .LVU68
 229:Core/Src/main.c ****           for (int x = 0; x < width; x++) {
 237              		.loc 1 229 11 is_stmt 0 view .LVU69
 238              	.LBE24:
 225:Core/Src/main.c ****   uint64_t mandelbrot_sum = 0;
ARM GAS  C:\Users\mulwe\AppData\Local\Temp\cciz2f0Q.s 			page 28


 239              		.loc 1 225 96 view .LVU70
 240 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 241              	.LCFI3:
 242              		.cfi_def_cfa_offset 36
 243              		.cfi_offset 4, -36
 244              		.cfi_offset 5, -32
 245              		.cfi_offset 6, -28
 246              		.cfi_offset 7, -24
 247              		.cfi_offset 8, -20
 248              		.cfi_offset 9, -16
 249              		.cfi_offset 10, -12
 250              		.cfi_offset 11, -8
 251              		.cfi_offset 14, -4
 252 0004 93B0     		sub	sp, sp, #76
 253              	.LCFI4:
 254              		.cfi_def_cfa_offset 112
 255              	.LBB33:
 256              	.LBB25:
 257              	.LBB26:
 232:Core/Src/main.c ****         	              int64_t y_scaled = ((int64_t)y * S + height / 2) / height;
 258              		.loc 1 232 55 view .LVU71
 259 0006 4310     		asrs	r3, r0, #1
 260 0008 0993     		str	r3, [sp, #36]
 261              	.LBE26:
 262              	.LBE25:
 229:Core/Src/main.c ****           for (int x = 0; x < width; x++) {
 263              		.loc 1 229 15 view .LVU72
 264 000a 4FF0000A 		mov	r10, #0
 265 000e 4B10     		asrs	r3, r1, #1
 266 0010 0393     		str	r3, [sp, #12]
 267              	.LBE33:
 226:Core/Src/main.c **** 	#define S (1<<28)
 268              		.loc 1 226 12 view .LVU73
 269 0012 CDE905AA 		strd	r10, r10, [sp, #20]
 270 0016 CB17     		asrs	r3, r1, #31
 271 0018 0493     		str	r3, [sp, #16]
 272 001a C317     		asrs	r3, r0, #31
 225:Core/Src/main.c ****   uint64_t mandelbrot_sum = 0;
 273              		.loc 1 225 96 view .LVU74
 274 001c 8146     		mov	r9, r0
 275 001e 8846     		mov	r8, r1
 276 0020 0A92     		str	r2, [sp, #40]
 277 0022 1193     		str	r3, [sp, #68]
 278              	.LVL5:
 279              	.L9:
 280              	.LBB34:
 229:Core/Src/main.c ****           for (int x = 0; x < width; x++) {
 281              		.loc 1 229 24 is_stmt 1 discriminator 1 view .LVU75
 282 0024 C245     		cmp	r10, r8
 283 0026 80F2B680 		bge	.L8
 284 002a 099B     		ldr	r3, [sp, #36]
 285 002c 0193     		str	r3, [sp, #4]
 286 002e 119B     		ldr	r3, [sp, #68]
 287 0030 0293     		str	r3, [sp, #8]
 288              	.LBB31:
 289              	.LBB28:
 232:Core/Src/main.c ****         	              int64_t y_scaled = ((int64_t)y * S + height / 2) / height;
ARM GAS  C:\Users\mulwe\AppData\Local\Temp\cciz2f0Q.s 			page 29


 290              		.loc 1 232 60 is_stmt 0 view .LVU76
 291 0032 4FEAE973 		asr	r3, r9, #31
 292 0036 0F93     		str	r3, [sp, #60]
 233:Core/Src/main.c **** 
 293              		.loc 1 233 73 view .LVU77
 294 0038 4FEAE873 		asr	r3, r8, #31
 295              	.LBE28:
 230:Core/Src/main.c **** 
 296              		.loc 1 230 20 view .LVU78
 297 003c 4FF0000B 		mov	fp, #0
 298              	.LBB29:
 233:Core/Src/main.c **** 
 299              		.loc 1 233 73 view .LVU79
 300 0040 1093     		str	r3, [sp, #64]
 301 0042 4DE0     		b	.L12
 302              	.LVL6:
 303              	.L15:
 232:Core/Src/main.c ****         	              int64_t y_scaled = ((int64_t)y * S + height / 2) / height;
 304              		.loc 1 232 12 is_stmt 1 view .LVU80
 233:Core/Src/main.c **** 
 305              		.loc 1 233 24 view .LVU81
 235:Core/Src/main.c ****         	              int64_t y0 = ((y_scaled * (int64_t)(2.0 * S) + (S >> 1)) >> 28) - (1 * S);
 306              		.loc 1 235 24 view .LVU82
 232:Core/Src/main.c ****         	              int64_t y_scaled = ((int64_t)y * S + height / 2) / height;
 307              		.loc 1 232 20 is_stmt 0 view .LVU83
 308 0044 0F9B     		ldr	r3, [sp, #60]
 309 0046 4A46     		mov	r2, r9
 310 0048 DDE90101 		ldrd	r0, r1, [sp, #4]
 311 004c FFF7FEFF 		bl	__aeabi_ldivmod
 312              	.LVL7:
 235:Core/Src/main.c ****         	              int64_t y0 = ((y_scaled * (int64_t)(2.0 * S) + (S >> 1)) >> 28) - (1 * S);
 313              		.loc 1 235 48 view .LVU84
 314 0050 4FF06054 		mov	r4, #939524096
 315 0054 A0FB0432 		umull	r3, r2, r0, r4
 316 0058 04FB0121 		mla	r1, r4, r1, r2
 235:Core/Src/main.c ****         	              int64_t y0 = ((y_scaled * (int64_t)(2.0 * S) + (S >> 1)) >> 28) - (1 * S);
 317              		.loc 1 235 69 view .LVU85
 318 005c 13F10063 		adds	r3, r3, #134217728
 319 0060 41F10001 		adc	r1, r1, #0
 235:Core/Src/main.c ****         	              int64_t y0 = ((y_scaled * (int64_t)(2.0 * S) + (S >> 1)) >> 28) - (1 * S);
 320              		.loc 1 235 81 view .LVU86
 321 0064 1B0F     		lsrs	r3, r3, #28
 322 0066 43EA0113 		orr	r3, r3, r1, lsl #4
 235:Core/Src/main.c ****         	              int64_t y0 = ((y_scaled * (int64_t)(2.0 * S) + (S >> 1)) >> 28) - (1 * S);
 323              		.loc 1 235 32 view .LVU87
 324 006a 13F15843 		adds	r3, r3, #-671088640
 235:Core/Src/main.c ****         	              int64_t y0 = ((y_scaled * (int64_t)(2.0 * S) + (S >> 1)) >> 28) - (1 * S);
 325              		.loc 1 235 81 view .LVU88
 326 006e 4FEA2171 		asr	r1, r1, #28
 235:Core/Src/main.c ****         	              int64_t y0 = ((y_scaled * (int64_t)(2.0 * S) + (S >> 1)) >> 28) - (1 * S);
 327              		.loc 1 235 32 view .LVU89
 328 0072 0B93     		str	r3, [sp, #44]
 329 0074 41F1FF33 		adc	r3, r1, #-1
 330 0078 0C93     		str	r3, [sp, #48]
 331              	.LVL8:
 236:Core/Src/main.c **** 
 332              		.loc 1 236 24 is_stmt 1 view .LVU90
ARM GAS  C:\Users\mulwe\AppData\Local\Temp\cciz2f0Q.s 			page 30


 233:Core/Src/main.c **** 
 333              		.loc 1 233 32 is_stmt 0 view .LVU91
 334 007a 4246     		mov	r2, r8
 335 007c 109B     		ldr	r3, [sp, #64]
 336              	.LVL9:
 233:Core/Src/main.c **** 
 337              		.loc 1 233 32 view .LVU92
 338 007e DDE90301 		ldrd	r0, r1, [sp, #12]
 339 0082 FFF7FEFF 		bl	__aeabi_ldivmod
 340              	.LVL10:
 236:Core/Src/main.c **** 
 341              		.loc 1 236 48 view .LVU93
 342 0086 4907     		lsls	r1, r1, #29
 343 0088 41EAD001 		orr	r1, r1, r0, lsr #3
 344 008c 4007     		lsls	r0, r0, #29
 236:Core/Src/main.c **** 
 345              		.loc 1 236 69 view .LVU94
 346 008e 10F10063 		adds	r3, r0, #134217728
 347 0092 41F10001 		adc	r1, r1, #0
 236:Core/Src/main.c **** 
 348              		.loc 1 236 81 view .LVU95
 349 0096 1B0F     		lsrs	r3, r3, #28
 350 0098 43EA0113 		orr	r3, r3, r1, lsl #4
 236:Core/Src/main.c **** 
 351              		.loc 1 236 32 view .LVU96
 352 009c 13F17043 		adds	r3, r3, #-268435456
 236:Core/Src/main.c **** 
 353              		.loc 1 236 81 view .LVU97
 354 00a0 4FEA2171 		asr	r1, r1, #28
 240:Core/Src/main.c **** 
 355              		.loc 1 240 28 view .LVU98
 356 00a4 4FF00007 		mov	r7, #0
 236:Core/Src/main.c **** 
 357              		.loc 1 236 32 view .LVU99
 358 00a8 0D93     		str	r3, [sp, #52]
 359 00aa 41F1FF33 		adc	r3, r1, #-1
 360 00ae 0E93     		str	r3, [sp, #56]
 361              	.LVL11:
 238:Core/Src/main.c ****         	              int64_t yi = 0;
 362              		.loc 1 238 24 is_stmt 1 view .LVU100
 239:Core/Src/main.c ****         	              int iteration = 0;
 363              		.loc 1 239 24 view .LVU101
 240:Core/Src/main.c **** 
 364              		.loc 1 240 24 view .LVU102
 242:Core/Src/main.c ****         	                     ((xi * xi + yi * yi) <= (4LL * S * S))) {
 365              		.loc 1 242 24 view .LVU103
 239:Core/Src/main.c ****         	              int iteration = 0;
 366              		.loc 1 239 32 is_stmt 0 view .LVU104
 367 00b0 3D46     		mov	r5, r7
 368 00b2 3B46     		mov	r3, r7
 369              	.LVL12:
 238:Core/Src/main.c ****         	              int64_t yi = 0;
 370              		.loc 1 238 32 view .LVU105
 371 00b4 3C46     		mov	r4, r7
 372 00b6 3A46     		mov	r2, r7
 373              	.LVL13:
 374              	.L10:
ARM GAS  C:\Users\mulwe\AppData\Local\Temp\cciz2f0Q.s 			page 31


 242:Core/Src/main.c ****         	                     ((xi * xi + yi * yi) <= (4LL * S * S))) {
 375              		.loc 1 242 58 is_stmt 1 view .LVU106
 376 00b8 0A99     		ldr	r1, [sp, #40]
 377 00ba 8F42     		cmp	r7, r1
 378 00bc 1DDB     		blt	.L11
 379              	.L14:
 257:Core/Src/main.c ****         	          }
 380              		.loc 1 257 24 view .LVU107
 257:Core/Src/main.c ****         	          }
 381              		.loc 1 257 39 is_stmt 0 view .LVU108
 382 00be 059B     		ldr	r3, [sp, #20]
 383              	.LVL14:
 257:Core/Src/main.c ****         	          }
 384              		.loc 1 257 39 view .LVU109
 385 00c0 FB18     		adds	r3, r7, r3
 386 00c2 0593     		str	r3, [sp, #20]
 387              	.LVL15:
 257:Core/Src/main.c ****         	          }
 388              		.loc 1 257 39 view .LVU110
 389 00c4 069B     		ldr	r3, [sp, #24]
 390 00c6 43EBE773 		adc	r3, r3, r7, asr #31
 391 00ca 0693     		str	r3, [sp, #24]
 392              	.LVL16:
 257:Core/Src/main.c ****         	          }
 393              		.loc 1 257 39 view .LVU111
 394              	.LBE29:
 230:Core/Src/main.c **** 
 395              		.loc 1 230 39 is_stmt 1 discriminator 2 view .LVU112
 396 00cc 019B     		ldr	r3, [sp, #4]
 397              	.LVL17:
 230:Core/Src/main.c **** 
 398              		.loc 1 230 39 is_stmt 0 discriminator 2 view .LVU113
 399 00ce 13F18053 		adds	r3, r3, #268435456
 400 00d2 0193     		str	r3, [sp, #4]
 401              	.LVL18:
 230:Core/Src/main.c **** 
 402              		.loc 1 230 39 discriminator 2 view .LVU114
 403 00d4 029B     		ldr	r3, [sp, #8]
 404 00d6 43F10003 		adc	r3, r3, #0
 405 00da 0BF1010B 		add	fp, fp, #1
 406              	.LVL19:
 230:Core/Src/main.c **** 
 407              		.loc 1 230 39 discriminator 2 view .LVU115
 408 00de 0293     		str	r3, [sp, #8]
 409              	.LVL20:
 410              	.L12:
 230:Core/Src/main.c **** 
 411              		.loc 1 230 29 is_stmt 1 discriminator 1 view .LVU116
 412 00e0 CB45     		cmp	fp, r9
 413 00e2 AFDB     		blt	.L15
 414              	.LBE31:
 229:Core/Src/main.c ****           for (int x = 0; x < width; x++) {
 415              		.loc 1 229 35 discriminator 2 view .LVU117
 416 00e4 039B     		ldr	r3, [sp, #12]
 417 00e6 13F18053 		adds	r3, r3, #268435456
 418 00ea 0393     		str	r3, [sp, #12]
 419 00ec 049B     		ldr	r3, [sp, #16]
ARM GAS  C:\Users\mulwe\AppData\Local\Temp\cciz2f0Q.s 			page 32


 420 00ee 43F10003 		adc	r3, r3, #0
 421 00f2 0AF1010A 		add	r10, r10, #1
 422              	.LVL21:
 229:Core/Src/main.c ****           for (int x = 0; x < width; x++) {
 423              		.loc 1 229 35 is_stmt 0 discriminator 2 view .LVU118
 424 00f6 0493     		str	r3, [sp, #16]
 425 00f8 94E7     		b	.L9
 426              	.LVL22:
 427              	.L11:
 428              	.LBB32:
 429              	.LBB30:
 243:Core/Src/main.c **** 
 430              		.loc 1 243 36 view .LVU119
 431 00fa 04FB02F1 		mul	r1, r4, r2
 432 00fe A4FB046C 		umull	r6, ip, r4, r4
 433 0102 0CEB410C 		add	ip, ip, r1, lsl #1
 243:Core/Src/main.c **** 
 434              		.loc 1 243 46 view .LVU120
 435 0106 03FB05FE 		mul	lr, r3, r5
 436 010a A3FB0301 		umull	r0, r1, r3, r3
 437 010e 01EB4E01 		add	r1, r1, lr, lsl #1
 438 0112 0791     		str	r1, [sp, #28]
 439 0114 0890     		str	r0, [sp, #32]
 243:Core/Src/main.c **** 
 440              		.loc 1 243 41 view .LVU121
 441 0116 3118     		adds	r1, r6, r0
 442 0118 0798     		ldr	r0, [sp, #28]
 242:Core/Src/main.c ****         	                     ((xi * xi + yi * yi) <= (4LL * S * S))) {
 443              		.loc 1 242 58 discriminator 1 view .LVU122
 444 011a 4FF0000E 		mov	lr, #0
 243:Core/Src/main.c **** 
 445              		.loc 1 243 41 view .LVU123
 446 011e 4CEB0000 		adc	r0, ip, r0
 242:Core/Src/main.c ****         	                     ((xi * xi + yi * yi) <= (4LL * S * S))) {
 447              		.loc 1 242 58 discriminator 1 view .LVU124
 448 0122 8E45     		cmp	lr, r1
 449 0124 4FF08061 		mov	r1, #67108864
 450 0128 71EB000E 		sbcs	lr, r1, r0
 451 012c C7DB     		blt	.L14
 452              	.LBB27:
 246:Core/Src/main.c ****         	                  int64_t y_sq = (yi * yi + (S >> 1)) >> 28;
 453              		.loc 1 246 28 is_stmt 1 view .LVU125
 454              	.LVL23:
 247:Core/Src/main.c ****         	                  int64_t xy   = (xi * yi + (S >> 1)) >> 28;
 455              		.loc 1 247 28 view .LVU126
 248:Core/Src/main.c **** 
 456              		.loc 1 248 28 view .LVU127
 248:Core/Src/main.c **** 
 457              		.loc 1 248 47 is_stmt 0 view .LVU128
 458 012e 6543     		muls	r5, r4, r5
 459              	.LVL24:
 248:Core/Src/main.c **** 
 460              		.loc 1 248 47 view .LVU129
 461 0130 03FB0255 		mla	r5, r3, r2, r5
 462 0134 A4FB0334 		umull	r3, r4, r4, r3
 463              	.LVL25:
 248:Core/Src/main.c **** 
ARM GAS  C:\Users\mulwe\AppData\Local\Temp\cciz2f0Q.s 			page 33


 464              		.loc 1 248 52 view .LVU130
 465 0138 13F10063 		adds	r3, r3, #134217728
 247:Core/Src/main.c ****         	                  int64_t xy   = (xi * yi + (S >> 1)) >> 28;
 466              		.loc 1 247 52 view .LVU131
 467 013c 0899     		ldr	r1, [sp, #32]
 248:Core/Src/main.c **** 
 468              		.loc 1 248 52 view .LVU132
 469 013e 45EB0405 		adc	r5, r5, r4
 246:Core/Src/main.c ****         	                  int64_t y_sq = (yi * yi + (S >> 1)) >> 28;
 470              		.loc 1 246 52 view .LVU133
 471 0142 16F10066 		adds	r6, r6, #134217728
 472              	.LVL26:
 246:Core/Src/main.c ****         	                  int64_t y_sq = (yi * yi + (S >> 1)) >> 28;
 473              		.loc 1 246 52 view .LVU134
 474 0146 4CF10002 		adc	r2, ip, #0
 247:Core/Src/main.c ****         	                  int64_t xy   = (xi * yi + (S >> 1)) >> 28;
 475              		.loc 1 247 52 view .LVU135
 476 014a 11F10064 		adds	r4, r1, #134217728
 477 014e 0799     		ldr	r1, [sp, #28]
 246:Core/Src/main.c ****         	                  int64_t y_sq = (yi * yi + (S >> 1)) >> 28;
 478              		.loc 1 246 36 view .LVU136
 479 0150 4FEA1676 		lsr	r6, r6, #28
 480              	.LVL27:
 247:Core/Src/main.c ****         	                  int64_t xy   = (xi * yi + (S >> 1)) >> 28;
 481              		.loc 1 247 52 view .LVU137
 482 0154 41F10001 		adc	r1, r1, #0
 247:Core/Src/main.c ****         	                  int64_t xy   = (xi * yi + (S >> 1)) >> 28;
 483              		.loc 1 247 36 view .LVU138
 484 0158 240F     		lsrs	r4, r4, #28
 246:Core/Src/main.c ****         	                  int64_t y_sq = (yi * yi + (S >> 1)) >> 28;
 485              		.loc 1 246 36 view .LVU139
 486 015a 46EA0216 		orr	r6, r6, r2, lsl #4
 247:Core/Src/main.c ****         	                  int64_t xy   = (xi * yi + (S >> 1)) >> 28;
 487              		.loc 1 247 36 view .LVU140
 488 015e 44EA0114 		orr	r4, r4, r1, lsl #4
 250:Core/Src/main.c ****         	                  yi = (xy << 1) + y0;
 489              		.loc 1 250 51 view .LVU141
 490 0162 341B     		subs	r4, r6, r4
 246:Core/Src/main.c ****         	                  int64_t y_sq = (yi * yi + (S >> 1)) >> 28;
 491              		.loc 1 246 36 view .LVU142
 492 0164 4FEA2272 		asr	r2, r2, #28
 250:Core/Src/main.c ****         	                  yi = (xy << 1) + y0;
 493              		.loc 1 250 51 view .LVU143
 494 0168 62EB2172 		sbc	r2, r2, r1, asr #28
 250:Core/Src/main.c ****         	                  yi = (xy << 1) + y0;
 495              		.loc 1 250 36 view .LVU144
 496 016c 0B99     		ldr	r1, [sp, #44]
 497 016e 6418     		adds	r4, r4, r1
 498 0170 0C99     		ldr	r1, [sp, #48]
 248:Core/Src/main.c **** 
 499              		.loc 1 248 36 view .LVU145
 500 0172 4FEA1373 		lsr	r3, r3, #28
 501 0176 43EA0513 		orr	r3, r3, r5, lsl #4
 250:Core/Src/main.c ****         	                  yi = (xy << 1) + y0;
 502              		.loc 1 250 36 view .LVU146
 503 017a 41EB0202 		adc	r2, r1, r2
 251:Core/Src/main.c ****         	                  xi = temp_xi;
ARM GAS  C:\Users\mulwe\AppData\Local\Temp\cciz2f0Q.s 			page 34


 504              		.loc 1 251 31 view .LVU147
 505 017e 0D99     		ldr	r1, [sp, #52]
 251:Core/Src/main.c ****         	                  xi = temp_xi;
 506              		.loc 1 251 37 view .LVU148
 507 0180 DB18     		adds	r3, r3, r3
 248:Core/Src/main.c **** 
 508              		.loc 1 248 36 view .LVU149
 509 0182 4FEA2575 		asr	r5, r5, #28
 250:Core/Src/main.c ****         	                  yi = (xy << 1) + y0;
 510              		.loc 1 250 28 is_stmt 1 view .LVU150
 511              	.LVL28:
 251:Core/Src/main.c ****         	                  xi = temp_xi;
 512              		.loc 1 251 28 view .LVU151
 251:Core/Src/main.c ****         	                  xi = temp_xi;
 513              		.loc 1 251 37 is_stmt 0 view .LVU152
 514 0186 6D41     		adcs	r5, r5, r5
 251:Core/Src/main.c ****         	                  xi = temp_xi;
 515              		.loc 1 251 31 view .LVU153
 516 0188 5B18     		adds	r3, r3, r1
 517 018a 0E99     		ldr	r1, [sp, #56]
 254:Core/Src/main.c ****         	              }
 518              		.loc 1 254 37 view .LVU154
 519 018c 07F10107 		add	r7, r7, #1
 520              	.LVL29:
 251:Core/Src/main.c ****         	                  xi = temp_xi;
 521              		.loc 1 251 31 view .LVU155
 522 0190 41EB0505 		adc	r5, r1, r5
 523              	.LVL30:
 252:Core/Src/main.c **** 
 524              		.loc 1 252 28 is_stmt 1 view .LVU156
 254:Core/Src/main.c ****         	              }
 525              		.loc 1 254 28 view .LVU157
 254:Core/Src/main.c ****         	              }
 526              		.loc 1 254 28 is_stmt 0 view .LVU158
 527 0194 90E7     		b	.L10
 528              	.LVL31:
 529              	.L8:
 254:Core/Src/main.c ****         	              }
 530              		.loc 1 254 28 view .LVU159
 531              	.LBE27:
 532              	.LBE30:
 533              	.LBE32:
 534              	.LBE34:
 263:Core/Src/main.c **** 
 535              		.loc 1 263 1 view .LVU160
 536 0196 DDE90501 		ldrd	r0, r1, [sp, #20]
 537 019a 13B0     		add	sp, sp, #76
 538              	.LCFI5:
 539              		.cfi_def_cfa_offset 36
 540              		@ sp needed
 541 019c BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 263:Core/Src/main.c **** 
 542              		.loc 1 263 1 view .LVU161
 543              		.cfi_endproc
 544              	.LFE140:
 546              		.section	.text.startup.main,"ax",%progbits
 547              		.align	1
ARM GAS  C:\Users\mulwe\AppData\Local\Temp\cciz2f0Q.s 			page 35


 548              		.global	main
 549              		.syntax unified
 550              		.thumb
 551              		.thumb_func
 553              	main:
 554              	.LFB137:
  77:Core/Src/main.c **** 	StartTime = HAL_GetTick();
 555              		.loc 1 77 1 is_stmt 1 view -0
 556              		.cfi_startproc
 557              		@ args = 0, pretend = 0, frame = 40
 558              		@ frame_needed = 0, uses_anonymous_args = 0
  78:Core/Src/main.c **** 
 559              		.loc 1 78 2 view .LVU163
  77:Core/Src/main.c **** 	StartTime = HAL_GetTick();
 560              		.loc 1 77 1 is_stmt 0 view .LVU164
 561 0000 70B5     		push	{r4, r5, r6, lr}
 562              	.LCFI6:
 563              		.cfi_def_cfa_offset 16
 564              		.cfi_offset 4, -16
 565              		.cfi_offset 5, -12
 566              		.cfi_offset 6, -8
 567              		.cfi_offset 14, -4
 568 0002 8AB0     		sub	sp, sp, #40
 569              	.LCFI7:
 570              		.cfi_def_cfa_offset 56
  78:Core/Src/main.c **** 
 571              		.loc 1 78 14 view .LVU165
 572 0004 FFF7FEFF 		bl	HAL_GetTick
 573              	.LVL32:
  78:Core/Src/main.c **** 
 574              		.loc 1 78 12 discriminator 1 view .LVU166
 575 0008 354D     		ldr	r5, .L19
 576              	.LBB41:
 122:Core/Src/main.c **** 		  //EndTime = HAL_GetTick();
 577              		.loc 1 122 14 discriminator 1 view .LVU167
 578 000a 364E     		ldr	r6, .L19+4
 579              	.LBE41:
  78:Core/Src/main.c **** 
 580              		.loc 1 78 12 discriminator 1 view .LVU168
 581 000c 2860     		str	r0, [r5]
  87:Core/Src/main.c **** 
 582              		.loc 1 87 3 is_stmt 1 view .LVU169
 583 000e FFF7FEFF 		bl	HAL_Init
 584              	.LVL33:
  94:Core/Src/main.c **** 
 585              		.loc 1 94 3 view .LVU170
 586 0012 FFF7FEFF 		bl	SystemClock_Config
 587              	.LVL34:
 101:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 588              		.loc 1 101 3 view .LVU171
 589              	.LBB42:
 590              	.LBI42:
 193:Core/Src/main.c **** {
 591              		.loc 1 193 13 view .LVU172
 592              	.LBB43:
 195:Core/Src/main.c ****   /* USER CODE BEGIN MX_GPIO_Init_1 */
 593              		.loc 1 195 3 view .LVU173
ARM GAS  C:\Users\mulwe\AppData\Local\Temp\cciz2f0Q.s 			page 36


 195:Core/Src/main.c ****   /* USER CODE BEGIN MX_GPIO_Init_1 */
 594              		.loc 1 195 20 is_stmt 0 view .LVU174
 595 0016 1422     		movs	r2, #20
 596 0018 0021     		movs	r1, #0
 597 001a 0DEB0200 		add	r0, sp, r2
 598 001e FFF7FEFF 		bl	memset
 599              	.LVL35:
 201:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
 600              		.loc 1 201 3 is_stmt 1 view .LVU175
 601              	.LBB44:
 201:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
 602              		.loc 1 201 3 view .LVU176
 603 0022 0024     		movs	r4, #0
 604 0024 304B     		ldr	r3, .L19+8
 605 0026 0294     		str	r4, [sp, #8]
 201:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
 606              		.loc 1 201 3 view .LVU177
 607 0028 1A6B     		ldr	r2, [r3, #48]
 608              	.LBE44:
 206:Core/Src/main.c ****                           |GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7, GPIO_PIN_RESET);
 609              		.loc 1 206 3 is_stmt 0 view .LVU178
 610 002a 3048     		ldr	r0, .L19+12
 611              	.LBB45:
 201:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
 612              		.loc 1 201 3 view .LVU179
 613 002c 42F00402 		orr	r2, r2, #4
 614 0030 1A63     		str	r2, [r3, #48]
 201:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
 615              		.loc 1 201 3 is_stmt 1 view .LVU180
 616 0032 1A6B     		ldr	r2, [r3, #48]
 617 0034 02F00402 		and	r2, r2, #4
 618 0038 0292     		str	r2, [sp, #8]
 201:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
 619              		.loc 1 201 3 view .LVU181
 620 003a 029A     		ldr	r2, [sp, #8]
 621              	.LBE45:
 201:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
 622              		.loc 1 201 3 view .LVU182
 202:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 623              		.loc 1 202 3 view .LVU183
 624              	.LBB46:
 202:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 625              		.loc 1 202 3 view .LVU184
 626 003c 0394     		str	r4, [sp, #12]
 202:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 627              		.loc 1 202 3 view .LVU185
 628 003e 1A6B     		ldr	r2, [r3, #48]
 629 0040 42F08002 		orr	r2, r2, #128
 630 0044 1A63     		str	r2, [r3, #48]
 202:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 631              		.loc 1 202 3 view .LVU186
 632 0046 1A6B     		ldr	r2, [r3, #48]
 633 0048 02F08002 		and	r2, r2, #128
 634 004c 0392     		str	r2, [sp, #12]
 202:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 635              		.loc 1 202 3 view .LVU187
 636 004e 039A     		ldr	r2, [sp, #12]
ARM GAS  C:\Users\mulwe\AppData\Local\Temp\cciz2f0Q.s 			page 37


 637              	.LBE46:
 202:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 638              		.loc 1 202 3 view .LVU188
 203:Core/Src/main.c **** 
 639              		.loc 1 203 3 view .LVU189
 640              	.LBB47:
 203:Core/Src/main.c **** 
 641              		.loc 1 203 3 view .LVU190
 642 0050 0494     		str	r4, [sp, #16]
 203:Core/Src/main.c **** 
 643              		.loc 1 203 3 view .LVU191
 644 0052 1A6B     		ldr	r2, [r3, #48]
 645 0054 42F00202 		orr	r2, r2, #2
 646 0058 1A63     		str	r2, [r3, #48]
 203:Core/Src/main.c **** 
 647              		.loc 1 203 3 view .LVU192
 648 005a 1B6B     		ldr	r3, [r3, #48]
 649 005c 03F00203 		and	r3, r3, #2
 650              	.LBE47:
 206:Core/Src/main.c ****                           |GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7, GPIO_PIN_RESET);
 651              		.loc 1 206 3 is_stmt 0 view .LVU193
 652 0060 2246     		mov	r2, r4
 653              	.LBB48:
 203:Core/Src/main.c **** 
 654              		.loc 1 203 3 view .LVU194
 655 0062 0493     		str	r3, [sp, #16]
 203:Core/Src/main.c **** 
 656              		.loc 1 203 3 is_stmt 1 view .LVU195
 657              	.LBE48:
 206:Core/Src/main.c ****                           |GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7, GPIO_PIN_RESET);
 658              		.loc 1 206 3 is_stmt 0 view .LVU196
 659 0064 FF21     		movs	r1, #255
 660              	.LBB49:
 203:Core/Src/main.c **** 
 661              		.loc 1 203 3 view .LVU197
 662 0066 049B     		ldr	r3, [sp, #16]
 663              	.LBE49:
 203:Core/Src/main.c **** 
 664              		.loc 1 203 3 is_stmt 1 view .LVU198
 206:Core/Src/main.c ****                           |GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7, GPIO_PIN_RESET);
 665              		.loc 1 206 3 view .LVU199
 666 0068 FFF7FEFF 		bl	HAL_GPIO_WritePin
 667              	.LVL36:
 211:Core/Src/main.c ****                           |GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7;
 668              		.loc 1 211 3 view .LVU200
 213:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 669              		.loc 1 213 24 is_stmt 0 view .LVU201
 670 006c FF22     		movs	r2, #255
 671 006e 0123     		movs	r3, #1
 216:Core/Src/main.c **** 
 672              		.loc 1 216 3 view .LVU202
 673 0070 1E48     		ldr	r0, .L19+12
 674 0072 05A9     		add	r1, sp, #20
 215:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 675              		.loc 1 215 25 view .LVU203
 676 0074 CDE90744 		strd	r4, r4, [sp, #28]
 213:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
ARM GAS  C:\Users\mulwe\AppData\Local\Temp\cciz2f0Q.s 			page 38


 677              		.loc 1 213 24 view .LVU204
 678 0078 CDE90523 		strd	r2, r3, [sp, #20]
 214:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 679              		.loc 1 214 3 is_stmt 1 view .LVU205
 216:Core/Src/main.c **** 
 680              		.loc 1 216 3 view .LVU206
 681 007c FFF7FEFF 		bl	HAL_GPIO_Init
 682              	.LVL37:
 683              	.LBE43:
 684              	.LBE42:
 685              	.LBB50:
 113:Core/Src/main.c **** 
 686              		.loc 1 113 4 is_stmt 0 view .LVU207
 687 0080 04F18044 		add	r4, r4, #1073741824
 688 0084 04F50134 		add	r4, r4, #132096
 689              	.L18:
 690              	.LBE50:
 107:Core/Src/main.c ****   {
 691              		.loc 1 107 3 is_stmt 1 view .LVU208
 692              	.LBB51:
 113:Core/Src/main.c **** 
 693              		.loc 1 113 4 view .LVU209
 694 0088 0122     		movs	r2, #1
 695 008a 1146     		mov	r1, r2
 696 008c 2046     		mov	r0, r4
 697 008e FFF7FEFF 		bl	HAL_GPIO_WritePin
 698              	.LVL38:
 116:Core/Src/main.c **** 
 699              		.loc 1 116 4 view .LVU210
 119:Core/Src/main.c **** 		  volatile uint16_t height = 256;                                //image_Height[i];
 700              		.loc 1 119 5 view .LVU211
 119:Core/Src/main.c **** 		  volatile uint16_t height = 256;                                //image_Height[i];
 701              		.loc 1 119 23 is_stmt 0 view .LVU212
 702 0092 4FF48073 		mov	r3, #256
 703 0096 ADF80630 		strh	r3, [sp, #6]	@ movhi
 120:Core/Src/main.c **** 		  //StartTime = HAL_GetTick();
 704              		.loc 1 120 5 is_stmt 1 view .LVU213
 120:Core/Src/main.c **** 		  //StartTime = HAL_GetTick();
 705              		.loc 1 120 23 is_stmt 0 view .LVU214
 706 009a ADF81430 		strh	r3, [sp, #20]	@ movhi
 122:Core/Src/main.c **** 		  //EndTime = HAL_GetTick();
 707              		.loc 1 122 5 is_stmt 1 view .LVU215
 122:Core/Src/main.c **** 		  //EndTime = HAL_GetTick();
 708              		.loc 1 122 16 is_stmt 0 view .LVU216
 709 009e BDF80600 		ldrh	r0, [sp, #6]
 710 00a2 BDF81410 		ldrh	r1, [sp, #20]
 711 00a6 6422     		movs	r2, #100
 712 00a8 89B2     		uxth	r1, r1
 713 00aa 80B2     		uxth	r0, r0
 714 00ac FFF7FEFF 		bl	calculate_mandelbrot_fixed_point_arithmetic
 715              	.LVL39:
 129:Core/Src/main.c **** 
 716              		.loc 1 129 4 view .LVU217
 717 00b0 0122     		movs	r2, #1
 122:Core/Src/main.c **** 		  //EndTime = HAL_GetTick();
 718              		.loc 1 122 14 discriminator 1 view .LVU218
 719 00b2 C6E90001 		strd	r0, [r6]
ARM GAS  C:\Users\mulwe\AppData\Local\Temp\cciz2f0Q.s 			page 39


 129:Core/Src/main.c **** 
 720              		.loc 1 129 4 is_stmt 1 view .LVU219
 721 00b6 0221     		movs	r1, #2
 722 00b8 2046     		mov	r0, r4
 723 00ba FFF7FEFF 		bl	HAL_GPIO_WritePin
 724              	.LVL40:
 132:Core/Src/main.c **** 		  //TODO: Turn OFF LEDs
 725              		.loc 1 132 4 view .LVU220
 726 00be 4FF4FA60 		mov	r0, #2000
 727 00c2 FFF7FEFF 		bl	HAL_Delay
 728              	.LVL41:
 134:Core/Src/main.c **** 			EndTime = HAL_GetTick();
 729              		.loc 1 134 4 view .LVU221
 730 00c6 0022     		movs	r2, #0
 731 00c8 0321     		movs	r1, #3
 732 00ca 2046     		mov	r0, r4
 733 00cc FFF7FEFF 		bl	HAL_GPIO_WritePin
 734              	.LVL42:
 135:Core/Src/main.c **** 			ExecutionTime = EndTime - StartTime;
 735              		.loc 1 135 4 view .LVU222
 135:Core/Src/main.c **** 			ExecutionTime = EndTime - StartTime;
 736              		.loc 1 135 14 is_stmt 0 view .LVU223
 737 00d0 FFF7FEFF 		bl	HAL_GetTick
 738              	.LVL43:
 136:Core/Src/main.c **** 	  //}
 739              		.loc 1 136 4 is_stmt 1 discriminator 1 view .LVU224
 136:Core/Src/main.c **** 	  //}
 740              		.loc 1 136 28 is_stmt 0 discriminator 1 view .LVU225
 741 00d4 2B68     		ldr	r3, [r5]
 742 00d6 C01A     		subs	r0, r0, r3
 136:Core/Src/main.c **** 	  //}
 743              		.loc 1 136 18 discriminator 1 view .LVU226
 744 00d8 054B     		ldr	r3, .L19+16
 745 00da 1860     		str	r0, [r3]
 746              	.LBE51:
 107:Core/Src/main.c ****   {
 747              		.loc 1 107 9 is_stmt 1 view .LVU227
 748 00dc D4E7     		b	.L18
 749              	.L20:
 750 00de 00BF     		.align	2
 751              	.L19:
 752 00e0 00000000 		.word	StartTime
 753 00e4 00000000 		.word	CheckSum
 754 00e8 00380240 		.word	1073887232
 755 00ec 00040240 		.word	1073873920
 756 00f0 00000000 		.word	ExecutionTime
 757              		.cfi_endproc
 758              	.LFE137:
 760              		.global	__aeabi_i2d
 761              		.global	__aeabi_ddiv
 762              		.global	__aeabi_dmul
 763              		.global	__aeabi_dsub
 764              		.global	__aeabi_dadd
 765              		.global	__aeabi_dcmple
 766              		.section	.text.calculate_mandelbrot_double,"ax",%progbits
 767              		.align	1
 768              		.global	calculate_mandelbrot_double
ARM GAS  C:\Users\mulwe\AppData\Local\Temp\cciz2f0Q.s 			page 40


 769              		.syntax unified
 770              		.thumb
 771              		.thumb_func
 773              	calculate_mandelbrot_double:
 774              	.LVL44:
 775              	.LFB141:
 266:Core/Src/main.c ****     uint64_t mandelbrot_sum = 0;
 776              		.loc 1 266 81 view -0
 777              		.cfi_startproc
 778              		@ args = 0, pretend = 0, frame = 64
 779              		@ frame_needed = 0, uses_anonymous_args = 0
 267:Core/Src/main.c **** 
 780              		.loc 1 267 5 view .LVU229
 269:Core/Src/main.c ****     double inv_height = 2.0 / height;
 781              		.loc 1 269 5 view .LVU230
 266:Core/Src/main.c ****     uint64_t mandelbrot_sum = 0;
 782              		.loc 1 266 81 is_stmt 0 view .LVU231
 783 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 784              	.LCFI8:
 785              		.cfi_def_cfa_offset 36
 786              		.cfi_offset 4, -36
 787              		.cfi_offset 5, -32
 788              		.cfi_offset 6, -28
 789              		.cfi_offset 7, -24
 790              		.cfi_offset 8, -20
 791              		.cfi_offset 9, -16
 792              		.cfi_offset 10, -12
 793              		.cfi_offset 11, -8
 794              		.cfi_offset 14, -4
 795 0004 91B0     		sub	sp, sp, #68
 796              	.LCFI9:
 797              		.cfi_def_cfa_offset 104
 266:Core/Src/main.c ****     uint64_t mandelbrot_sum = 0;
 798              		.loc 1 266 81 view .LVU232
 799 0006 8946     		mov	r9, r1
 800 0008 0F92     		str	r2, [sp, #60]
 801 000a 0E90     		str	r0, [sp, #56]
 269:Core/Src/main.c ****     double inv_height = 2.0 / height;
 802              		.loc 1 269 29 view .LVU233
 803 000c FFF7FEFF 		bl	__aeabi_i2d
 804              	.LVL45:
 269:Core/Src/main.c ****     double inv_height = 2.0 / height;
 805              		.loc 1 269 29 view .LVU234
 806 0010 0246     		mov	r2, r0
 807 0012 0B46     		mov	r3, r1
 269:Core/Src/main.c ****     double inv_height = 2.0 / height;
 808              		.loc 1 269 12 view .LVU235
 809 0014 0020     		movs	r0, #0
 810 0016 4849     		ldr	r1, .L30+8
 811 0018 FFF7FEFF 		bl	__aeabi_ddiv
 812              	.LVL46:
 813 001c CDE90601 		strd	r0, [sp, #24]
 814              	.LVL47:
 270:Core/Src/main.c **** 
 815              		.loc 1 270 5 is_stmt 1 view .LVU236
 270:Core/Src/main.c **** 
 816              		.loc 1 270 29 is_stmt 0 view .LVU237
ARM GAS  C:\Users\mulwe\AppData\Local\Temp\cciz2f0Q.s 			page 41


 817 0020 4846     		mov	r0, r9
 818              	.LVL48:
 270:Core/Src/main.c **** 
 819              		.loc 1 270 29 view .LVU238
 820 0022 FFF7FEFF 		bl	__aeabi_i2d
 821              	.LVL49:
 822 0026 0246     		mov	r2, r0
 823 0028 0B46     		mov	r3, r1
 270:Core/Src/main.c **** 
 824              		.loc 1 270 12 view .LVU239
 825 002a 0020     		movs	r0, #0
 826 002c 4FF08041 		mov	r1, #1073741824
 827 0030 FFF7FEFF 		bl	__aeabi_ddiv
 828              	.LVL50:
 829 0034 CDE90801 		strd	r0, [sp, #32]
 830              	.LVL51:
 272:Core/Src/main.c ****         double y0 = y * inv_height - 1.0;
 831              		.loc 1 272 5 is_stmt 1 view .LVU240
 832              	.LBB52:
 272:Core/Src/main.c ****         double y0 = y * inv_height - 1.0;
 833              		.loc 1 272 10 view .LVU241
 272:Core/Src/main.c ****         double y0 = y * inv_height - 1.0;
 834              		.loc 1 272 14 is_stmt 0 view .LVU242
 835 0038 4FF0000A 		mov	r10, #0
 836              	.LBE52:
 267:Core/Src/main.c **** 
 837              		.loc 1 267 14 view .LVU243
 838 003c 5546     		mov	r5, r10
 839 003e D046     		mov	r8, r10
 840              	.LVL52:
 841              	.L22:
 842              	.LBB60:
 272:Core/Src/main.c ****         double y0 = y * inv_height - 1.0;
 843              		.loc 1 272 23 is_stmt 1 discriminator 1 view .LVU244
 844 0040 CA45     		cmp	r10, r9
 845 0042 04DB     		blt	.L29
 846              	.LBE60:
 291:Core/Src/main.c **** }
 847              		.loc 1 291 5 view .LVU245
 292:Core/Src/main.c **** /* USER CODE END 4 */
 848              		.loc 1 292 1 is_stmt 0 view .LVU246
 849 0044 2846     		mov	r0, r5
 850 0046 4146     		mov	r1, r8
 851 0048 11B0     		add	sp, sp, #68
 852              	.LCFI10:
 853              		.cfi_remember_state
 854              		.cfi_def_cfa_offset 36
 855              		@ sp needed
 856 004a BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 857              	.LVL53:
 858              	.L29:
 859              	.LCFI11:
 860              		.cfi_restore_state
 861              	.LBB61:
 862              	.LBB53:
 273:Core/Src/main.c **** 
 863              		.loc 1 273 9 is_stmt 1 view .LVU247
ARM GAS  C:\Users\mulwe\AppData\Local\Temp\cciz2f0Q.s 			page 42


 273:Core/Src/main.c **** 
 864              		.loc 1 273 23 is_stmt 0 view .LVU248
 865 004e 5046     		mov	r0, r10
 866 0050 FFF7FEFF 		bl	__aeabi_i2d
 867              	.LVL54:
 868 0054 DDE90823 		ldrd	r2, [sp, #32]
 869 0058 FFF7FEFF 		bl	__aeabi_dmul
 870              	.LVL55:
 273:Core/Src/main.c **** 
 871              		.loc 1 273 16 view .LVU249
 872 005c 374B     		ldr	r3, .L30+12
 873 005e 0022     		movs	r2, #0
 874 0060 FFF7FEFF 		bl	__aeabi_dsub
 875              	.LVL56:
 876 0064 CDE90A01 		strd	r0, [sp, #40]
 877              	.LVL57:
 275:Core/Src/main.c ****             double x0 = x * inv_width - 2.5;
 878              		.loc 1 275 9 is_stmt 1 view .LVU250
 879              	.LBB54:
 275:Core/Src/main.c ****             double x0 = x * inv_width - 2.5;
 880              		.loc 1 275 14 view .LVU251
 275:Core/Src/main.c ****             double x0 = x * inv_width - 2.5;
 881              		.loc 1 275 18 is_stmt 0 view .LVU252
 882 0068 4FF0000B 		mov	fp, #0
 883              	.LVL58:
 884              	.L23:
 275:Core/Src/main.c ****             double x0 = x * inv_width - 2.5;
 885              		.loc 1 275 27 is_stmt 1 discriminator 1 view .LVU253
 886 006c 0E9B     		ldr	r3, [sp, #56]
 887 006e 9B45     		cmp	fp, r3
 888 0070 02DB     		blt	.L28
 889              	.LBE54:
 890              	.LBE53:
 272:Core/Src/main.c ****         double y0 = y * inv_height - 1.0;
 891              		.loc 1 272 34 discriminator 2 view .LVU254
 892 0072 0AF1010A 		add	r10, r10, #1
 893              	.LVL59:
 272:Core/Src/main.c ****         double y0 = y * inv_height - 1.0;
 894              		.loc 1 272 34 is_stmt 0 discriminator 2 view .LVU255
 895 0076 E3E7     		b	.L22
 896              	.L28:
 897              	.LBB59:
 898              	.LBB58:
 899              	.LBB55:
 276:Core/Src/main.c **** 
 900              		.loc 1 276 13 is_stmt 1 view .LVU256
 276:Core/Src/main.c **** 
 901              		.loc 1 276 27 is_stmt 0 view .LVU257
 902 0078 5846     		mov	r0, fp
 903 007a FFF7FEFF 		bl	__aeabi_i2d
 904              	.LVL60:
 905 007e DDE90623 		ldrd	r2, [sp, #24]
 906 0082 FFF7FEFF 		bl	__aeabi_dmul
 907              	.LVL61:
 276:Core/Src/main.c **** 
 908              		.loc 1 276 20 view .LVU258
 909 0086 2E4B     		ldr	r3, .L30+16
ARM GAS  C:\Users\mulwe\AppData\Local\Temp\cciz2f0Q.s 			page 43


 910 0088 0022     		movs	r2, #0
 911 008a FFF7FEFF 		bl	__aeabi_dsub
 912              	.LVL62:
 278:Core/Src/main.c ****             int iteration = 0;
 913              		.loc 1 278 30 view .LVU259
 914 008e 9FED287B 		vldr.64	d7, .L30
 276:Core/Src/main.c **** 
 915              		.loc 1 276 20 view .LVU260
 916 0092 CDE90C01 		strd	r0, [sp, #48]
 917              	.LVL63:
 278:Core/Src/main.c ****             int iteration = 0;
 918              		.loc 1 278 13 is_stmt 1 view .LVU261
 279:Core/Src/main.c **** 
 919              		.loc 1 279 13 view .LVU262
 281:Core/Src/main.c ****                 double temp = xi*xi - yi*yi + x0;
 920              		.loc 1 281 13 view .LVU263
 278:Core/Src/main.c ****             int iteration = 0;
 921              		.loc 1 278 30 is_stmt 0 view .LVU264
 922 0096 8DED027B 		vstr.64	d7, [sp, #8]
 278:Core/Src/main.c ****             int iteration = 0;
 923              		.loc 1 278 20 view .LVU265
 924 009a 8DED007B 		vstr.64	d7, [sp]
 279:Core/Src/main.c **** 
 925              		.loc 1 279 17 view .LVU266
 926 009e 0024     		movs	r4, #0
 927              	.LVL64:
 928              	.L24:
 281:Core/Src/main.c ****                 double temp = xi*xi - yi*yi + x0;
 929              		.loc 1 281 47 is_stmt 1 view .LVU267
 930 00a0 0F9B     		ldr	r3, [sp, #60]
 931 00a2 9C42     		cmp	r4, r3
 932 00a4 05DB     		blt	.L25
 933              	.L27:
 288:Core/Src/main.c ****         }
 934              		.loc 1 288 13 view .LVU268
 288:Core/Src/main.c ****         }
 935              		.loc 1 288 28 is_stmt 0 view .LVU269
 936 00a6 6519     		adds	r5, r4, r5
 937              	.LVL65:
 288:Core/Src/main.c ****         }
 938              		.loc 1 288 28 view .LVU270
 939 00a8 48EBE478 		adc	r8, r8, r4, asr #31
 940              	.LVL66:
 288:Core/Src/main.c ****         }
 941              		.loc 1 288 28 view .LVU271
 942              	.LBE55:
 275:Core/Src/main.c ****             double x0 = x * inv_width - 2.5;
 943              		.loc 1 275 37 is_stmt 1 discriminator 2 view .LVU272
 944 00ac 0BF1010B 		add	fp, fp, #1
 945              	.LVL67:
 275:Core/Src/main.c ****             double x0 = x * inv_width - 2.5;
 946              		.loc 1 275 37 is_stmt 0 discriminator 2 view .LVU273
 947 00b0 DCE7     		b	.L23
 948              	.L25:
 949              	.LBB57:
 281:Core/Src/main.c ****                 double temp = xi*xi - yi*yi + x0;
 950              		.loc 1 281 53 discriminator 1 view .LVU274
ARM GAS  C:\Users\mulwe\AppData\Local\Temp\cciz2f0Q.s 			page 44


 951 00b2 DDE90023 		ldrd	r2, [sp]
 952 00b6 1046     		mov	r0, r2
 953 00b8 1946     		mov	r1, r3
 954 00ba FFF7FEFF 		bl	__aeabi_dmul
 955              	.LVL68:
 281:Core/Src/main.c ****                 double temp = xi*xi - yi*yi + x0;
 956              		.loc 1 281 61 discriminator 1 view .LVU275
 957 00be DDE90223 		ldrd	r2, [sp, #8]
 281:Core/Src/main.c ****                 double temp = xi*xi - yi*yi + x0;
 958              		.loc 1 281 53 discriminator 1 view .LVU276
 959 00c2 0646     		mov	r6, r0
 960 00c4 0F46     		mov	r7, r1
 281:Core/Src/main.c ****                 double temp = xi*xi - yi*yi + x0;
 961              		.loc 1 281 61 discriminator 1 view .LVU277
 962 00c6 1046     		mov	r0, r2
 963 00c8 1946     		mov	r1, r3
 964 00ca FFF7FEFF 		bl	__aeabi_dmul
 965              	.LVL69:
 966 00ce CDE90401 		strd	r0, [sp, #16]
 281:Core/Src/main.c ****                 double temp = xi*xi - yi*yi + x0;
 967              		.loc 1 281 57 discriminator 1 view .LVU278
 968 00d2 0246     		mov	r2, r0
 969 00d4 0B46     		mov	r3, r1
 970 00d6 3046     		mov	r0, r6
 971 00d8 3946     		mov	r1, r7
 972 00da FFF7FEFF 		bl	__aeabi_dadd
 973              	.LVL70:
 281:Core/Src/main.c ****                 double temp = xi*xi - yi*yi + x0;
 974              		.loc 1 281 47 discriminator 1 view .LVU279
 975 00de 194B     		ldr	r3, .L30+20
 976 00e0 0022     		movs	r2, #0
 977 00e2 FFF7FEFF 		bl	__aeabi_dcmple
 978              	.LVL71:
 979 00e6 0028     		cmp	r0, #0
 980 00e8 DDD0     		beq	.L27
 981              	.LBB56:
 282:Core/Src/main.c ****                 yi = 2.0 * xi * yi + y0;
 982              		.loc 1 282 17 is_stmt 1 view .LVU280
 282:Core/Src/main.c ****                 yi = 2.0 * xi * yi + y0;
 983              		.loc 1 282 37 is_stmt 0 view .LVU281
 984 00ea DDE90423 		ldrd	r2, [sp, #16]
 985 00ee 3046     		mov	r0, r6
 986 00f0 3946     		mov	r1, r7
 987 00f2 FFF7FEFF 		bl	__aeabi_dsub
 988              	.LVL72:
 282:Core/Src/main.c ****                 yi = 2.0 * xi * yi + y0;
 989              		.loc 1 282 24 view .LVU282
 990 00f6 DDE90C23 		ldrd	r2, [sp, #48]
 991 00fa FFF7FEFF 		bl	__aeabi_dadd
 992              	.LVL73:
 283:Core/Src/main.c ****                 xi = temp;
 993              		.loc 1 283 26 view .LVU283
 994 00fe DDE90023 		ldrd	r2, [sp]
 282:Core/Src/main.c ****                 yi = 2.0 * xi * yi + y0;
 995              		.loc 1 282 24 view .LVU284
 996 0102 0646     		mov	r6, r0
 997 0104 0F46     		mov	r7, r1
ARM GAS  C:\Users\mulwe\AppData\Local\Temp\cciz2f0Q.s 			page 45


 998              	.LVL74:
 283:Core/Src/main.c ****                 xi = temp;
 999              		.loc 1 283 17 is_stmt 1 view .LVU285
 283:Core/Src/main.c ****                 xi = temp;
 1000              		.loc 1 283 26 is_stmt 0 view .LVU286
 1001 0106 1046     		mov	r0, r2
 1002 0108 1946     		mov	r1, r3
 1003 010a FFF7FEFF 		bl	__aeabi_dadd
 1004              	.LVL75:
 283:Core/Src/main.c ****                 xi = temp;
 1005              		.loc 1 283 31 view .LVU287
 1006 010e DDE90223 		ldrd	r2, [sp, #8]
 1007 0112 FFF7FEFF 		bl	__aeabi_dmul
 1008              	.LVL76:
 283:Core/Src/main.c ****                 xi = temp;
 1009              		.loc 1 283 20 view .LVU288
 1010 0116 DDE90A23 		ldrd	r2, [sp, #40]
 1011 011a FFF7FEFF 		bl	__aeabi_dadd
 1012              	.LVL77:
 285:Core/Src/main.c ****             }
 1013              		.loc 1 285 26 view .LVU289
 1014 011e 0134     		adds	r4, r4, #1
 1015              	.LVL78:
 283:Core/Src/main.c ****                 xi = temp;
 1016              		.loc 1 283 20 view .LVU290
 1017 0120 CDE90201 		strd	r0, [sp, #8]
 1018              	.LVL79:
 284:Core/Src/main.c ****                 iteration++;
 1019              		.loc 1 284 17 is_stmt 1 view .LVU291
 285:Core/Src/main.c ****             }
 1020              		.loc 1 285 17 view .LVU292
 284:Core/Src/main.c ****                 iteration++;
 1021              		.loc 1 284 20 is_stmt 0 view .LVU293
 1022 0124 CDE90067 		strd	r6, [sp]
 1023 0128 BAE7     		b	.L24
 1024              	.L31:
 1025 012a 00BFAFF3 		.align	3
 1025      0080
 1026              	.L30:
 1027 0130 00000000 		.word	0
 1028 0134 00000000 		.word	0
 1029 0138 00000C40 		.word	1074528256
 1030 013c 0000F03F 		.word	1072693248
 1031 0140 00000440 		.word	1074003968
 1032 0144 00001040 		.word	1074790400
 1033              	.LBE56:
 1034              	.LBE57:
 1035              	.LBE58:
 1036              	.LBE59:
 1037              	.LBE61:
 1038              		.cfi_endproc
 1039              	.LFE141:
 1041              		.section	.text.Error_Handler,"ax",%progbits
 1042              		.align	1
 1043              		.global	Error_Handler
 1044              		.syntax unified
 1045              		.thumb
ARM GAS  C:\Users\mulwe\AppData\Local\Temp\cciz2f0Q.s 			page 46


 1046              		.thumb_func
 1048              	Error_Handler:
 1049              	.LFB142:
 300:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 1050              		.loc 1 300 1 is_stmt 1 view -0
 1051              		.cfi_startproc
 1052              		@ Volatile: function does not return.
 1053              		@ args = 0, pretend = 0, frame = 0
 1054              		@ frame_needed = 0, uses_anonymous_args = 0
 1055              		@ link register save eliminated.
 303:Core/Src/main.c ****   while (1)
 1056              		.loc 1 303 3 view .LVU295
 1057              	.LBB62:
 1058              	.LBI62:
 960:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 1059              		.loc 2 960 27 view .LVU296
 1060              	.LBB63:
 1061              		.loc 2 962 3 view .LVU297
 1062              		.syntax unified
 1063              	@ 962 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1064 0000 72B6     		cpsid i
 1065              	@ 0 "" 2
 1066              		.thumb
 1067              		.syntax unified
 1068              	.L33:
 1069              	.LBE63:
 1070              	.LBE62:
 304:Core/Src/main.c ****   {
 1071              		.loc 1 304 3 view .LVU298
 1072              		.loc 1 306 3 view .LVU299
 304:Core/Src/main.c ****   {
 1073              		.loc 1 304 9 view .LVU300
 1074 0002 FEE7     		b	.L33
 1075              		.cfi_endproc
 1076              	.LFE142:
 1078              		.global	image_Height
 1079              		.section	.data.image_Height,"aw"
 1080              		.align	2
 1083              	image_Height:
 1084 0000 80000000 		.word	128
 1085 0004 A0000000 		.word	160
 1086 0008 C0000000 		.word	192
 1087 000c E0000000 		.word	224
 1088 0010 00010000 		.word	256
 1089              		.global	image_Width
 1090              		.section	.data.image_Width,"aw"
 1091              		.align	2
 1094              	image_Width:
 1095 0000 80000000 		.word	128
 1096 0004 A0000000 		.word	160
 1097 0008 C0000000 		.word	192
 1098 000c E0000000 		.word	224
 1099 0010 00010000 		.word	256
 1100              		.global	Throughput
 1101              		.section	.bss.Throughput,"aw",%nobits
 1102              		.align	2
 1105              	Throughput:
ARM GAS  C:\Users\mulwe\AppData\Local\Temp\cciz2f0Q.s 			page 47


 1106 0000 00000000 		.space	4
 1107              		.global	ExecutionTime
 1108              		.section	.bss.ExecutionTime,"aw",%nobits
 1109              		.align	2
 1112              	ExecutionTime:
 1113 0000 00000000 		.space	4
 1114              		.global	total_cycles
 1115              		.section	.bss.total_cycles,"aw",%nobits
 1116              		.align	2
 1119              	total_cycles:
 1120 0000 00000000 		.space	4
 1121              		.global	StartTime
 1122              		.section	.bss.StartTime,"aw",%nobits
 1123              		.align	2
 1126              	StartTime:
 1127 0000 00000000 		.space	4
 1128              		.global	CheckSum
 1129              		.section	.bss.CheckSum,"aw",%nobits
 1130              		.align	3
 1133              	CheckSum:
 1134 0000 00000000 		.space	8
 1134      00000000 
 1135              		.text
 1136              	.Letext0:
 1137              		.file 3 "C:\\ST\\STM32CubeIDE_1.19.0\\STM32CubeIDE\\plugins\\com.st.stm32cube.ide.mcu.externaltool
 1138              		.file 4 "C:\\ST\\STM32CubeIDE_1.19.0\\STM32CubeIDE\\plugins\\com.st.stm32cube.ide.mcu.externaltool
 1139              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f446xx.h"
 1140              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 1141              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 1142              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 1143              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 1144              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 1145              		.file 11 "<built-in>"
ARM GAS  C:\Users\mulwe\AppData\Local\Temp\cciz2f0Q.s 			page 48


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\mulwe\AppData\Local\Temp\cciz2f0Q.s:21     .text.SystemClock_Config:00000000 $t
C:\Users\mulwe\AppData\Local\Temp\cciz2f0Q.s:27     .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\mulwe\AppData\Local\Temp\cciz2f0Q.s:212    .text.SystemClock_Config:0000009c $d
C:\Users\mulwe\AppData\Local\Temp\cciz2f0Q.s:220    .text.calculate_mandelbrot_fixed_point_arithmetic:00000000 $t
C:\Users\mulwe\AppData\Local\Temp\cciz2f0Q.s:226    .text.calculate_mandelbrot_fixed_point_arithmetic:00000000 calculate_mandelbrot_fixed_point_arithmetic
C:\Users\mulwe\AppData\Local\Temp\cciz2f0Q.s:547    .text.startup.main:00000000 $t
C:\Users\mulwe\AppData\Local\Temp\cciz2f0Q.s:553    .text.startup.main:00000000 main
C:\Users\mulwe\AppData\Local\Temp\cciz2f0Q.s:752    .text.startup.main:000000e0 $d
C:\Users\mulwe\AppData\Local\Temp\cciz2f0Q.s:1126   .bss.StartTime:00000000 StartTime
C:\Users\mulwe\AppData\Local\Temp\cciz2f0Q.s:1133   .bss.CheckSum:00000000 CheckSum
C:\Users\mulwe\AppData\Local\Temp\cciz2f0Q.s:1112   .bss.ExecutionTime:00000000 ExecutionTime
C:\Users\mulwe\AppData\Local\Temp\cciz2f0Q.s:767    .text.calculate_mandelbrot_double:00000000 $t
C:\Users\mulwe\AppData\Local\Temp\cciz2f0Q.s:773    .text.calculate_mandelbrot_double:00000000 calculate_mandelbrot_double
C:\Users\mulwe\AppData\Local\Temp\cciz2f0Q.s:1027   .text.calculate_mandelbrot_double:00000130 $d
C:\Users\mulwe\AppData\Local\Temp\cciz2f0Q.s:1042   .text.Error_Handler:00000000 $t
C:\Users\mulwe\AppData\Local\Temp\cciz2f0Q.s:1048   .text.Error_Handler:00000000 Error_Handler
C:\Users\mulwe\AppData\Local\Temp\cciz2f0Q.s:1083   .data.image_Height:00000000 image_Height
C:\Users\mulwe\AppData\Local\Temp\cciz2f0Q.s:1080   .data.image_Height:00000000 $d
C:\Users\mulwe\AppData\Local\Temp\cciz2f0Q.s:1094   .data.image_Width:00000000 image_Width
C:\Users\mulwe\AppData\Local\Temp\cciz2f0Q.s:1091   .data.image_Width:00000000 $d
C:\Users\mulwe\AppData\Local\Temp\cciz2f0Q.s:1105   .bss.Throughput:00000000 Throughput
C:\Users\mulwe\AppData\Local\Temp\cciz2f0Q.s:1102   .bss.Throughput:00000000 $d
C:\Users\mulwe\AppData\Local\Temp\cciz2f0Q.s:1109   .bss.ExecutionTime:00000000 $d
C:\Users\mulwe\AppData\Local\Temp\cciz2f0Q.s:1119   .bss.total_cycles:00000000 total_cycles
C:\Users\mulwe\AppData\Local\Temp\cciz2f0Q.s:1116   .bss.total_cycles:00000000 $d
C:\Users\mulwe\AppData\Local\Temp\cciz2f0Q.s:1123   .bss.StartTime:00000000 $d
C:\Users\mulwe\AppData\Local\Temp\cciz2f0Q.s:1130   .bss.CheckSum:00000000 $d

UNDEFINED SYMBOLS
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
__aeabi_uldivmod
__aeabi_ldivmod
HAL_GetTick
HAL_Init
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_Delay
__aeabi_i2d
__aeabi_ddiv
__aeabi_dmul
__aeabi_dsub
__aeabi_dadd
__aeabi_dcmple
